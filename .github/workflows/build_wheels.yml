name: Build Wheels

on:
  pull_request:
    paths:
      - "**.py"
      - "**.pxd"
      - "**.pyx"
  push:
    branches: [main]
  workflow_dispatch:

permissions:
   contents: read  # to fetch code (actions/checkout)

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os[1] }} - ${{ matrix.os[2] }} with Python ${{ matrix.python[0] }}
    runs-on: ${{ matrix.os[0] }}
    
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        os: # see scipy wheels.yml GH actions
          - [ubuntu-22.04, manylinux, x86_64]
          - [macos-11, macosx, x86_64]
          # - [macos-12, macosx_*, arm64]
          - [windows-2019, win, AMD64]

        python: [["cp39", "3.9"], ["cp310", "3.10"], ["cp311", "3.11.0-alpha - 3.11.0"]]
        # python[0] is used to specify the python versions made by cibuildwheel
    
    env:
      IS_32_BIT: ${{ matrix.os[2] == 'x86' }}

    steps:
      - name: Checkout scikit-tree
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4.6.0
        with:
          python-version: 3.9
      
      - name: win_amd64 - install rtools
        run: |
          # mingw-w64
          choco install rtools -y --no-progress --force --version=4.0.0.20220206
          echo "c:\rtools40\ucrt64\bin;" >> $env:GITHUB_PATH
        if: ${{ runner.os == 'Windows' && env.IS_32_BIT == 'false' }}
        
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.13.0
        # Build all wheels here, apart from macosx_arm64, linux_aarch64
        # cibuildwheel is currently unable to pass configuration flags to
        # CIBW_BUILD_FRONTEND https://github.com/pypa/cibuildwheel/issues/1227
        # (pip/build). Cross compilation with meson requires an initial
        # configuration step to create a build directory. The subsequent wheel
        # build then needs to use that directory. This can be done with pip
        # using a command like:
        # python -m pip wheel --config-settings builddir=build .
        # if: >-
        #   ( ! contains(matrix.os[2], 'arm64' ) )
        env:
          CIBW_BUILD: ${{ matrix.python[0] }}-${{ matrix.os[1] }}*
          CIBW_ARCHS: ${{ matrix.os[2] }}
          CIBW_ENVIRONMENT_PASS_LINUX: RUNNER_OS

      - uses: actions/upload-artifact@v3
        with: 
          path: ./wheelhouse/*.whl
          name: ${{ matrix.python[0] }}-${{ matrix.os[1] }}

  # TODO: let's figure out how to build these wheels?
  # build_wheels_macos:
  #   name: Build wheels on macos-11
  #   runs-on: macos-11
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-python@v4.6.0
  #       with:
  #         python-version: 3.9

  #     - name: macosx_arm64 - setup builddir
  #       run: |
  #         python -m pip wheel --config-settings builddir=build .

  #     - name: Build wheels
  #       uses: pypa/cibuildwheel@v2.13.0
  #       env:
  #         CIBW_ARCHS_MACOS: arm64

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         path: ./wheelhouse/*.whl