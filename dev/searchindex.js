Search.setIndex({"docnames": ["api", "auto_examples/index", "auto_examples/plot_iris_dtc", "auto_examples/plot_oblique_axis_aligned_forests_sparse_parity", "auto_examples/plot_oblique_random_forest", "auto_examples/plot_projection_matrices", "auto_examples/sg_execution_times", "generated/sktree.ObliqueRandomForestClassifier", "generated/sktree.ObliqueRandomForestRegressor", "generated/sktree.PatchObliqueRandomForestClassifier", "generated/sktree.PatchObliqueRandomForestRegressor", "generated/sktree.UnsupervisedObliqueRandomForest", "generated/sktree.UnsupervisedRandomForest", "generated/sktree.tree.ObliqueDecisionTreeClassifier", "generated/sktree.tree.ObliqueDecisionTreeRegressor", "generated/sktree.tree.PatchObliqueDecisionTreeClassifier", "generated/sktree.tree.PatchObliqueDecisionTreeRegressor", "generated/sktree.tree.UnsupervisedDecisionTree", "generated/sktree.tree.UnsupervisedObliqueDecisionTree", "index", "install", "modules/ensemble", "modules/supervised_tree", "modules/unsupervised_tree", "use", "user_guide", "whats_new", "whats_new/_contributors", "whats_new/v0.1"], "filenames": ["api.rst", "auto_examples/index.rst", "auto_examples/plot_iris_dtc.rst", "auto_examples/plot_oblique_axis_aligned_forests_sparse_parity.rst", "auto_examples/plot_oblique_random_forest.rst", "auto_examples/plot_projection_matrices.rst", "auto_examples/sg_execution_times.rst", "generated/sktree.ObliqueRandomForestClassifier.rst", "generated/sktree.ObliqueRandomForestRegressor.rst", "generated/sktree.PatchObliqueRandomForestClassifier.rst", "generated/sktree.PatchObliqueRandomForestRegressor.rst", "generated/sktree.UnsupervisedObliqueRandomForest.rst", "generated/sktree.UnsupervisedRandomForest.rst", "generated/sktree.tree.ObliqueDecisionTreeClassifier.rst", "generated/sktree.tree.ObliqueDecisionTreeRegressor.rst", "generated/sktree.tree.PatchObliqueDecisionTreeClassifier.rst", "generated/sktree.tree.PatchObliqueDecisionTreeRegressor.rst", "generated/sktree.tree.UnsupervisedDecisionTree.rst", "generated/sktree.tree.UnsupervisedObliqueDecisionTree.rst", "index.rst", "install.rst", "modules/ensemble.rst", "modules/supervised_tree.rst", "modules/unsupervised_tree.rst", "use.rst", "user_guide.rst", "whats_new.rst", "whats_new/_contributors.rst", "whats_new/v0.1.rst"], "titles": ["API Documentation", "Examples", "Plot the decision surface of decision trees trained on the iris dataset", "Plot oblique forest and axis-aligned random forest predictions on sparse parity simulation", "Plot oblique forest and axis-aligned random forest predictions on cc18 datasets", "Plot the projection matrices of an oblique tree", "Computation times", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree</span></code>.ObliqueRandomForestClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree</span></code>.ObliqueRandomForestRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree</span></code>.PatchObliqueRandomForestClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree</span></code>.PatchObliqueRandomForestRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree</span></code>.UnsupervisedObliqueRandomForest", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree</span></code>.UnsupervisedRandomForest", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree.tree</span></code>.ObliqueDecisionTreeClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree.tree</span></code>.ObliqueDecisionTreeRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree.tree</span></code>.PatchObliqueDecisionTreeClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree.tree</span></code>.PatchObliqueDecisionTreeRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree.tree</span></code>.UnsupervisedDecisionTree", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree.tree</span></code>.UnsupervisedObliqueDecisionTree", "<strong>scikit-tree</strong>", "Installation", "<span class=\"section-number\">3. </span>Oblique Random Forests", "<span class=\"section-number\">1. </span>Supervised Decision Trees", "<span class=\"section-number\">2. </span>Unsupervised Decision Trees", "Examples using scikit-tree", "User guide: contents", "Release History", "&lt;no title&gt;", "What\u2019s new?"], "terms": {"sktree": [0, 2, 3, 4, 5, 20, 22], "scikit": [0, 1, 2, 11, 12, 17, 18, 20, 21, 22, 26, 28], "manifold": [0, 5, 9, 10, 15, 16, 21, 28], "obliqu": [0, 1, 2, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 24, 25, 28], "random": [0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 28], "forest": [0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 22, 24, 25, 28], "decis": [0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25], "tree": [0, 1, 6, 7, 8, 9, 10, 11, 12, 20, 21, 25, 26, 28], "model": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 28], "ar": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26], "tradition": 0, "implement": [0, 5, 13, 14, 21, 22, 28], "axi": [0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 21, 22, 24, 28], "align": [0, 1, 2, 6, 7, 8, 9, 10, 13, 14, 15, 16, 21, 22, 24], "split": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23], "store": [0, 11, 12, 21, 22], "mean": [0, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 25, 28], "outcom": 0, "i": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "e": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22], "label": [0, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23], "vote": [0, 7, 9, 11, 12], "leaf": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "node": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23], "howev": [0, 22], "more": [0, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22], "exot": 0, "possibl": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23], "call": [0, 7, 8, 9, 10, 14, 15, 16], "which": [0, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23], "some": [0, 5, 7, 8, 9, 10, 13, 14, 16, 22, 24], "function": [0, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22], "multipl": [0, 5, 22], "featur": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 25, 26, 27, 28], "column": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 22, 28], "creat": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21], "new": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26], "valu": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22], "thi": [0, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 26], "can": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 28], "take": [0, 2, 11, 12, 17, 18], "form": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "spars": [0, 1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24], "linear": [0, 2], "combin": [0, 2, 7, 8, 11, 13, 14, 18, 21, 22, 23], "even": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "advantag": 0, "structur": [0, 2, 5, 15, 16, 23, 28], "data": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 28], "g": [0, 7, 8, 9, 10, 13, 14, 21, 22], "an": [0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 28], "imag": [0, 5, 15, 16], "sampl": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 28], "indic": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "awar": [0, 15, 16], "fashion": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "class": [0, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23], "gener": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 21, 22, 23, 24], "while": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "everyth": [0, 24], "els": [0, 4], "consist": [0, 4, 5, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 22], "how": [0, 1, 5, 11, 12, 17, 18, 19, 21, 22, 24], "learn": [0, 2, 7, 8, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24], "build": [0, 7, 8, 9, 10, 13, 14, 19, 20], "us": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 23, 25], "classif": [0, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 25], "regress": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 25], "thei": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22], "also": [0, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22], "power": [0, 21], "non": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "parametr": [0, 22], "embed": 0, "cluster": [0, 11, 12, 17, 18, 23], "The": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23], "randomtreesembed": 0, "exampl": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 23], "we": [0, 2, 5, 19, 20, 21, 22, 23, 28], "other": [0, 11, 12, 22], "state": 0, "art": 0, "explicitli": 0, "base": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23], "criterion": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 25, 28], "varianc": [0, 8, 10, 11, 12, 14, 16, 17, 18, 21, 23], "bic": [0, 11, 12, 17, 18, 25], "compris": [0, 15, 16], "those": [0, 7, 8, 9, 10, 13, 14, 21, 22], "avail": [0, 7, 8, 9, 10, 11, 12, 20], "standalon": 0, "demonstr": [1, 5, 24], "algorithm": [1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24], "plot": [1, 6, 7, 13, 15, 21, 24], "predict": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 24], "cc18": [1, 6, 7, 21, 24], "dataset": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 21, 22, 24], "pariti": [1, 6, 7, 21, 24], "simul": [1, 6, 7, 21, 24], "surfac": [1, 5, 6, 13, 24], "train": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24], "iri": [1, 6, 13, 22, 24], "project": [1, 2, 4, 6, 7, 8, 13, 14, 15, 20, 21, 22, 24, 28], "matric": [1, 6, 11, 12, 15, 22, 24, 28], "download": [1, 2, 3, 4, 5, 24], "all": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 26, 28], "python": [1, 2, 3, 4, 5, 20, 24], "sourc": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24], "code": [1, 2, 3, 4, 5, 17, 18, 20, 24], "auto_examples_python": [1, 24], "zip": [1, 2, 24], "jupyt": [1, 2, 3, 4, 5, 24], "notebook": [1, 2, 3, 4, 5, 24], "auto_examples_jupyt": [1, 24], "galleri": [1, 2, 3, 4, 5, 24], "sphinx": [1, 2, 3, 4, 5, 24], "go": [2, 3, 4, 5], "end": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "full": [2, 3, 4, 5], "pair": 2, "see": [2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23], "inform": [2, 3, 7, 9, 11, 12, 13, 15, 16, 21, 22, 23], "estim": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23], "For": [2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23], "each": [2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23], "boundari": [2, 5, 9, 10, 15, 16, 28], "made": 2, "simpl": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "threshold": [2, 22], "rule": 2, "infer": [2, 13, 14, 15, 16], "from": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23], "same": [2, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 21, 22], "regular": 2, "show": [2, 3, 5], "built": [2, 21, 22], "first": [2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22], "load": [2, 4], "copi": 2, "ship": 2, "sklearn": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23], "import": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25], "load_iri": [2, 13, 22], "matplotlib": [2, 3, 4, 5, 20], "pyplot": [2, 3, 4, 5], "plt": [2, 3, 4, 5], "displai": 2, "numpi": [2, 3, 5, 9, 10, 13, 15, 16, 20], "np": [2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "inspect": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "decisionboundarydisplai": 2, "sklearn_fork": [2, 5], "decisiontreeclassifi": [2, 13, 14], "obliquedecisiontreeclassifi": [2, 7, 9, 14, 22], "paramet": [2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23], "n_class": [2, 7, 8, 9, 13, 15], "3": [2, 3, 5, 6, 7, 9, 13, 14, 15, 19, 20, 21], "plot_color": 2, "ryb": 2, "plot_step": 2, "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26], "02": 2, "clf_label": 2, "random_st": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "123456": [2, 3, 4], "clf": [2, 3, 4, 7, 13, 22], "fig": [2, 3, 4, 5], "ax": [2, 3, 4, 5, 22], "subplot": [2, 3, 4, 5], "2": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23], "flatten": [2, 5], "pairidx": 2, "enumer": [2, 3, 4, 5, 7, 8, 9, 10], "1": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26], "onli": [2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "two": [2, 4, 11, 12, 21, 25, 28], "correspond": [2, 7, 9, 10, 13, 14, 15, 16, 17, 18], "x": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23], "y": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "target": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22], "fit": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22], "tight_layout": 2, "h_pad": 2, "5": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 21, 22], "w_pad": 2, "pad": 2, "from_estim": 2, "cmap": [2, 5], "cm": 2, "rdylbu": 2, "response_method": 2, "xlabel": 2, "feature_nam": 2, "ylabel": 2, "point": [2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23], "color": [2, 3, 4, 5], "rang": [2, 3, 5, 15, 16], "idx": [2, 5], "where": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23], "scatter": [2, 5], "c": [2, 13, 14, 15, 16, 20], "target_nam": 2, "edgecolor": 2, "black": [2, 5], "": [2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 26], "15": 2, "suptitl": [2, 5], "f": [2, 3, 4, 5], "legend": [2, 3], "loc": [2, 3], "lower": [2, 22], "right": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "borderpad": 2, "handletextpad": 2, "_": 2, "tight": 2, "home": 2, "circleci": 2, "plot_iris_dtc": [2, 6], "py": [2, 3, 4, 5, 6], "78": 2, "userwarn": 2, "No": 2, "colormap": 2, "provid": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "via": [2, 13, 14, 20, 21], "ignor": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "singl": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "togeth": [2, 22, 23], "plot_tre": 2, "figur": [2, 5], "fill": 2, "true": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23], "titl": [2, 5], "total": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23], "run": [2, 3, 4, 5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 20, 22], "time": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 22], "script": [2, 3, 4, 5], "minut": [2, 3, 4, 5], "784": [2, 6], "second": [2, 3, 4, 5], "memori": [2, 3, 4, 5, 7, 8, 9, 10, 13, 14], "usag": [2, 3, 4, 5], "14": [2, 5, 6], "mb": [2, 3, 4, 5, 6], "ipynb": [2, 3, 4, 5], "A": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "perform": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23], "comparison": [3, 4], "between": [3, 4, 13, 14, 15, 16, 17, 18, 22], "standard": [3, 4, 15, 16, 22], "variat": 3, "noisi": 3, "problem": [3, 7, 9, 13, 15, 19, 25], "itself": [3, 11, 12], "multivari": [3, 5, 15, 16], "xor": 3, "binari": 3, "task": [3, 19], "high": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "dimens": [3, 5, 9, 10, 11, 12, 15, 16, 17, 18, 22], "uniformli": [3, 5], "distribut": [3, 22, 23], "n_sampl": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "number": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23], "p": [3, 7, 9, 21], "limit": [3, 25], "carri": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "about": [3, 22], "defin": [3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23], "odd": 3, "sum": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "across": [3, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18], "greater": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "than": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23], "otherwis": [3, 7, 8, 9, 10], "further": 3, "detail": [3, 4, 5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18], "public": [3, 5, 21], "http": [3, 4, 12, 13, 14, 20, 22], "epub": 3, "siam": 3, "org": [3, 4, 12, 13, 14, 20, 22], "doi": [3, 12, 22], "epdf": 3, "10": [3, 6, 12, 13, 14, 16, 22], "1137": 3, "9781611974973": 3, "56": 3, "It": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23], "took": [3, 4], "7": 3, "datetim": [3, 4], "panda": [3, 4, 11, 12, 17, 18, 28], "pd": [3, 4], "seaborn": [3, 4], "sn": [3, 4], "ensembl": [3, 4, 7, 8, 9, 10, 11, 12, 21], "randomforestclassifi": [3, 4, 7, 9], "model_select": [3, 4, 13, 14, 16], "repeatedkfold": [3, 4], "cross_valid": [3, 4], "obliquerandomforestclassifi": [3, 4, 21], "t0": [3, 4], "now": [3, 4, 5, 20, 28], "def": [3, 4], "sparse_par": 3, "20": [3, 12], "p_star": 3, "random_se": 3, "none": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "kwarg": [3, 4], "seed": [3, 11, 12], "uniform": 3, "zero": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "return": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "get_scor": [3, 4], "n_cv": [3, 4], "n_repeat": [3, 4], "tmp": [3, 4], "cv": [3, 4, 13, 14, 16], "n_split": [3, 4], "test_scor": [3, 4], "score": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "accuraci": [3, 4, 7, 8, 9, 10, 13, 15], "append": [3, 4], "rf": [3, 4, 22], "OF": [3, 4], "df": [3, 4], "datafram": [3, 4, 11, 12, 17, 18], "explod": [3, 4], "astyp": [3, 4, 5], "float": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "reset_index": [3, 4], "inplac": [3, 4], "drop": [3, 4, 22], "grid": [3, 5], "search": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "hyper": 3, "param": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "max_featur": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "n_estim": [3, 4, 7, 8, 9, 10, 11, 12], "100": [3, 4, 5, 7, 8, 9, 10, 11, 12], "max_depth": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "40": 3, "1000": [3, 7], "t_d": 3, "print": [3, 4, 5, 7, 8, 10], "draw": [3, 4, 7, 8, 9, 10, 11, 12], "figsiz": [3, 5], "6": [3, 4, 5, 20], "stripplot": [3, 4], "dodg": [3, 4], "boxplot": [3, 4], "white": [3, 4], "set_titl": [3, 4], "queri": [3, 4], "iloc": [3, 4], "rff": 3, "test": [3, 7, 8, 9, 10, 13, 14, 15, 16, 20], "round": [3, 7, 8, 9, 10], "off": 3, "4": [3, 5, 6, 7, 8, 9, 10, 13, 14, 15], "savefig": 3, "plot_sim_": 3, "jpg": 3, "8": [3, 4, 5, 20], "524": [3, 6], "plot_oblique_axis_aligned_forests_sparse_par": [3, 6], "three": 4, "openml": 4, "benchmark": [4, 19], "suit": 4, "name": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "wdbc": 4, "www": [4, 13, 14], "type": [4, 22, 28], "sort": [4, 23], "id": 4, "1510": 4, "phish": 4, "websit": 4, "4534": 4, "31": 4, "former": 4, "entir": [4, 9, 10, 15, 16], "numer": 4, "latter": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "normin": 4, "third": 4, "dub": 4, "cnae": 4, "9": [4, 5, 20, 28], "statu": 4, "activ": [4, 20], "1468": 4, "ha": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28], "notabl": 4, "larg": [4, 7, 8, 9, 10, 13, 14], "space": [4, 11, 12, 17, 18, 22], "857": 4, "As": [4, 22], "you": [4, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 24], "notic": 4, "outperform": [4, 22], "util": 4, "mechan": 4, "subsampl": 4, "due": 4, "comput": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 28], "constraint": 4, "phishingwebsit": 4, "fetch_openml": 4, "data_id": 4, "load_cc18": 4, "as_fram": 4, "parser": 4, "extract": 4, "d_name": 4, "n": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 28], "int": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "frame": 4, "shape": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "dtype": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "object": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23], "50": 4, "concat": 4, "uniqu": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "set_size_inch": 4, "set_ylabel": 4, "set_xlabel": 4, "33": [4, 6], "002": [4, 6], "67": [4, 6, 28], "plot_oblique_random_forest": [4, 6], "specif": [5, 7, 9, 22], "patchobliquedecisiontreeclassifi": [5, 9], "one": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23], "specifi": [5, 7, 9, 13, 15, 22], "done": [5, 15, 16, 21], "data_dim": [5, 9, 10, 15, 16], "should": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20], "set": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23], "n_row": 5, "n_col": 5, "row": [5, 15, 16], "arrai": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "length": 5, "If": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "n_depth": 5, "allow": [5, 13, 14, 15, 16, 17, 18, 21, 22], "ani": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 28], "still": 5, "compat": [5, 11, 12, 17, 18], "robust": [5, 19], "api": [5, 11, 12, 15, 16, 17, 18, 19, 20, 26, 27, 28], "These": [5, 21], "calcul": [5, 23], "dure": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "hyperrectangl": 5, "start": [5, 20], "size": [5, 7, 8, 9, 10, 13, 14, 15, 16], "squar": [5, 8, 10, 14, 16], "min_patch_dim": [5, 9, 10, 15, 16], "max_patch_dim": [5, 9, 10, 15, 16], "constrain": [5, 22], "within": [5, 11, 12, 13, 14, 15, 16, 17, 18, 20], "bound": 5, "arbitrarili": [5, 8, 10, 14, 16], "hyperparamet": [5, 22], "relat": 5, "modul": [5, 19], "note": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 26], "privat": 5, "cython": [5, 17, 18, 20], "here": [5, 22, 24, 28], "what": [5, 13, 14, 15, 16, 17, 18, 19, 26], "look": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24], "like": [5, 13, 14, 15, 16, 17, 18, 20, 22, 23], "part": 5, "just": [5, 7, 8, 9, 10, 20], "wrapper": 5, "underli": [5, 13, 14, 15, 16], "actual": 5, "To": [5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 20, 24], "relev": [5, 19], "_criterion": 5, "gini": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "_morf_splitt": 5, "bestpatchsplittertest": 5, "dummi": 5, "sake": 5, "min_samples_leaf": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "min_weight_leaf": 5, "randomst": [5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18], "feature_weight": [5, 9, 10, 15, 16], "repeat": 5, "arang": 5, "25": 5, "float32": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "reshap": 5, "float64": [5, 14, 16], "sample_weight": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "ones": 5, "our": [5, 19, 22], "have": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "th": [5, 7, 8, 9, 10, 11, 12], "visual": 5, "appear": 5, "make": [5, 21, 28], "contigu": [5, 9, 10, 15, 16], "dim_contigu": [5, 9, 10, 15, 16], "init_test": 5, "matrix": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "proj_mat": 5, "sample_projection_matrix": 5, "nrow": 5, "ncol": 5, "12": 5, "sharex": 5, "sharei": 5, "squeez": 5, "imshow": 5, "viridi": 5, "xlim": 5, "ylim": 5, "add_subplot": 5, "z": 5, "nonzero": 5, "alpha": [5, 13, 14, 15, 16, 17, 18], "marker": 5, "o": [5, 22, 28], "custom": [5, 11, 12], "set_zlim": 5, "01": 5, "125": 5, "analyz": 5, "necessarili": [5, 21], "certain": 5, "seri": [5, 15, 16], "n_channel": 5, "n_time": 5, "channel": 5, "fals": [5, 7, 8, 9, 10, 11, 12], "223": [5, 6], "plot_projection_matric": [5, 6], "00": 6, "49": 6, "532": 6, "execut": 6, "auto_exampl": 6, "file": [6, 20], "08": 6, "04": 6, "03": 6, "min_samples_split": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "min_weight_fraction_leaf": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "sqrt": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "max_leaf_nod": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "min_impurity_decreas": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "bootstrap": [7, 8, 9, 10, 11, 12, 21], "oob_scor": [7, 8, 9, 10, 11, 12], "n_job": [7, 8, 9, 10, 11, 12], "verbos": [7, 8, 9, 10, 11, 12, 20], "warm_start": [7, 8, 9, 10, 11, 12], "class_weight": [7, 9, 13, 15], "max_sampl": [7, 8, 9, 10, 11, 12], "feature_combin": [7, 8, 11, 13, 14, 18, 21, 22], "classifi": [7, 9, 13, 14, 15], "meta": [7, 8, 9, 10], "similar": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 28], "variou": [7, 8, 9, 10], "sub": [7, 8, 9, 10, 11, 12], "averag": [7, 8, 9, 10, 11, 13, 14, 18, 21], "improv": [7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 21, 22, 28], "control": [7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 21, 22], "over": [7, 8, 9, 10, 15, 16, 21], "default": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "whole": [7, 8, 9, 10], "read": [7, 8, 13, 14], "user": [7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28], "guid": [7, 8, 13, 14, 19, 23, 28], "entropi": [7, 9, 13, 15], "measur": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23], "qualiti": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23], "support": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22], "criteria": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23], "impur": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22], "gain": [7, 9, 13, 15], "maximum": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23], "depth": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "expand": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "until": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "leav": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "pure": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "contain": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "less": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "minimum": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "requir": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "intern": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "consid": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "fraction": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "ceil": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "least": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "left": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "branch": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "mai": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23], "effect": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24], "smooth": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "especi": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "weight": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28], "input": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22], "equal": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "when": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 26], "log2": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "best": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "n_featur": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22], "auto": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "doe": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22], "stop": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "valid": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "partit": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 22], "found": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "grow": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "rel": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23], "reduct": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "unlimit": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "induc": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "decreas": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "equat": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "follow": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23], "n_t": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "n_t_r": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "right_impur": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "n_t_l": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "left_impur": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "current": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22], "child": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "refer": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "pass": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "bool": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "whether": [7, 8, 9, 10, 11, 12, 15, 16, 17, 18], "out": [7, 8, 9, 10, 11, 12, 21], "bag": [7, 8, 9, 10, 11, 12], "job": [7, 8, 9, 10], "parallel": [7, 8, 9, 10, 11, 12], "decision_path": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "appli": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "unless": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "joblib": [7, 8, 9, 10, 11, 12, 20], "parallel_backend": [7, 8, 9, 10], "context": [7, 8, 9, 10], "processor": [7, 8, 9, 10], "glossari": [7, 8, 9, 10, 13, 14, 15, 16], "instanc": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "both": [7, 8, 9, 10, 22], "reus": [7, 8, 9, 10], "solut": [7, 8, 9, 10], "previou": [7, 8, 9, 10, 11, 12], "add": [7, 8, 9, 10, 20, 28], "balanc": [7, 9, 13, 15], "balanced_subsampl": [7, 9], "dict": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "list": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 28], "associ": [7, 9, 12, 13, 15, 22], "class_label": [7, 9, 13, 15], "given": [7, 9, 13, 15, 22, 23], "suppos": [7, 9, 13, 15], "multi": [7, 9, 13, 15, 25], "output": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 25], "order": [7, 8, 9, 13, 14, 15, 16], "multioutput": [7, 8, 9, 10, 13, 14, 15, 16], "includ": [7, 9, 13, 15, 28], "multilabel": [7, 9, 13, 15], "everi": [7, 9, 10, 13, 15, 16, 22], "its": [7, 8, 9, 10, 11, 12, 13, 15, 22], "own": [7, 9, 13, 15], "four": [7, 9, 13, 15], "instead": [7, 8, 9, 10, 13, 14, 15, 16], "mode": [7, 9, 13, 15, 20], "automat": [7, 9, 13, 15], "adjust": [7, 9, 13, 15], "invers": [7, 9, 13, 15], "proport": [7, 9, 13, 15], "frequenc": [7, 9, 13, 15], "bincount": [7, 9, 13, 15], "except": [7, 8, 9, 10, 14, 16, 21], "grown": [7, 8, 9, 10, 13, 14], "multipli": [7, 9, 13, 15], "through": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "method": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23], "thu": [7, 8, 9, 10, 11, 12, 13, 14, 21, 23], "interv": [7, 8, 9, 10, 11, 12], "equival": [7, 8, 13, 14, 22], "tradit": [7, 8, 13, 14], "give": [7, 8, 9, 10, 11, 12, 13, 14], "expect": [7, 8, 10, 13, 14, 15, 16, 21], "must": [7, 8, 13, 14, 17, 18], "alwai": [7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 20, 22], "etc": [7, 8, 9, 10, 13, 14], "lead": [7, 8, 9, 10, 13, 14, 21], "fulli": [7, 8, 9, 10, 13, 14], "unprun": [7, 8, 9, 10, 13, 14], "potenti": [7, 8, 9, 10, 13, 14, 16], "veri": [7, 8, 9, 10, 13, 14], "reduc": [7, 8, 9, 10, 13, 14, 21], "consumpt": [7, 8, 9, 10, 13, 14], "complex": [7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 25], "randomli": [7, 8, 9, 10, 13, 14, 15, 16, 17, 18], "permut": [7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 21], "therefor": [7, 8, 9, 10, 15, 16, 21, 22], "vari": [7, 8, 9, 10, 13, 14, 15, 16, 17, 18], "ident": [7, 8, 9, 10, 13, 14, 15, 16, 17, 18], "sever": [7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 21], "obtain": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "determinist": [7, 8, 9, 10, 13, 14, 15, 16, 17, 18], "behaviour": [7, 8, 9, 10, 13, 14, 15, 16, 17, 18], "fix": [7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 26, 27, 28], "breiman": [7, 8, 13, 14, 21, 22], "machin": [7, 8, 21, 22], "45": [7, 8, 21, 22, 28], "32": [7, 8, 21, 22], "2001": [7, 8, 21, 22], "make_classif": 7, "n_inform": [7, 8, 10], "n_redund": 7, "shuffl": [7, 8, 10], "attribut": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "base_estimator_": [7, 8, 9, 10, 11, 12], "estimators_": [7, 8, 9, 10, 11, 12], "collect": [7, 8, 9, 10, 11, 12], "classes_": [7, 9, 13, 15], "ndarrai": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "n_classes_": [7, 9, 13, 15], "n_features_": [7, 8, 9, 10], "n_features_in_": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "seen": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "feature_names_in_": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "string": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "n_outputs_": [7, 8, 9, 10, 13, 14, 15, 16], "feature_importances_": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "oob_score_": [7, 8, 9, 10, 11, 12], "exist": [7, 8, 9, 10, 11, 12, 22], "oob_decision_function_": [7, 8, 9, 11, 12], "n_output": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "small": [7, 8, 9, 11, 12], "might": [7, 8, 9, 11, 12, 22], "wa": [7, 8, 9, 11, 12, 22], "never": [7, 8, 9, 11, 12], "In": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 28], "case": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "nan": [7, 8, 9, 11, 12], "array_lik": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "convert": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "csr_matrix": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "x_leav": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "datapoint": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "index": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22], "up": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "compute_similarity_matrix": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "sim_matrix": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "among": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "path": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "version": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26], "18": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "n_node": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "element": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "goe": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "csr": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "format": [7, 8, 9, 10, 11, 12, 17, 18], "n_nodes_ptr": [7, 8, 9, 10, 11, 12], "csc_matrix": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "real": [7, 8, 9, 10, 14, 16], "would": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22], "net": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "neg": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "result": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23], "either": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "self": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "get_param": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "deep": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "get": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "subobject": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "map": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "probabl": [7, 9, 11, 12, 13, 15, 22], "That": [7, 9, 11, 12, 13, 14, 15, 16, 17, 18], "highest": [7, 9, 11, 12, 13], "predict_log_proba": [7, 9, 13, 15], "log": [7, 9, 13, 15, 22, 23], "predict_proba": [7, 9, 13, 15], "subset": [7, 9, 13, 15, 22], "harsh": [7, 9, 13, 15], "metric": [7, 9, 11, 12, 13, 15, 23], "sinc": [7, 9, 13, 15, 28], "correctli": [7, 9, 13, 15], "w": [7, 8, 9, 10, 13, 14, 15, 16], "r": [7, 8, 9, 10, 13, 14, 15, 16, 20, 22], "t": [7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 22], "set_param": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "work": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "well": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "nest": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "pipelin": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "compon": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "__": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "so": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "updat": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "properti": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "higher": [7, 8, 9, 10, 11, 12, 21, 22], "normal": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 28], "brought": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "known": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "warn": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "mislead": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "cardin": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "mani": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22], "permutation_import": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "altern": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "root": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "squared_error": [8, 10, 14, 16], "regressor": [8, 10, 14, 16], "absolute_error": [8, 10, 14, 16], "friedman_ms": [8, 10, 14, 16], "poisson": [8, 10, 14, 16], "error": [8, 10, 14, 16], "select": [8, 10, 13, 14, 15, 16, 17, 18, 21], "minim": [8, 10, 13, 14, 15, 16, 17, 18, 22, 23], "l2": [8, 10, 14, 16], "loss": [8, 10, 14, 16, 22], "termin": [8, 10, 14, 16], "friedman": [8, 10, 13, 14, 16, 22], "absolut": [8, 10, 14, 16], "l1": [8, 10, 14, 16], "median": [8, 10, 14, 16], "devianc": [8, 10, 14, 16], "find": [8, 10, 13, 14, 15, 16, 17, 18, 23], "significantli": [8, 10], "slower": [8, 10], "obliquedecisiontreeregressor": [8, 10, 28], "randomforestregressor": [8, 10], "tomita": [8, 9, 10, 15, 16, 21], "journal": 8, "research": [8, 19], "21": [8, 28], "104": 8, "39": 8, "2020": [8, 12], "make_regress": [8, 10], "regr": 8, "86327109": 8, "coeffici": [8, 10, 14, 16], "determin": [8, 10, 14, 16], "frac": [8, 10, 14, 16, 23], "u": [8, 10, 14, 16, 20, 21], "v": [8, 10, 14, 16, 21, 22], "residu": [8, 10, 14, 16], "y_true": [8, 10, 14, 16], "y_pred": [8, 10, 14, 16], "becaus": [8, 10, 14, 16, 22], "wors": [8, 10, 14, 16], "constant": [8, 10, 14, 16], "disregard": [8, 10, 14, 16], "precomput": [8, 10, 14, 16], "kernel": [8, 10, 14, 16], "n_samples_fit": [8, 10, 14, 16], "uniform_averag": [8, 10, 14, 16], "23": [8, 10, 14, 16, 20], "keep": [8, 10, 14, 16], "r2_score": [8, 10, 14, 16], "influenc": [8, 10, 14, 16], "multioutputregressor": [8, 10, 14, 16], "patch": [9, 10, 15, 16, 28], "option": [9, 10, 11, 12, 15, 16, 17, 18, 20], "along": [9, 10, 15, 16, 22], "presum": [9, 10, 15, 16], "un": [9, 10, 15, 16], "vector": [9, 10, 15, 16, 22, 23], "1d": [9, 10, 15, 16], "str": [9, 10, 15, 16], "wrap": [9, 10, 15, 16], "condit": [9, 10, 15, 16], "scipi": [9, 10, 15, 16, 20], "adam": [9, 10, 15, 16, 21, 28], "li": [9, 10, 12, 15, 16, 21, 28], "ronan": [9, 10, 15, 16], "perri": [9, 10, 15, 16], "chester": [9, 10, 15, 16], "huynh": [9, 10, 15, 16], "tyler": [9, 10, 15, 16, 21], "m": [9, 10, 15, 16, 21, 22], "ronak": [9, 10, 15, 16], "mehta": [9, 10, 15, 16], "jesu": [9, 10, 15, 16], "arroyo": [9, 10, 15, 16], "jess": [9, 10, 15, 16], "patsol": [9, 10, 15, 16], "benjamin": [9, 10, 15, 16], "falk": [9, 10, 15, 16], "joshua": [9, 10, 12, 15, 16], "vogelstein": [9, 10, 12, 15, 16], "toward": [9, 10, 15, 16, 21], "close": [9, 10, 15, 16, 21], "gap": [9, 10, 13, 14, 15, 16, 17, 18, 21], "convolut": [9, 10, 15, 16, 21], "network": [9, 10, 15, 16, 21], "arxiv": [9, 10, 15, 16, 21], "preprint": [9, 10, 15, 16, 21], "1909": [9, 10, 15, 16, 21], "11799": [9, 10, 15, 16, 21], "2019": [9, 10, 15, 16, 21], "82818509": 10, "patchobliquedecisiontreeregressor": [10, 28], "oob_prediction_": 10, "twomean": [11, 12, 17, 18], "clustering_func": [11, 12, 17, 18], "clustering_func_arg": [11, 12, 17, 18], "unsupervis": [11, 12, 17, 18, 19, 25, 28], "inher": [11, 12], "simultan": [11, 12], "adapt": [11, 12, 23], "affin": [11, 12, 17, 18], "distanc": [11, 12, 13, 14, 15, 16, 17, 18, 23], "do": [11, 12, 13, 14, 15, 16, 17, 18, 21, 22], "fall": [11, 12], "fastbic": [11, 12, 17, 18, 28], "maxim": [11, 12], "bayesian": [11, 12, 23], "mathemat": [11, 12, 25], "formul": [11, 12, 25], "recommend": [11, 12, 13, 14, 15, 16, 19, 22], "max": [11, 12, 17, 18, 22], "callabl": [11, 12, 17, 18], "By": [11, 12, 17, 18, 21], "calinski_harabasz_scor": [11, 12], "signatur": [11, 12], "predicted_label": [11, 12], "silhouette_scor": [11, 12], "davies_bouldin_scor": [11, 12], "cpu": [11, 12], "construct": [11, 12, 21, 22], "continu": [11, 12], "instant": [11, 12], "agglomerativeclust": [11, 12, 17, 18], "keyword": [11, 12, 17, 18], "argument": [11, 12, 17, 18], "estimator_": [11, 12], "unsuperviseddecisiontre": [11, 12], "templat": [11, 12], "labels_": [11, 12], "similarity_matrix_": [11, 12], "oob": [11, 12], "dissimilarity_matrix_": [11, 12], "dissimilar": [11, 12, 28], "effici": [11, 12, 14, 16, 26, 27, 28], "Not": [11, 12, 17, 18], "present": [11, 12, 17, 18, 22], "convent": [11, 12, 17, 18], "fit_predict": [11, 12, 17, 18], "int64": [11, 12, 17, 18], "fit_transform": [11, 12, 17, 18], "fit_param": [11, 12, 17, 18], "transform": [11, 12, 17, 18], "addit": [11, 12, 17, 18, 22], "x_new": [11, 12, 17, 18], "n_features_new": [11, 12, 17, 18], "set_output": [11, 12, 17, 18], "introduc": [11, 12, 17, 18], "configur": [11, 12, 17, 18], "unchang": [11, 12, 17, 18], "center": [11, 12, 17, 18], "typic": [11, 12, 17, 18, 22], "dens": [11, 12, 17, 18, 22], "meghana": 12, "madhyastha": 12, "perci": 12, "jame": 12, "brown": 12, "veronika": 12, "strnadova": 12, "neelei": 12, "carei": 12, "prieb": 12, "randal": 12, "burn": 12, "geodes": 12, "proceed": 12, "26th": 12, "acm": 12, "sigkdd": 12, "confer": 12, "knowledg": [12, 22], "discoveri": 12, "mine": 12, "kdd": 12, "513": 12, "523": 12, "york": 12, "ny": 12, "usa": 12, "machineri": 12, "url": 12, "1145": 12, "3394486": 12, "3403094": 12, "splitter": [13, 14, 15, 16, 17, 18], "strategi": [13, 14, 15, 16, 17, 18], "choos": [13, 14, 15, 16, 17, 18], "compar": [13, 14, 15, 16, 25], "befor": [13, 14, 15, 16, 17, 18], "them": [13, 14, 15, 16, 17, 18, 21], "But": [13, 14, 15, 16, 17, 18], "differ": [13, 14, 15, 16, 17, 18, 25], "integ": [13, 14, 15, 16, 17, 18], "fact": [13, 14], "better": [13, 14, 21], "caveat": [13, 14], "increas": [13, 14, 21], "willing": [13, 14, 22], "spend": [13, 14, 22], "resourc": [13, 14, 22], "oper": [13, 15, 16], "argmax": 13, "ti": 13, "lowest": 13, "en": [13, 14, 22], "wikipedia": [13, 14, 22], "wiki": [13, 14, 22], "decision_tree_learn": [13, 14, 22], "l": [13, 14, 21, 22, 23], "j": [13, 14, 20, 22], "olshen": [13, 14], "stone": [13, 14], "wadsworth": [13, 14], "belmont": [13, 14], "ca": [13, 14], "1984": [13, 14], "hasti": [13, 14, 22], "tibshirani": [13, 14, 22], "statist": [13, 14, 21, 22], "springer": [13, 14, 22], "2009": [13, 14, 22], "cutler": [13, 14], "stat": [13, 14], "berkelei": [13, 14], "edu": [13, 14], "randomforest": [13, 14], "cc_home": [13, 14], "htm": [13, 14], "cross_val_scor": [13, 14, 16], "93": 13, "86": 13, "max_features_": [13, 14, 15, 16], "tree_": [13, 14, 15, 16, 17, 18], "pleas": [13, 14, 15, 16], "help": [13, 14, 15, 16], "_tree": [13, 14, 15, 16], "feature_combinations_": [13, 14], "taken": [13, 14, 21], "check_input": [13, 14, 15, 16, 17, 18], "17": [13, 14, 15, 16, 17, 18], "bypass": [13, 14, 15, 16, 17, 18], "check": [13, 14, 15, 16, 17, 18], "don": [13, 14, 15, 16, 17, 18], "know": [13, 14, 15, 16, 17, 18], "re": [13, 14, 15, 16, 17, 18], "node_count": [13, 14, 15, 16, 17, 18], "possibli": [13, 14, 15, 16, 17, 18, 22], "cost_complexity_pruning_path": [13, 14, 15, 16, 17, 18], "prune": [13, 14, 15, 16, 17, 18, 22], "cost": [13, 14, 15, 16, 17, 18, 21, 22], "process": [13, 14, 15, 16, 17, 18], "ccp_path": [13, 14, 15, 16, 17, 18], "bunch": [13, 14, 15, 16, 17, 18], "dictionari": [13, 14, 15, 16, 17, 18], "ccp_alpha": [13, 14, 15, 16, 17, 18], "subtre": [13, 14, 15, 16, 17, 18], "get_depth": [13, 14, 15, 16, 17, 18], "get_n_leav": [13, 14, 15, 16, 17, 18], "n_leav": [13, 14, 15, 16, 17, 18], "proba": [13, 15], "decisiontreeregressor": 14, "load_diabet": [14, 16], "return_x_i": [14, 16], "68908909": 14, "35854406": 14, "35223873": 14, "03616902": 14, "56008907": 14, "32235221": 14, "06945264": 14, "1465216": 14, "34597007": 14, "15308512": 14, "morf": [15, 16, 28], "discontigu": [15, 16], "sensor": [15, 16], "2d": [15, 16], "mask": [15, 16], "onto": [15, 16], "data_width": [15, 16], "data_height": [15, 16], "origin": [15, 16, 21, 22], "tt": [15, 16], "last": [15, 16], "height": [15, 16], "width": [15, 16], "exactli": [15, 16, 21], "albeit": [15, 16], "efficienc": [15, 16], "optim": [15, 16, 22], "your": [15, 16, 19], "min_patch_dims_": [15, 16], "max_patch_dims_": [15, 16], "data_dims_": [15, 16], "rg": 16, "10163671": 16, "78786738": 16, "01490768": 16, "32737289": 16, "24816698": 16, "41881754": 16, "0588273": 16, "48722913": 16, "07927208": 16, "15600762": 16, "unsupervisedcriterion": [17, 18], "abid": [17, 18], "unsupervisedsplitt": [17, 18], "assign": [17, 18, 23], "packag": [19, 20], "modern": 19, "supervis": [19, 23, 25], "extend": [19, 22], "achiev": [19, 21], "strong": 19, "encourag": 19, "top": [19, 21], "pull": 19, "request": 19, "walk": 19, "contribut": [19, 21, 28], "licens": 19, "under": 19, "bsd": 19, "document": [19, 21], "evalu": [19, 25], "releas": 19, "histori": 19, "instal": 19, "depend": 19, "pip": 19, "meson": 19, "conda": 19, "pypi": 20, "poetri": 20, "clone": 20, "repositori": 20, "neurodata": 20, "git": 20, "github": 20, "com": 20, "cd": 20, "ideal": 20, "virtual": 20, "environ": 20, "dev": 20, "Then": 20, "build_requir": 20, "txt": 20, "spin": 20, "cli": 20, "local": 20, "abl": [20, 24], "edit": 20, "pend": 20, "isol": 20, "repo": 20, "zipbal": 20, "master": 20, "necessari": 20, "forg": 20, "threadpoolctl": 20, "pytest": 20, "compil": 20, "llvm": 20, "openmp": 20, "next": 20, "directori": 20, "dodiscov": 20, "purpos": 20, "main": 20, "obliquepr": 20, "need": [20, 22, 24], "develop": [20, 28], "pr": 20, "22754": 20, "checkout": 20, "page": [20, 26], "instruct": 20, "obliquerandomforestregressor": [21, 28], "drawn": 21, "replac": 21, "divers": 21, "sometim": 21, "slight": 21, "bia": 21, "aim": 21, "motiv": 21, "therebi": [21, 22], "practic": [21, 25], "often": [21, 23], "signific": 21, "henc": 21, "yield": 21, "overal": 21, "contrast": 21, "b2001": 21, "candid": [21, 22], "intuit": [21, 22], "geurt": 21, "d": 21, "ernst": 21, "wehenkel": 21, "extrem": 21, "63": [21, 28], "42": 21, "2006": 21, "rank": 21, "assess": 21, "respect": [21, 23], "variabl": [21, 22], "final": [21, 22], "larger": 21, "essenti": 21, "abil": 21, "mdi": 21, "l2014": 21, "approach": 21, "li2019": 21, "tomita2015": 21, "suffer": 21, "flaw": 21, "conclus": 21, "deriv": 21, "most": [21, 22], "good": 21, "held": 21, "secondli": 21, "favor": 21, "explor": 21, "whose": 21, "posit": [21, 23], "match": 21, "loupp": 21, "understand": 21, "theori": 21, "phd": 21, "thesi": 21, "lieg": 21, "2014": 21, "et": 21, "al": 21, "1506": 21, "03410": 21, "2015": 21, "ground": 22, "truth": 22, "denot": 22, "describ": 22, "beyond": 22, "dt": 22, "ot": 22, "ref": 22, "rc": 22, "landmark": 22, "paper": 22, "empir": 22, "varieti": [22, 23], "lambda": 22, "tradeoff": 22, "wherea": 22, "curv": 22, "similarli": 22, "anoth": 22, "major": [22, 26, 27, 28], "definit": 22, "n_": 22, "x_i": [22, 23], "recurs": 22, "group": [22, 23], "manner": 22, "orthogon": 22, "a_i": 22, "inner": 22, "product": 22, "langl": 22, "rangl": 22, "entri": 22, "rest": 22, "being": 22, "let": 22, "repres": 22, "q_m": 22, "n_m": 22, "theta": 22, "t_m": 22, "x_j": 22, "leq": 22, "setminu": 22, "e_i": 22, "basi": 22, "elsewher": 22, "h": 22, "exact": 22, "handl": 22, "ad": 22, "_featur": 22, "term": [22, 23], "come": 22, "sparsiti": 22, "consider": 22, "pickl": 22, "disc": 22, "special": 22, "earlier": 22, "runtim": 22, "sai": 22, "desir": 22, "analysi": 22, "much": 22, "storag": 22, "ask": 22, "question": 22, "try": 22, "cross": 22, "procedur": 22, "gridsearchcv": 22, "prior": [22, 23], "There": 22, "moreov": 22, "miss": 22, "imput": 22, "1023": 22, "1010933404324": 22, "predictive_analyt": 22, "quinlan": 22, "c4": 22, "program": 22, "morgan": 22, "kaufmann": 22, "1993": 22, "goal": 23, "identifi": 23, "pattern": 23, "without": 23, "common": 23, "techniqu": 23, "wai": 23, "overview": 23, "cutpoint": 23, "dimension": [23, 28], "cutoff": 23, "min_": 23, "sum_": 23, "hat": 23, "mu": 23, "_1": 23, "_2": 23, "sample_indic": 23, "popular": 23, "seleciton": 23, "likelihood": 23, "speed": 23, "kmean": 23, "flexibl": 23, "mclust": 23, "tri": 23, "gaussian": 23, "mle": 23, "hard": 23, "rather": 23, "soft": 23, "gmm": 23, "simpler": 23, "pi": 23, "mathcal": 23, "x_n": 23, "sigma": 23, "quad": 23, "le": 23, "mu_j": 23, "natur": 23, "notion": 23, "efficaci": 23, "scheme": 23, "adjusted_rand_scor": 23, "tip": [25, 26], "fast": 25, "enhanc": [26, 27, 28], "chang": [26, 27, 28], "link": 26, "subscrib": 26, "librari": 26, "io": 26, "notifi": 26, "11": 28, "jong": 28, "shin": 28, "bug": 28, "outsid": 28, "61": 28, "insid": 28, "arbitrari": 28, "discontinu": 28, "sambit": 28, "64": 28, "per": 28, "patchobliquerandomforestregressor": 28, "suki": 28, "72": 28, "thank": 28, "everyon": 28, "who": 28, "mainten": 28, "incept": 28}, "objects": {"": [[0, 0, 0, "-", "sktree"]], "sktree": [[7, 1, 1, "", "ObliqueRandomForestClassifier"], [8, 1, 1, "", "ObliqueRandomForestRegressor"], [9, 1, 1, "", "PatchObliqueRandomForestClassifier"], [10, 1, 1, "", "PatchObliqueRandomForestRegressor"], [11, 1, 1, "", "UnsupervisedObliqueRandomForest"], [12, 1, 1, "", "UnsupervisedRandomForest"]], "sktree.ObliqueRandomForestClassifier": [[7, 2, 1, "", "apply"], [7, 3, 1, "", "base_estimator_"], [7, 2, 1, "", "compute_similarity_matrix"], [7, 2, 1, "", "decision_path"], [7, 3, 1, "", "feature_importances_"], [7, 2, 1, "", "fit"], [7, 2, 1, "", "get_params"], [7, 2, 1, "", "predict"], [7, 2, 1, "", "predict_log_proba"], [7, 2, 1, "", "predict_proba"], [7, 2, 1, "", "score"], [7, 2, 1, "", "set_params"]], "sktree.ObliqueRandomForestRegressor": [[8, 2, 1, "", "apply"], [8, 3, 1, "", "base_estimator_"], [8, 2, 1, "", "compute_similarity_matrix"], [8, 2, 1, "", "decision_path"], [8, 3, 1, "", "feature_importances_"], [8, 2, 1, "", "fit"], [8, 2, 1, "", "get_params"], [8, 2, 1, "", "predict"], [8, 2, 1, "", "score"], [8, 2, 1, "", "set_params"]], "sktree.PatchObliqueRandomForestClassifier": [[9, 2, 1, "", "apply"], [9, 3, 1, "", "base_estimator_"], [9, 2, 1, "", "compute_similarity_matrix"], [9, 2, 1, "", "decision_path"], [9, 3, 1, "", "feature_importances_"], [9, 2, 1, "", "fit"], [9, 2, 1, "", "get_params"], [9, 2, 1, "", "predict"], [9, 2, 1, "", "predict_log_proba"], [9, 2, 1, "", "predict_proba"], [9, 2, 1, "", "score"], [9, 2, 1, "", "set_params"]], "sktree.PatchObliqueRandomForestRegressor": [[10, 2, 1, "", "apply"], [10, 3, 1, "", "base_estimator_"], [10, 2, 1, "", "compute_similarity_matrix"], [10, 2, 1, "", "decision_path"], [10, 3, 1, "", "feature_importances_"], [10, 2, 1, "", "fit"], [10, 2, 1, "", "get_params"], [10, 2, 1, "", "predict"], [10, 2, 1, "", "score"], [10, 2, 1, "", "set_params"]], "sktree.UnsupervisedObliqueRandomForest": [[11, 2, 1, "", "apply"], [11, 3, 1, "", "base_estimator_"], [11, 2, 1, "", "compute_similarity_matrix"], [11, 2, 1, "", "decision_path"], [11, 3, 1, "", "feature_importances_"], [11, 2, 1, "", "fit"], [11, 2, 1, "", "fit_predict"], [11, 2, 1, "", "fit_transform"], [11, 2, 1, "", "get_params"], [11, 2, 1, "", "predict"], [11, 2, 1, "", "set_output"], [11, 2, 1, "", "set_params"], [11, 2, 1, "", "transform"]], "sktree.UnsupervisedRandomForest": [[12, 2, 1, "", "apply"], [12, 3, 1, "", "base_estimator_"], [12, 2, 1, "", "compute_similarity_matrix"], [12, 2, 1, "", "decision_path"], [12, 3, 1, "", "feature_importances_"], [12, 2, 1, "", "fit"], [12, 2, 1, "", "fit_predict"], [12, 2, 1, "", "fit_transform"], [12, 2, 1, "", "get_params"], [12, 2, 1, "", "predict"], [12, 2, 1, "", "set_output"], [12, 2, 1, "", "set_params"], [12, 2, 1, "", "transform"]], "sktree.tree": [[13, 1, 1, "", "ObliqueDecisionTreeClassifier"], [14, 1, 1, "", "ObliqueDecisionTreeRegressor"], [15, 1, 1, "", "PatchObliqueDecisionTreeClassifier"], [16, 1, 1, "", "PatchObliqueDecisionTreeRegressor"], [17, 1, 1, "", "UnsupervisedDecisionTree"], [18, 1, 1, "", "UnsupervisedObliqueDecisionTree"]], "sktree.tree.ObliqueDecisionTreeClassifier": [[13, 2, 1, "", "apply"], [13, 2, 1, "", "compute_similarity_matrix"], [13, 2, 1, "", "cost_complexity_pruning_path"], [13, 2, 1, "", "decision_path"], [13, 3, 1, "", "feature_importances_"], [13, 2, 1, "", "fit"], [13, 2, 1, "", "get_depth"], [13, 2, 1, "", "get_n_leaves"], [13, 2, 1, "", "get_params"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "predict_log_proba"], [13, 2, 1, "", "predict_proba"], [13, 2, 1, "", "score"], [13, 2, 1, "", "set_params"]], "sktree.tree.ObliqueDecisionTreeRegressor": [[14, 2, 1, "", "apply"], [14, 2, 1, "", "compute_similarity_matrix"], [14, 2, 1, "", "cost_complexity_pruning_path"], [14, 2, 1, "", "decision_path"], [14, 3, 1, "", "feature_importances_"], [14, 2, 1, "", "fit"], [14, 2, 1, "", "get_depth"], [14, 2, 1, "", "get_n_leaves"], [14, 2, 1, "", "get_params"], [14, 2, 1, "", "predict"], [14, 2, 1, "", "score"], [14, 2, 1, "", "set_params"]], "sktree.tree.PatchObliqueDecisionTreeClassifier": [[15, 2, 1, "", "apply"], [15, 2, 1, "", "compute_similarity_matrix"], [15, 2, 1, "", "cost_complexity_pruning_path"], [15, 2, 1, "", "decision_path"], [15, 3, 1, "", "feature_importances_"], [15, 2, 1, "", "fit"], [15, 2, 1, "", "get_depth"], [15, 2, 1, "", "get_n_leaves"], [15, 2, 1, "", "get_params"], [15, 2, 1, "", "predict"], [15, 2, 1, "", "predict_log_proba"], [15, 2, 1, "", "predict_proba"], [15, 2, 1, "", "score"], [15, 2, 1, "", "set_params"]], "sktree.tree.PatchObliqueDecisionTreeRegressor": [[16, 2, 1, "", "apply"], [16, 2, 1, "", "compute_similarity_matrix"], [16, 2, 1, "", "cost_complexity_pruning_path"], [16, 2, 1, "", "decision_path"], [16, 3, 1, "", "feature_importances_"], [16, 2, 1, "", "fit"], [16, 2, 1, "", "get_depth"], [16, 2, 1, "", "get_n_leaves"], [16, 2, 1, "", "get_params"], [16, 2, 1, "", "predict"], [16, 2, 1, "", "score"], [16, 2, 1, "", "set_params"]], "sktree.tree.UnsupervisedDecisionTree": [[17, 2, 1, "", "apply"], [17, 2, 1, "", "compute_similarity_matrix"], [17, 2, 1, "", "cost_complexity_pruning_path"], [17, 2, 1, "", "decision_path"], [17, 3, 1, "", "feature_importances_"], [17, 2, 1, "", "fit_predict"], [17, 2, 1, "", "fit_transform"], [17, 2, 1, "", "get_depth"], [17, 2, 1, "", "get_n_leaves"], [17, 2, 1, "", "get_params"], [17, 2, 1, "", "predict"], [17, 2, 1, "", "set_output"], [17, 2, 1, "", "set_params"], [17, 2, 1, "", "transform"]], "sktree.tree.UnsupervisedObliqueDecisionTree": [[18, 2, 1, "", "apply"], [18, 2, 1, "", "compute_similarity_matrix"], [18, 2, 1, "", "cost_complexity_pruning_path"], [18, 2, 1, "", "decision_path"], [18, 3, 1, "", "feature_importances_"], [18, 2, 1, "", "fit_predict"], [18, 2, 1, "", "fit_transform"], [18, 2, 1, "", "get_depth"], [18, 2, 1, "", "get_n_leaves"], [18, 2, 1, "", "get_params"], [18, 2, 1, "", "predict"], [18, 2, 1, "", "set_output"], [18, 2, 1, "", "set_params"], [18, 2, 1, "", "transform"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "document": [0, 28], "supervis": [0, 22], "unsupervis": [0, 23], "exampl": [1, 7, 13, 15, 21, 24], "plot": [2, 3, 4, 5], "decis": [2, 22, 23], "surfac": 2, "tree": [2, 5, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24], "train": 2, "iri": 2, "dataset": [2, 4], "obliqu": [3, 4, 5, 21, 22], "forest": [3, 4, 21], "axi": [3, 4], "align": [3, 4], "random": [3, 4, 21], "predict": [3, 4], "spars": 3, "pariti": 3, "simul": 3, "cc18": 4, "project": 5, "matric": 5, "an": 5, "initi": 5, "patch": 5, "splitter": 5, "gener": 5, "1d": 5, "2d": 5, "3d": 5, "discontigu": 5, "comput": 6, "time": 6, "sktree": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "obliquerandomforestclassifi": 7, "us": [7, 13, 15, 22, 24], "obliquerandomforestregressor": 8, "patchobliquerandomforestclassifi": 9, "patchobliquerandomforestregressor": 10, "unsupervisedobliquerandomforest": 11, "unsupervisedrandomforest": 12, "obliquedecisiontreeclassifi": 13, "obliquedecisiontreeregressor": 14, "patchobliquedecisiontreeclassifi": 15, "patchobliquedecisiontreeregressor": 16, "unsuperviseddecisiontre": 17, "unsupervisedobliquedecisiontre": 18, "scikit": [19, 24], "content": 19, "get": 19, "start": 19, "indic": 19, "tabl": 19, "instal": 20, "depend": 20, "pip": 20, "from": 20, "sourc": 20, "meson": 20, "conda": 20, "recommend": 20, "refer": [21, 22], "featur": 21, "import": 21, "evalu": [21, 23], "differ": 22, "compar": 22, "mathemat": 22, "formul": 22, "classif": 22, "regress": 22, "multi": 22, "output": 22, "problem": 22, "complex": 22, "tip": 22, "practic": 22, "limit": 22, "criterion": 23, "two": 23, "mean": 23, "fast": 23, "bic": 23, "user": 25, "guid": 25, "releas": 26, "histori": 26, "what": 28, "": 28, "new": 28, "version": 28, "0": 28, "1": 28, "changelog": 28, "code": 28, "contributor": 28}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"API Documentation": [[0, "api-documentation"]], "Supervised": [[0, "supervised"]], "Unsupervised": [[0, "unsupervised"]], "Examples": [[1, "examples"], [24, "examples"]], "Plot the decision surface of decision trees trained on the iris dataset": [[2, "plot-the-decision-surface-of-decision-trees-trained-on-the-iris-dataset"]], "Plot oblique forest and axis-aligned random forest predictions on sparse parity simulation": [[3, "plot-oblique-forest-and-axis-aligned-random-forest-predictions-on-sparse-parity-simulation"]], "Plot oblique forest and axis-aligned random forest predictions on cc18 datasets": [[4, "plot-oblique-forest-and-axis-aligned-random-forest-predictions-on-cc18-datasets"]], "Plot the projection matrices of an oblique tree": [[5, "plot-the-projection-matrices-of-an-oblique-tree"]], "Initialize patch splitter": [[5, "initialize-patch-splitter"]], "Generate 1D patches": [[5, "generate-1d-patches"]], "Generate 2D patches": [[5, "generate-2d-patches"]], "Generate 3D patches": [[5, "generate-3d-patches"]], "Discontiguous Patches": [[5, "discontiguous-patches"]], "Computation times": [[6, "computation-times"]], "sktree.ObliqueRandomForestClassifier": [[7, "sktree-obliquerandomforestclassifier"]], "Examples using sktree.ObliqueRandomForestClassifier": [[7, "examples-using-sktree-obliquerandomforestclassifier"]], "sktree.ObliqueRandomForestRegressor": [[8, "sktree-obliquerandomforestregressor"]], "sktree.PatchObliqueRandomForestClassifier": [[9, "sktree-patchobliquerandomforestclassifier"]], "sktree.PatchObliqueRandomForestRegressor": [[10, "sktree-patchobliquerandomforestregressor"]], "sktree.UnsupervisedObliqueRandomForest": [[11, "sktree-unsupervisedobliquerandomforest"]], "sktree.UnsupervisedRandomForest": [[12, "sktree-unsupervisedrandomforest"]], "sktree.tree.ObliqueDecisionTreeClassifier": [[13, "sktree-tree-obliquedecisiontreeclassifier"]], "Examples using sktree.tree.ObliqueDecisionTreeClassifier": [[13, "examples-using-sktree-tree-obliquedecisiontreeclassifier"]], "sktree.tree.ObliqueDecisionTreeRegressor": [[14, "sktree-tree-obliquedecisiontreeregressor"]], "sktree.tree.PatchObliqueDecisionTreeClassifier": [[15, "sktree-tree-patchobliquedecisiontreeclassifier"]], "Examples using sktree.tree.PatchObliqueDecisionTreeClassifier": [[15, "examples-using-sktree-tree-patchobliquedecisiontreeclassifier"]], "sktree.tree.PatchObliqueDecisionTreeRegressor": [[16, "sktree-tree-patchobliquedecisiontreeregressor"]], "sktree.tree.UnsupervisedDecisionTree": [[17, "sktree-tree-unsuperviseddecisiontree"]], "sktree.tree.UnsupervisedObliqueDecisionTree": [[18, "sktree-tree-unsupervisedobliquedecisiontree"]], "scikit-tree": [[19, "scikit-tree"]], "Contents": [[19, "contents"]], "Getting started:": [[19, null]], "Indices and tables": [[19, "indices-and-tables"]], "Installation": [[20, "installation"]], "Dependencies": [[20, "dependencies"]], "Installing with pip": [[20, "installing-with-pip"]], "Installing from source with Meson": [[20, "installing-from-source-with-meson"]], "Conda (Recommended)": [[20, "conda-recommended"]], "Oblique Random Forests": [[21, "oblique-random-forests"]], "Examples:": [[21, null]], "References": [[21, null], [21, null]], "Feature importance evaluation": [[21, "feature-importance-evaluation"]], "Supervised Decision Trees": [[22, "supervised-decision-trees"]], "Oblique Trees": [[22, "oblique-trees"]], "Differences compared to decision trees": [[22, "differences-compared-to-decision-trees"]], "Mathematical formulation": [[22, "mathematical-formulation"]], "Classification, regression and multi-output problems": [[22, "classification-regression-and-multi-output-problems"]], "Complexity": [[22, "complexity"]], "Tips on practical use": [[22, "tips-on-practical-use"]], "Limitations compared to decision trees": [[22, "limitations-compared-to-decision-trees"]], "References:": [[22, null]], "Unsupervised Decision Trees": [[23, "unsupervised-decision-trees"]], "Unsupervised Criterion": [[23, "unsupervised-criterion"]], "Two-Means": [[23, "two-means"]], "Fast-BIC": [[23, "fast-bic"]], "Evaluating Unsupervised Trees": [[23, "evaluating-unsupervised-trees"]], "Examples using scikit-tree": [[24, "examples-using-scikit-tree"]], "User Guide": [[25, "user-guide"]], "Release History": [[26, "release-history"]], "What\u2019s new?": [[28, "what-s-new"]], "Version 0.1": [[28, "version-0-1"]], "Changelog": [[28, "changelog"]], "Code and Documentation Contributors": [[28, "code-and-documentation-contributors"]]}, "indexentries": {"module": [[0, "module-sktree"]], "sktree": [[0, "module-sktree"]], "obliquerandomforestclassifier (class in sktree)": [[7, "sktree.ObliqueRandomForestClassifier"]], "apply() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.apply"]], "base_estimator_ (sktree.obliquerandomforestclassifier property)": [[7, "sktree.ObliqueRandomForestClassifier.base_estimator_"]], "compute_similarity_matrix() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.compute_similarity_matrix"]], "decision_path() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.decision_path"]], "feature_importances_ (sktree.obliquerandomforestclassifier property)": [[7, "sktree.ObliqueRandomForestClassifier.feature_importances_"]], "fit() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.fit"]], "get_params() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.get_params"]], "predict() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.predict"]], "predict_log_proba() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.predict_log_proba"]], "predict_proba() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.predict_proba"]], "score() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.score"]], "set_params() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.set_params"]], "obliquerandomforestregressor (class in sktree)": [[8, "sktree.ObliqueRandomForestRegressor"]], "apply() (sktree.obliquerandomforestregressor method)": [[8, "sktree.ObliqueRandomForestRegressor.apply"]], "base_estimator_ (sktree.obliquerandomforestregressor property)": [[8, "sktree.ObliqueRandomForestRegressor.base_estimator_"]], "compute_similarity_matrix() (sktree.obliquerandomforestregressor method)": [[8, "sktree.ObliqueRandomForestRegressor.compute_similarity_matrix"]], "decision_path() (sktree.obliquerandomforestregressor method)": [[8, "sktree.ObliqueRandomForestRegressor.decision_path"]], "feature_importances_ (sktree.obliquerandomforestregressor property)": [[8, "sktree.ObliqueRandomForestRegressor.feature_importances_"]], "fit() (sktree.obliquerandomforestregressor method)": [[8, "sktree.ObliqueRandomForestRegressor.fit"]], "get_params() (sktree.obliquerandomforestregressor method)": [[8, "sktree.ObliqueRandomForestRegressor.get_params"]], "predict() (sktree.obliquerandomforestregressor method)": [[8, "sktree.ObliqueRandomForestRegressor.predict"]], "score() (sktree.obliquerandomforestregressor method)": [[8, "sktree.ObliqueRandomForestRegressor.score"]], "set_params() (sktree.obliquerandomforestregressor method)": [[8, "sktree.ObliqueRandomForestRegressor.set_params"]], "patchobliquerandomforestclassifier (class in sktree)": [[9, "sktree.PatchObliqueRandomForestClassifier"]], "apply() (sktree.patchobliquerandomforestclassifier method)": [[9, "sktree.PatchObliqueRandomForestClassifier.apply"]], "base_estimator_ (sktree.patchobliquerandomforestclassifier property)": [[9, "sktree.PatchObliqueRandomForestClassifier.base_estimator_"]], "compute_similarity_matrix() (sktree.patchobliquerandomforestclassifier method)": [[9, "sktree.PatchObliqueRandomForestClassifier.compute_similarity_matrix"]], "decision_path() (sktree.patchobliquerandomforestclassifier method)": [[9, "sktree.PatchObliqueRandomForestClassifier.decision_path"]], "feature_importances_ (sktree.patchobliquerandomforestclassifier property)": [[9, "sktree.PatchObliqueRandomForestClassifier.feature_importances_"]], "fit() (sktree.patchobliquerandomforestclassifier method)": [[9, "sktree.PatchObliqueRandomForestClassifier.fit"]], "get_params() (sktree.patchobliquerandomforestclassifier method)": [[9, "sktree.PatchObliqueRandomForestClassifier.get_params"]], "predict() (sktree.patchobliquerandomforestclassifier method)": [[9, "sktree.PatchObliqueRandomForestClassifier.predict"]], "predict_log_proba() (sktree.patchobliquerandomforestclassifier method)": [[9, "sktree.PatchObliqueRandomForestClassifier.predict_log_proba"]], "predict_proba() (sktree.patchobliquerandomforestclassifier method)": [[9, "sktree.PatchObliqueRandomForestClassifier.predict_proba"]], "score() (sktree.patchobliquerandomforestclassifier method)": [[9, "sktree.PatchObliqueRandomForestClassifier.score"]], "set_params() (sktree.patchobliquerandomforestclassifier method)": [[9, "sktree.PatchObliqueRandomForestClassifier.set_params"]], "patchobliquerandomforestregressor (class in sktree)": [[10, "sktree.PatchObliqueRandomForestRegressor"]], "apply() (sktree.patchobliquerandomforestregressor method)": [[10, "sktree.PatchObliqueRandomForestRegressor.apply"]], "base_estimator_ (sktree.patchobliquerandomforestregressor property)": [[10, "sktree.PatchObliqueRandomForestRegressor.base_estimator_"]], "compute_similarity_matrix() (sktree.patchobliquerandomforestregressor method)": [[10, "sktree.PatchObliqueRandomForestRegressor.compute_similarity_matrix"]], "decision_path() (sktree.patchobliquerandomforestregressor method)": [[10, "sktree.PatchObliqueRandomForestRegressor.decision_path"]], "feature_importances_ (sktree.patchobliquerandomforestregressor property)": [[10, "sktree.PatchObliqueRandomForestRegressor.feature_importances_"]], "fit() (sktree.patchobliquerandomforestregressor method)": [[10, "sktree.PatchObliqueRandomForestRegressor.fit"]], "get_params() (sktree.patchobliquerandomforestregressor method)": [[10, "sktree.PatchObliqueRandomForestRegressor.get_params"]], "predict() (sktree.patchobliquerandomforestregressor method)": [[10, "sktree.PatchObliqueRandomForestRegressor.predict"]], "score() (sktree.patchobliquerandomforestregressor method)": [[10, "sktree.PatchObliqueRandomForestRegressor.score"]], "set_params() (sktree.patchobliquerandomforestregressor method)": [[10, "sktree.PatchObliqueRandomForestRegressor.set_params"]], "unsupervisedobliquerandomforest (class in sktree)": [[11, "sktree.UnsupervisedObliqueRandomForest"]], "apply() (sktree.unsupervisedobliquerandomforest method)": [[11, "sktree.UnsupervisedObliqueRandomForest.apply"]], "base_estimator_ (sktree.unsupervisedobliquerandomforest property)": [[11, "sktree.UnsupervisedObliqueRandomForest.base_estimator_"]], "compute_similarity_matrix() (sktree.unsupervisedobliquerandomforest method)": [[11, "sktree.UnsupervisedObliqueRandomForest.compute_similarity_matrix"]], "decision_path() (sktree.unsupervisedobliquerandomforest method)": [[11, "sktree.UnsupervisedObliqueRandomForest.decision_path"]], "feature_importances_ (sktree.unsupervisedobliquerandomforest property)": [[11, "sktree.UnsupervisedObliqueRandomForest.feature_importances_"]], "fit() (sktree.unsupervisedobliquerandomforest method)": [[11, "sktree.UnsupervisedObliqueRandomForest.fit"]], "fit_predict() (sktree.unsupervisedobliquerandomforest method)": [[11, "sktree.UnsupervisedObliqueRandomForest.fit_predict"]], "fit_transform() (sktree.unsupervisedobliquerandomforest method)": [[11, "sktree.UnsupervisedObliqueRandomForest.fit_transform"]], "get_params() (sktree.unsupervisedobliquerandomforest method)": [[11, "sktree.UnsupervisedObliqueRandomForest.get_params"]], "predict() (sktree.unsupervisedobliquerandomforest method)": [[11, "sktree.UnsupervisedObliqueRandomForest.predict"]], "set_output() (sktree.unsupervisedobliquerandomforest method)": [[11, "sktree.UnsupervisedObliqueRandomForest.set_output"]], "set_params() (sktree.unsupervisedobliquerandomforest method)": [[11, "sktree.UnsupervisedObliqueRandomForest.set_params"]], "transform() (sktree.unsupervisedobliquerandomforest method)": [[11, "sktree.UnsupervisedObliqueRandomForest.transform"]], "unsupervisedrandomforest (class in sktree)": [[12, "sktree.UnsupervisedRandomForest"]], "apply() (sktree.unsupervisedrandomforest method)": [[12, "sktree.UnsupervisedRandomForest.apply"]], "base_estimator_ (sktree.unsupervisedrandomforest property)": [[12, "sktree.UnsupervisedRandomForest.base_estimator_"]], "compute_similarity_matrix() (sktree.unsupervisedrandomforest method)": [[12, "sktree.UnsupervisedRandomForest.compute_similarity_matrix"]], "decision_path() (sktree.unsupervisedrandomforest method)": [[12, "sktree.UnsupervisedRandomForest.decision_path"]], "feature_importances_ (sktree.unsupervisedrandomforest property)": [[12, "sktree.UnsupervisedRandomForest.feature_importances_"]], "fit() (sktree.unsupervisedrandomforest method)": [[12, "sktree.UnsupervisedRandomForest.fit"]], "fit_predict() (sktree.unsupervisedrandomforest method)": [[12, "sktree.UnsupervisedRandomForest.fit_predict"]], "fit_transform() (sktree.unsupervisedrandomforest method)": [[12, "sktree.UnsupervisedRandomForest.fit_transform"]], "get_params() (sktree.unsupervisedrandomforest method)": [[12, "sktree.UnsupervisedRandomForest.get_params"]], "predict() (sktree.unsupervisedrandomforest method)": [[12, "sktree.UnsupervisedRandomForest.predict"]], "set_output() (sktree.unsupervisedrandomforest method)": [[12, "sktree.UnsupervisedRandomForest.set_output"]], "set_params() (sktree.unsupervisedrandomforest method)": [[12, "sktree.UnsupervisedRandomForest.set_params"]], "transform() (sktree.unsupervisedrandomforest method)": [[12, "sktree.UnsupervisedRandomForest.transform"]], "obliquedecisiontreeclassifier (class in sktree.tree)": [[13, "sktree.tree.ObliqueDecisionTreeClassifier"]], "apply() (sktree.tree.obliquedecisiontreeclassifier method)": [[13, "sktree.tree.ObliqueDecisionTreeClassifier.apply"]], "compute_similarity_matrix() (sktree.tree.obliquedecisiontreeclassifier method)": [[13, "sktree.tree.ObliqueDecisionTreeClassifier.compute_similarity_matrix"]], "cost_complexity_pruning_path() (sktree.tree.obliquedecisiontreeclassifier method)": [[13, "sktree.tree.ObliqueDecisionTreeClassifier.cost_complexity_pruning_path"]], "decision_path() (sktree.tree.obliquedecisiontreeclassifier method)": [[13, "sktree.tree.ObliqueDecisionTreeClassifier.decision_path"]], "feature_importances_ (sktree.tree.obliquedecisiontreeclassifier property)": [[13, "sktree.tree.ObliqueDecisionTreeClassifier.feature_importances_"]], "fit() (sktree.tree.obliquedecisiontreeclassifier method)": [[13, "sktree.tree.ObliqueDecisionTreeClassifier.fit"]], "get_depth() (sktree.tree.obliquedecisiontreeclassifier method)": [[13, "sktree.tree.ObliqueDecisionTreeClassifier.get_depth"]], "get_n_leaves() (sktree.tree.obliquedecisiontreeclassifier method)": [[13, "sktree.tree.ObliqueDecisionTreeClassifier.get_n_leaves"]], "get_params() (sktree.tree.obliquedecisiontreeclassifier method)": [[13, "sktree.tree.ObliqueDecisionTreeClassifier.get_params"]], "predict() (sktree.tree.obliquedecisiontreeclassifier method)": [[13, "sktree.tree.ObliqueDecisionTreeClassifier.predict"]], "predict_log_proba() (sktree.tree.obliquedecisiontreeclassifier method)": [[13, "sktree.tree.ObliqueDecisionTreeClassifier.predict_log_proba"]], "predict_proba() (sktree.tree.obliquedecisiontreeclassifier method)": [[13, "sktree.tree.ObliqueDecisionTreeClassifier.predict_proba"]], "score() (sktree.tree.obliquedecisiontreeclassifier method)": [[13, "sktree.tree.ObliqueDecisionTreeClassifier.score"]], "set_params() (sktree.tree.obliquedecisiontreeclassifier method)": [[13, "sktree.tree.ObliqueDecisionTreeClassifier.set_params"]], "obliquedecisiontreeregressor (class in sktree.tree)": [[14, "sktree.tree.ObliqueDecisionTreeRegressor"]], "apply() (sktree.tree.obliquedecisiontreeregressor method)": [[14, "sktree.tree.ObliqueDecisionTreeRegressor.apply"]], "compute_similarity_matrix() (sktree.tree.obliquedecisiontreeregressor method)": [[14, "sktree.tree.ObliqueDecisionTreeRegressor.compute_similarity_matrix"]], "cost_complexity_pruning_path() (sktree.tree.obliquedecisiontreeregressor method)": [[14, "sktree.tree.ObliqueDecisionTreeRegressor.cost_complexity_pruning_path"]], "decision_path() (sktree.tree.obliquedecisiontreeregressor method)": [[14, "sktree.tree.ObliqueDecisionTreeRegressor.decision_path"]], "feature_importances_ (sktree.tree.obliquedecisiontreeregressor property)": [[14, "sktree.tree.ObliqueDecisionTreeRegressor.feature_importances_"]], "fit() (sktree.tree.obliquedecisiontreeregressor method)": [[14, "sktree.tree.ObliqueDecisionTreeRegressor.fit"]], "get_depth() (sktree.tree.obliquedecisiontreeregressor method)": [[14, "sktree.tree.ObliqueDecisionTreeRegressor.get_depth"]], "get_n_leaves() (sktree.tree.obliquedecisiontreeregressor method)": [[14, "sktree.tree.ObliqueDecisionTreeRegressor.get_n_leaves"]], "get_params() (sktree.tree.obliquedecisiontreeregressor method)": [[14, "sktree.tree.ObliqueDecisionTreeRegressor.get_params"]], "predict() (sktree.tree.obliquedecisiontreeregressor method)": [[14, "sktree.tree.ObliqueDecisionTreeRegressor.predict"]], "score() (sktree.tree.obliquedecisiontreeregressor method)": [[14, "sktree.tree.ObliqueDecisionTreeRegressor.score"]], "set_params() (sktree.tree.obliquedecisiontreeregressor method)": [[14, "sktree.tree.ObliqueDecisionTreeRegressor.set_params"]], "patchobliquedecisiontreeclassifier (class in sktree.tree)": [[15, "sktree.tree.PatchObliqueDecisionTreeClassifier"]], "apply() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[15, "sktree.tree.PatchObliqueDecisionTreeClassifier.apply"]], "compute_similarity_matrix() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[15, "sktree.tree.PatchObliqueDecisionTreeClassifier.compute_similarity_matrix"]], "cost_complexity_pruning_path() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[15, "sktree.tree.PatchObliqueDecisionTreeClassifier.cost_complexity_pruning_path"]], "decision_path() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[15, "sktree.tree.PatchObliqueDecisionTreeClassifier.decision_path"]], "feature_importances_ (sktree.tree.patchobliquedecisiontreeclassifier property)": [[15, "sktree.tree.PatchObliqueDecisionTreeClassifier.feature_importances_"]], "fit() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[15, "sktree.tree.PatchObliqueDecisionTreeClassifier.fit"]], "get_depth() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[15, "sktree.tree.PatchObliqueDecisionTreeClassifier.get_depth"]], "get_n_leaves() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[15, "sktree.tree.PatchObliqueDecisionTreeClassifier.get_n_leaves"]], "get_params() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[15, "sktree.tree.PatchObliqueDecisionTreeClassifier.get_params"]], "predict() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[15, "sktree.tree.PatchObliqueDecisionTreeClassifier.predict"]], "predict_log_proba() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[15, "sktree.tree.PatchObliqueDecisionTreeClassifier.predict_log_proba"]], "predict_proba() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[15, "sktree.tree.PatchObliqueDecisionTreeClassifier.predict_proba"]], "score() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[15, "sktree.tree.PatchObliqueDecisionTreeClassifier.score"]], "set_params() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[15, "sktree.tree.PatchObliqueDecisionTreeClassifier.set_params"]], "patchobliquedecisiontreeregressor (class in sktree.tree)": [[16, "sktree.tree.PatchObliqueDecisionTreeRegressor"]], "apply() (sktree.tree.patchobliquedecisiontreeregressor method)": [[16, "sktree.tree.PatchObliqueDecisionTreeRegressor.apply"]], "compute_similarity_matrix() (sktree.tree.patchobliquedecisiontreeregressor method)": [[16, "sktree.tree.PatchObliqueDecisionTreeRegressor.compute_similarity_matrix"]], "cost_complexity_pruning_path() (sktree.tree.patchobliquedecisiontreeregressor method)": [[16, "sktree.tree.PatchObliqueDecisionTreeRegressor.cost_complexity_pruning_path"]], "decision_path() (sktree.tree.patchobliquedecisiontreeregressor method)": [[16, "sktree.tree.PatchObliqueDecisionTreeRegressor.decision_path"]], "feature_importances_ (sktree.tree.patchobliquedecisiontreeregressor property)": [[16, "sktree.tree.PatchObliqueDecisionTreeRegressor.feature_importances_"]], "fit() (sktree.tree.patchobliquedecisiontreeregressor method)": [[16, "sktree.tree.PatchObliqueDecisionTreeRegressor.fit"]], "get_depth() (sktree.tree.patchobliquedecisiontreeregressor method)": [[16, "sktree.tree.PatchObliqueDecisionTreeRegressor.get_depth"]], "get_n_leaves() (sktree.tree.patchobliquedecisiontreeregressor method)": [[16, "sktree.tree.PatchObliqueDecisionTreeRegressor.get_n_leaves"]], "get_params() (sktree.tree.patchobliquedecisiontreeregressor method)": [[16, "sktree.tree.PatchObliqueDecisionTreeRegressor.get_params"]], "predict() (sktree.tree.patchobliquedecisiontreeregressor method)": [[16, "sktree.tree.PatchObliqueDecisionTreeRegressor.predict"]], "score() (sktree.tree.patchobliquedecisiontreeregressor method)": [[16, "sktree.tree.PatchObliqueDecisionTreeRegressor.score"]], "set_params() (sktree.tree.patchobliquedecisiontreeregressor method)": [[16, "sktree.tree.PatchObliqueDecisionTreeRegressor.set_params"]], "unsuperviseddecisiontree (class in sktree.tree)": [[17, "sktree.tree.UnsupervisedDecisionTree"]], "apply() (sktree.tree.unsuperviseddecisiontree method)": [[17, "sktree.tree.UnsupervisedDecisionTree.apply"]], "compute_similarity_matrix() (sktree.tree.unsuperviseddecisiontree method)": [[17, "sktree.tree.UnsupervisedDecisionTree.compute_similarity_matrix"]], "cost_complexity_pruning_path() (sktree.tree.unsuperviseddecisiontree method)": [[17, "sktree.tree.UnsupervisedDecisionTree.cost_complexity_pruning_path"]], "decision_path() (sktree.tree.unsuperviseddecisiontree method)": [[17, "sktree.tree.UnsupervisedDecisionTree.decision_path"]], "feature_importances_ (sktree.tree.unsuperviseddecisiontree property)": [[17, "sktree.tree.UnsupervisedDecisionTree.feature_importances_"]], "fit_predict() (sktree.tree.unsuperviseddecisiontree method)": [[17, "sktree.tree.UnsupervisedDecisionTree.fit_predict"]], "fit_transform() (sktree.tree.unsuperviseddecisiontree method)": [[17, "sktree.tree.UnsupervisedDecisionTree.fit_transform"]], "get_depth() (sktree.tree.unsuperviseddecisiontree method)": [[17, "sktree.tree.UnsupervisedDecisionTree.get_depth"]], "get_n_leaves() (sktree.tree.unsuperviseddecisiontree method)": [[17, "sktree.tree.UnsupervisedDecisionTree.get_n_leaves"]], "get_params() (sktree.tree.unsuperviseddecisiontree method)": [[17, "sktree.tree.UnsupervisedDecisionTree.get_params"]], "predict() (sktree.tree.unsuperviseddecisiontree method)": [[17, "sktree.tree.UnsupervisedDecisionTree.predict"]], "set_output() (sktree.tree.unsuperviseddecisiontree method)": [[17, "sktree.tree.UnsupervisedDecisionTree.set_output"]], "set_params() (sktree.tree.unsuperviseddecisiontree method)": [[17, "sktree.tree.UnsupervisedDecisionTree.set_params"]], "transform() (sktree.tree.unsuperviseddecisiontree method)": [[17, "sktree.tree.UnsupervisedDecisionTree.transform"]], "unsupervisedobliquedecisiontree (class in sktree.tree)": [[18, "sktree.tree.UnsupervisedObliqueDecisionTree"]], "apply() (sktree.tree.unsupervisedobliquedecisiontree method)": [[18, "sktree.tree.UnsupervisedObliqueDecisionTree.apply"]], "compute_similarity_matrix() (sktree.tree.unsupervisedobliquedecisiontree method)": [[18, "sktree.tree.UnsupervisedObliqueDecisionTree.compute_similarity_matrix"]], "cost_complexity_pruning_path() (sktree.tree.unsupervisedobliquedecisiontree method)": [[18, "sktree.tree.UnsupervisedObliqueDecisionTree.cost_complexity_pruning_path"]], "decision_path() (sktree.tree.unsupervisedobliquedecisiontree method)": [[18, "sktree.tree.UnsupervisedObliqueDecisionTree.decision_path"]], "feature_importances_ (sktree.tree.unsupervisedobliquedecisiontree property)": [[18, "sktree.tree.UnsupervisedObliqueDecisionTree.feature_importances_"]], "fit_predict() (sktree.tree.unsupervisedobliquedecisiontree method)": [[18, "sktree.tree.UnsupervisedObliqueDecisionTree.fit_predict"]], "fit_transform() (sktree.tree.unsupervisedobliquedecisiontree method)": [[18, "sktree.tree.UnsupervisedObliqueDecisionTree.fit_transform"]], "get_depth() (sktree.tree.unsupervisedobliquedecisiontree method)": [[18, "sktree.tree.UnsupervisedObliqueDecisionTree.get_depth"]], "get_n_leaves() (sktree.tree.unsupervisedobliquedecisiontree method)": [[18, "sktree.tree.UnsupervisedObliqueDecisionTree.get_n_leaves"]], "get_params() (sktree.tree.unsupervisedobliquedecisiontree method)": [[18, "sktree.tree.UnsupervisedObliqueDecisionTree.get_params"]], "predict() (sktree.tree.unsupervisedobliquedecisiontree method)": [[18, "sktree.tree.UnsupervisedObliqueDecisionTree.predict"]], "set_output() (sktree.tree.unsupervisedobliquedecisiontree method)": [[18, "sktree.tree.UnsupervisedObliqueDecisionTree.set_output"]], "set_params() (sktree.tree.unsupervisedobliquedecisiontree method)": [[18, "sktree.tree.UnsupervisedObliqueDecisionTree.set_params"]], "transform() (sktree.tree.unsupervisedobliquedecisiontree method)": [[18, "sktree.tree.UnsupervisedObliqueDecisionTree.transform"]]}})