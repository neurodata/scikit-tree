Search.setIndex({"docnames": ["api", "auto_examples/index", "auto_examples/plot_iris_dtc", "auto_examples/plot_oblique_axis_aligned_forests_sparse_parity", "auto_examples/plot_oblique_random_forest", "auto_examples/plot_projection_matrices", "auto_examples/sg_execution_times", "generated/sktree.ObliqueRandomForestClassifier", "generated/sktree.PatchObliqueRandomForestClassifier", "generated/sktree.UnsupervisedObliqueRandomForest", "generated/sktree.UnsupervisedRandomForest", "generated/sktree.tree.ObliqueDecisionTreeClassifier", "generated/sktree.tree.PatchObliqueDecisionTreeClassifier", "generated/sktree.tree.UnsupervisedDecisionTree", "generated/sktree.tree.UnsupervisedObliqueDecisionTree", "index", "install", "modules/ensemble", "modules/supervised_tree", "modules/unsupervised_tree", "use", "user_guide", "whats_new", "whats_new/_contributors", "whats_new/v0.1"], "filenames": ["api.rst", "auto_examples/index.rst", "auto_examples/plot_iris_dtc.rst", "auto_examples/plot_oblique_axis_aligned_forests_sparse_parity.rst", "auto_examples/plot_oblique_random_forest.rst", "auto_examples/plot_projection_matrices.rst", "auto_examples/sg_execution_times.rst", "generated/sktree.ObliqueRandomForestClassifier.rst", "generated/sktree.PatchObliqueRandomForestClassifier.rst", "generated/sktree.UnsupervisedObliqueRandomForest.rst", "generated/sktree.UnsupervisedRandomForest.rst", "generated/sktree.tree.ObliqueDecisionTreeClassifier.rst", "generated/sktree.tree.PatchObliqueDecisionTreeClassifier.rst", "generated/sktree.tree.UnsupervisedDecisionTree.rst", "generated/sktree.tree.UnsupervisedObliqueDecisionTree.rst", "index.rst", "install.rst", "modules/ensemble.rst", "modules/supervised_tree.rst", "modules/unsupervised_tree.rst", "use.rst", "user_guide.rst", "whats_new.rst", "whats_new/_contributors.rst", "whats_new/v0.1.rst"], "titles": ["API Documentation", "Examples", "Plot the decision surface of decision trees trained on the iris dataset", "Plot oblique forest and axis-aligned random forest predictions on sparse parity simulation", "Plot oblique forest and axis-aligned random forest predictions on cc18 datasets", "Plot the projection matrices of an oblique tree", "Computation times", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree</span></code>.ObliqueRandomForestClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree</span></code>.PatchObliqueRandomForestClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree</span></code>.UnsupervisedObliqueRandomForest", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree</span></code>.UnsupervisedRandomForest", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree.tree</span></code>.ObliqueDecisionTreeClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree.tree</span></code>.PatchObliqueDecisionTreeClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree.tree</span></code>.UnsupervisedDecisionTree", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree.tree</span></code>.UnsupervisedObliqueDecisionTree", "<strong>scikit-tree</strong>", "Installation", "<span class=\"section-number\">3. </span>Oblique Random Forests", "<span class=\"section-number\">1. </span>Supervised Decision Trees", "<span class=\"section-number\">2. </span>Unsupervised Decision Trees", "Examples using scikit-tree", "User guide: contents", "Release History", "&lt;no title&gt;", "What\u2019s new?"], "terms": {"sktree": [0, 2, 3, 4, 5, 16, 18], "scikit": [0, 1, 2, 9, 10, 13, 14, 16, 17, 18, 22, 24], "manifold": [0, 5, 8, 12, 17, 24], "obliqu": [0, 1, 2, 6, 7, 8, 9, 11, 12, 14, 15, 16, 20, 21, 24], "random": [0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 24], "forest": [0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 15, 18, 20, 21, 24], "decis": [0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21], "tree": [0, 1, 6, 7, 8, 9, 10, 16, 17, 21, 22, 24], "model": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 24], "ar": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 22], "tradition": 0, "implement": [0, 5, 11, 17, 18, 24], "axi": [0, 1, 2, 5, 6, 7, 8, 11, 12, 17, 18, 20, 24], "align": [0, 1, 2, 6, 7, 8, 11, 12, 17, 18, 20], "split": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19], "store": [0, 9, 10, 17, 18], "mean": [0, 3, 4, 7, 8, 9, 10, 11, 12, 17, 21, 24], "outcom": 0, "i": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "e": [0, 5, 7, 8, 9, 10, 11, 12, 16, 17, 18], "label": [0, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19], "vote": [0, 7, 8, 9, 10], "leaf": [0, 7, 8, 9, 10, 11, 12, 13, 14], "node": [0, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19], "howev": [0, 18], "more": [0, 2, 7, 8, 9, 10, 11, 12, 17, 18], "exot": 0, "possibl": [0, 7, 8, 9, 10, 11, 12, 13, 14, 19], "call": [0, 7, 8, 12], "which": [0, 3, 5, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19], "some": [0, 5, 7, 8, 11, 18, 20], "function": [0, 2, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18], "multipl": [0, 5, 18], "featur": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24], "column": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 18, 24], "creat": [0, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "new": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 22], "valu": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18], "thi": [0, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 22], "can": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 24], "take": [0, 2, 9, 10, 13, 14], "form": [0, 7, 8, 9, 10, 11, 12, 13, 14, 18], "spars": [0, 1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20], "linear": [0, 2], "combin": [0, 2, 7, 9, 11, 14, 17, 18, 19], "even": [0, 7, 8, 9, 10, 11, 12, 13, 14, 17], "advantag": 0, "structur": [0, 2, 5, 12, 19, 24], "data": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 24], "g": [0, 7, 8, 11, 17, 18], "an": [0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 24], "imag": [0, 5, 12], "sampl": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 24], "indic": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 18], "awar": [0, 12], "fashion": [0, 7, 8, 9, 10, 11, 12, 13, 14, 18], "class": [0, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 19], "gener": [0, 1, 2, 3, 4, 7, 8, 9, 10, 12, 17, 18, 19, 20], "while": [0, 7, 8, 9, 10, 11, 12, 13, 14], "everyth": [0, 20], "els": [0, 4], "consist": [0, 4, 5, 7, 8, 9, 10, 13, 14, 18], "how": [0, 1, 5, 9, 10, 13, 14, 15, 17, 18, 20], "learn": [0, 2, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20], "build": [0, 7, 8, 11, 15, 16], "us": [0, 1, 3, 4, 5, 8, 9, 10, 13, 14, 15, 16, 17, 19, 21], "classif": [0, 3, 7, 8, 9, 10, 11, 12, 21], "regress": [0, 7, 8, 9, 10, 11, 12, 13, 14, 21], "thei": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18], "also": [0, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18], "power": [0, 17], "non": [0, 7, 8, 9, 10, 11, 12, 13, 14, 18], "parametr": [0, 18], "embed": 0, "cluster": [0, 9, 10, 13, 14, 19], "The": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19], "randomtreesembed": 0, "exampl": [0, 2, 3, 4, 5, 8, 9, 10, 13, 14, 15, 19], "we": [0, 2, 5, 15, 16, 17, 18, 19, 24], "other": [0, 9, 10, 18], "state": 0, "art": 0, "explicitli": 0, "base": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19], "criterion": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 21, 24], "varianc": [0, 9, 10, 13, 14, 17, 19], "bic": [0, 9, 10, 13, 14, 21], "compris": [0, 12], "those": [0, 7, 8, 11, 17, 18], "avail": [0, 7, 8, 9, 10, 16], "standalon": 0, "demonstr": [1, 5, 20], "algorithm": [1, 9, 10, 11, 12, 13, 14, 15, 18, 20], "plot": [1, 6, 7, 11, 12, 17, 20], "predict": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20], "cc18": [1, 6, 7, 17, 20], "dataset": [1, 3, 5, 6, 7, 8, 9, 10, 11, 17, 18, 20], "pariti": [1, 6, 7, 17, 20], "simul": [1, 6, 7, 17, 20], "surfac": [1, 5, 6, 11, 20], "train": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20], "iri": [1, 6, 11, 18, 20], "project": [1, 2, 4, 6, 7, 11, 12, 16, 17, 18, 20, 24], "matric": [1, 6, 9, 10, 12, 18, 20], "download": [1, 2, 3, 4, 5, 20], "all": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 22], "python": [1, 2, 3, 4, 5, 16, 20], "sourc": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20], "code": [1, 2, 3, 4, 5, 13, 14, 16, 20], "auto_examples_python": [1, 20], "zip": [1, 2, 20], "jupyt": [1, 2, 3, 4, 5, 20], "notebook": [1, 2, 3, 4, 5, 20], "auto_examples_jupyt": [1, 20], "galleri": [1, 2, 3, 4, 5, 20], "sphinx": [1, 2, 3, 4, 5, 20], "go": [2, 3, 4, 5], "end": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "full": [2, 3, 4, 5], "pair": 2, "see": [2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19], "inform": [2, 3, 7, 8, 9, 10, 11, 12, 17, 18, 19], "estim": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 19], "For": [2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19], "each": [2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19], "boundari": [2, 5, 8, 12, 24], "made": 2, "simpl": [2, 7, 8, 9, 10, 11, 12, 13, 14], "threshold": [2, 18], "rule": 2, "infer": [2, 11, 12], "from": [2, 3, 4, 5, 7, 8, 9, 10, 11, 15, 17, 18, 19], "same": [2, 5, 7, 8, 9, 10, 11, 12, 17, 18], "regular": 2, "show": [2, 3, 5], "built": [2, 17, 18], "first": [2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18], "load": [2, 4], "copi": 2, "ship": 2, "sklearn": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19], "import": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 21], "load_iri": [2, 11, 18], "matplotlib": [2, 3, 4, 5, 16], "pyplot": [2, 3, 4, 5], "plt": [2, 3, 4, 5], "displai": 2, "numpi": [2, 3, 5, 8, 11, 12, 16], "np": [2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14], "inspect": [2, 7, 8, 9, 10, 11, 12, 13, 14], "decisionboundarydisplai": 2, "decisiontreeclassifi": [2, 11], "obliquedecisiontreeclassifi": [2, 7, 8, 18], "paramet": [2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19], "n_class": [2, 7, 8, 11, 12], "3": [2, 3, 5, 7, 8, 11, 12, 15, 16, 17], "plot_color": 2, "ryb": 2, "plot_step": 2, "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "02": 2, "clf_label": 2, "random_st": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "123456": [2, 3, 4], "clf": [2, 3, 4, 7, 11, 18], "fig": [2, 3, 4, 5], "ax": [2, 3, 4, 5, 18], "subplot": [2, 3, 4, 5], "2": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19], "flatten": [2, 5], "pairidx": 2, "enumer": [2, 3, 4, 5, 7, 8], "1": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22], "onli": [2, 5, 7, 8, 9, 10, 11, 12, 13, 14], "two": [2, 4, 9, 10, 17, 21, 24], "correspond": [2, 7, 8, 11, 12, 13, 14], "x": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19], "y": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 18], "target": [2, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18], "fit": [2, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18], "tight_layout": 2, "h_pad": 2, "5": [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 17, 18], "w_pad": 2, "pad": 2, "from_estim": 2, "cmap": [2, 5], "cm": 2, "rdylbu": 2, "response_method": 2, "xlabel": 2, "feature_nam": 2, "ylabel": 2, "point": [2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 19], "color": [2, 3, 4, 5], "rang": [2, 3, 5, 12], "idx": [2, 5], "where": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19], "scatter": [2, 5], "c": [2, 11, 12, 16], "target_nam": 2, "edgecolor": 2, "black": [2, 5], "": [2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22], "15": 2, "suptitl": [2, 5], "f": [2, 3, 4, 5], "legend": [2, 3], "loc": [2, 3], "lower": [2, 18], "right": [2, 7, 8, 9, 10, 11, 12, 13, 14, 18], "borderpad": 2, "handletextpad": 2, "_": 2, "tight": 2, "home": 2, "circleci": 2, "plot_iris_dtc": [2, 6], "py": [2, 3, 4, 5, 6], "78": 2, "userwarn": 2, "No": 2, "colormap": 2, "provid": [2, 7, 8, 9, 10, 11, 12, 13, 14], "via": [2, 11, 16, 17], "ignor": [2, 7, 8, 9, 10, 11, 12, 13, 14], "singl": [2, 7, 8, 9, 10, 11, 12, 13, 14], "togeth": [2, 18, 19], "plot_tre": 2, "figur": [2, 5], "fill": 2, "true": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 19], "titl": [2, 5], "total": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19], "run": [2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 18], "time": [2, 3, 4, 5, 9, 10, 11, 12, 18], "script": [2, 3, 4, 5], "minut": [2, 3, 4, 5], "967": [2, 6], "second": [2, 3, 4, 5], "memori": [2, 3, 4, 5, 7, 8, 11], "usag": [2, 3, 4, 5], "14": [2, 5], "mb": [2, 3, 4, 5, 6], "ipynb": [2, 3, 4, 5], "A": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 18], "perform": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19], "comparison": [3, 4], "between": [3, 4, 11, 12, 13, 14, 18], "standard": [3, 4, 12, 18], "variat": 3, "noisi": 3, "problem": [3, 7, 8, 11, 12, 15, 21], "itself": [3, 9, 10], "multivari": [3, 5, 12], "xor": 3, "binari": 3, "task": [3, 15], "high": [3, 7, 8, 9, 10, 11, 12, 13, 14, 17], "dimens": [3, 5, 8, 9, 10, 12, 13, 14, 18], "uniformli": [3, 5], "distribut": [3, 18, 19], "n_sampl": [3, 7, 8, 9, 10, 11, 12, 13, 14], "number": [3, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19], "p": [3, 7, 8, 17], "limit": [3, 21], "carri": [3, 7, 8, 9, 10, 11, 12, 13, 14], "about": [3, 18], "defin": [3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 19], "odd": 3, "sum": [3, 7, 8, 9, 10, 11, 12, 13, 14, 17], "across": [3, 7, 8, 9, 10, 11, 12, 13, 14], "greater": [3, 7, 8, 9, 10, 11, 12, 13, 14], "than": [3, 7, 8, 9, 10, 11, 12, 13, 14, 19], "otherwis": [3, 7, 8], "further": 3, "detail": [3, 4, 5, 7, 8, 11, 12, 13, 14], "public": [3, 5, 17], "http": [3, 4, 10, 11, 16, 18], "epub": 3, "siam": 3, "org": [3, 4, 10, 11, 16, 18], "doi": [3, 10, 18], "epdf": 3, "10": [3, 10, 11, 18], "1137": 3, "9781611974973": 3, "56": 3, "It": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19], "took": [3, 4], "7": 3, "datetim": [3, 4], "panda": [3, 4, 9, 10, 13, 14], "pd": [3, 4], "seaborn": [3, 4], "sn": [3, 4], "ensembl": [3, 4, 7, 8, 9, 10, 17], "randomforestclassifi": [3, 4, 7, 8], "model_select": [3, 4, 11], "repeatedkfold": [3, 4], "cross_valid": [3, 4], "obliquerandomforestclassifi": [3, 4, 17], "t0": [3, 4], "now": [3, 4, 5, 16, 24], "def": [3, 4], "sparse_par": 3, "20": [3, 10], "p_star": 3, "random_se": 3, "none": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "kwarg": [3, 4], "seed": [3, 9, 10], "uniform": 3, "zero": [3, 7, 8, 9, 10, 11, 12, 13, 14], "return": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14], "get_scor": [3, 4], "n_cv": [3, 4], "n_repeat": [3, 4], "tmp": [3, 4], "cv": [3, 4, 11], "n_split": [3, 4], "test_scor": [3, 4], "score": [3, 4, 7, 8, 9, 10, 11, 12], "accuraci": [3, 4, 7, 8, 11, 12], "append": [3, 4], "rf": [3, 4, 18], "OF": [3, 4], "df": [3, 4], "datafram": [3, 4, 9, 10, 13, 14], "explod": [3, 4], "astyp": [3, 4, 5], "float": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14], "reset_index": [3, 4], "inplac": [3, 4], "drop": [3, 4, 18], "grid": [3, 5], "search": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14], "hyper": 3, "param": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14], "max_featur": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 18], "n_estim": [3, 4, 7, 8, 9, 10], "100": [3, 4, 5, 7, 8, 9, 10], "max_depth": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14], "40": 3, "1000": [3, 7], "t_d": 3, "print": [3, 4, 5, 7], "draw": [3, 4, 7, 8, 9, 10], "figsiz": [3, 5], "6": [3, 4, 5, 6, 16], "stripplot": [3, 4], "dodg": [3, 4], "boxplot": [3, 4], "white": [3, 4], "set_titl": [3, 4], "queri": [3, 4], "iloc": [3, 4], "rff": 3, "test": [3, 7, 8, 11, 12, 16], "round": [3, 7, 8], "off": 3, "4": [3, 5, 6, 7, 8, 11, 12], "savefig": 3, "plot_sim_": 3, "jpg": 3, "8": [3, 4, 5, 16], "378": [3, 6], "9": [3, 4, 5, 6, 16, 24], "plot_oblique_axis_aligned_forests_sparse_par": [3, 6], "three": 4, "openml": 4, "benchmark": [4, 15], "suit": 4, "name": [4, 7, 8, 9, 10, 11, 12, 13, 14, 17], "wdbc": 4, "www": [4, 11], "type": [4, 18], "sort": [4, 19], "id": 4, "1510": 4, "phish": 4, "websit": 4, "4534": 4, "31": 4, "former": 4, "entir": [4, 8, 12], "numer": 4, "latter": [4, 7, 8, 9, 10, 11, 12, 13, 14], "normin": 4, "third": 4, "dub": 4, "cnae": 4, "statu": 4, "activ": [4, 16], "1468": 4, "ha": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 18, 24], "notabl": 4, "larg": [4, 7, 8, 11], "space": [4, 9, 10, 13, 14, 18], "857": 4, "As": [4, 18], "you": [4, 7, 8, 11, 12, 13, 14, 15, 16, 20], "notic": 4, "outperform": [4, 18], "util": 4, "mechan": 4, "subsampl": 4, "due": 4, "comput": [4, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18], "constraint": 4, "phishingwebsit": 4, "27": 4, "fetch_openml": 4, "data_id": 4, "load_cc18": 4, "as_fram": 4, "parser": 4, "extract": 4, "d_name": 4, "n": [4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 24], "int": [4, 7, 8, 9, 10, 11, 12, 13, 14], "frame": 4, "shape": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17], "dtype": [4, 7, 8, 9, 10, 11, 12, 13, 14], "object": [4, 7, 8, 9, 10, 11, 12, 13, 14, 19], "50": 4, "concat": 4, "uniqu": [4, 7, 8, 9, 10, 11, 12, 13, 14, 17], "set_size_inch": 4, "set_ylabel": 4, "set_xlabel": 4, "28": [4, 6], "751": [4, 6], "63": [4, 6, 17, 24], "plot_oblique_random_forest": [4, 6], "specif": [5, 7, 8, 18], "patchobliquedecisiontreeclassifi": 5, "one": [5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19], "specifi": [5, 7, 8, 11, 12, 18], "done": [5, 12, 17], "data_dim": [5, 8, 12], "should": [5, 7, 8, 9, 10, 11, 12, 16], "set": [5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19], "n_row": 5, "n_col": 5, "row": [5, 12], "arrai": [5, 7, 8, 9, 10, 11, 12, 13, 14, 17], "length": 5, "If": [5, 7, 8, 9, 10, 11, 12, 13, 14, 18], "n_depth": 5, "allow": [5, 11, 12, 13, 14, 17, 18], "ani": [5, 7, 8, 9, 10, 11, 12, 13, 14, 24], "still": 5, "compat": [5, 9, 10, 13, 14], "robust": [5, 15], "api": [5, 9, 10, 12, 13, 14, 15, 16, 22, 23, 24], "These": [5, 17], "calcul": [5, 19], "dure": [5, 7, 8, 9, 10, 11, 12, 13, 14], "hyperrectangl": 5, "start": [5, 16], "size": [5, 7, 8, 11, 12], "squar": 5, "min_patch_dim": [5, 8, 12], "max_patch_dim": [5, 8, 12], "constrain": [5, 18], "within": [5, 9, 10, 11, 12, 13, 14, 16], "bound": 5, "arbitrarili": 5, "hyperparamet": [5, 18], "relat": 5, "modul": [5, 15], "note": [5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 22], "privat": 5, "cython": [5, 13, 14, 16], "here": [5, 18, 20, 24], "what": [5, 11, 12, 13, 14, 15, 22], "look": [5, 7, 8, 9, 10, 11, 12, 13, 14, 20], "like": [5, 11, 12, 13, 14, 16, 18, 19], "part": 5, "just": [5, 7, 8, 16], "wrapper": 5, "underli": [5, 11, 12], "actual": 5, "To": [5, 7, 8, 11, 12, 13, 14, 16, 20], "relev": [5, 15], "sklearn_fork": 5, "_criterion": 5, "gini": [5, 7, 8, 9, 10, 11, 12, 13, 14], "_morf_splitt": 5, "bestpatchsplittertest": 5, "dummi": 5, "sake": 5, "min_samples_leaf": [5, 7, 8, 9, 10, 11, 12, 13, 14], "min_weight_leaf": 5, "randomst": [5, 7, 8, 11, 12, 13, 14], "feature_weight": [5, 8, 12], "repeat": 5, "arang": 5, "25": 5, "float32": [5, 7, 8, 9, 10, 11, 12, 13, 14], "reshap": 5, "float64": 5, "sample_weight": [5, 7, 8, 9, 10, 11, 12, 13, 14], "ones": 5, "our": [5, 15, 18], "have": [5, 7, 8, 9, 10, 11, 12, 13, 14, 18], "th": [5, 7, 8, 9, 10], "visual": 5, "appear": 5, "make": [5, 17, 24], "contigu": [5, 8, 12], "dim_contigu": [5, 8, 12], "init_test": 5, "matrix": [5, 7, 8, 9, 10, 11, 12, 13, 14, 18], "proj_mat": 5, "sample_projection_matrix": 5, "nrow": 5, "ncol": 5, "12": 5, "sharex": 5, "sharei": 5, "squeez": 5, "imshow": 5, "viridi": 5, "xlim": 5, "ylim": 5, "add_subplot": 5, "z": 5, "nonzero": 5, "alpha": [5, 11, 12, 13, 14], "marker": 5, "o": [5, 18], "custom": [5, 9, 10], "set_zlim": 5, "01": 5, "125": 5, "analyz": 5, "necessarili": [5, 17], "certain": 5, "seri": [5, 12], "n_channel": 5, "n_time": 5, "channel": 5, "fals": [5, 7, 8, 9, 10], "244": [5, 6], "plot_projection_matric": [5, 6], "00": 6, "45": [6, 7, 17, 18, 24], "340": 6, "execut": 6, "auto_exampl": 6, "file": [6, 16], "08": 6, "04": 6, "13": 6, "03": 6, "min_samples_split": [7, 8, 9, 10, 11, 12, 13, 14], "min_weight_fraction_leaf": [7, 8, 9, 10, 11, 12, 13, 14], "sqrt": [7, 8, 9, 10, 11, 12, 13, 14], "max_leaf_nod": [7, 8, 9, 10, 11, 12, 13, 14], "min_impurity_decreas": [7, 8, 9, 10, 11, 12, 13, 14], "bootstrap": [7, 8, 9, 10, 17], "oob_scor": [7, 8, 9, 10], "n_job": [7, 8, 9, 10], "verbos": [7, 8, 9, 10, 16], "warm_start": [7, 8, 9, 10], "class_weight": [7, 8, 11, 12], "max_sampl": [7, 8, 9, 10], "feature_combin": [7, 9, 11, 14, 17, 18], "classifi": [7, 8, 11, 12], "meta": [7, 8], "similar": [7, 8, 17, 18, 19], "variou": [7, 8], "sub": [7, 8, 9, 10], "averag": [7, 8, 9, 11, 14, 17], "improv": [7, 8, 11, 12, 13, 14, 17, 18, 24], "control": [7, 8, 11, 12, 13, 14, 17, 18], "over": [7, 8, 12, 17], "default": [7, 8, 9, 10, 11, 12, 13, 14, 18], "whole": [7, 8], "read": [7, 11], "user": [7, 11, 12, 13, 14, 15, 16, 17, 18, 24], "guid": [7, 11, 15, 19, 24], "entropi": [7, 8, 11, 12], "measur": [7, 8, 9, 10, 11, 12, 13, 14, 19], "qualiti": [7, 8, 9, 10, 11, 12, 13, 14, 18, 19], "support": [7, 8, 9, 10, 11, 12, 13, 14, 16, 18], "criteria": [7, 8, 9, 10, 11, 12, 13, 14, 19], "impur": [7, 8, 9, 10, 11, 12, 13, 14, 17, 18], "gain": [7, 8, 11, 12], "maximum": [7, 8, 9, 10, 11, 12, 13, 14, 19], "depth": [7, 8, 9, 10, 11, 12, 13, 14, 17], "expand": [7, 8, 9, 10, 11, 12, 13, 14], "until": [7, 8, 9, 10, 11, 12, 13, 14], "leav": [7, 8, 9, 10, 11, 12, 13, 14], "pure": [7, 8, 9, 10, 11, 12, 13, 14], "contain": [7, 8, 9, 10, 11, 12, 13, 14], "less": [7, 8, 9, 10, 11, 12, 13, 14], "minimum": [7, 8, 9, 10, 11, 12, 13, 14], "requir": [7, 8, 9, 10, 11, 12, 13, 14, 18], "intern": [7, 8, 9, 10, 11, 12, 13, 14], "consid": [7, 8, 9, 10, 11, 12, 13, 14, 18], "fraction": [7, 8, 9, 10, 11, 12, 13, 14, 17], "ceil": [7, 8, 9, 10, 11, 12, 13, 14], "least": [7, 8, 9, 10, 11, 12, 13, 14], "left": [7, 8, 9, 10, 11, 12, 13, 14, 18], "branch": [7, 8, 9, 10, 11, 12, 13, 14], "mai": [7, 8, 9, 10, 11, 12, 13, 14, 19], "effect": [7, 8, 9, 10, 11, 12, 13, 14, 20], "smooth": [7, 8, 9, 10, 11, 12, 13, 14], "especi": [7, 8, 9, 10, 11, 12, 13, 14], "weight": [7, 8, 9, 10, 11, 12, 13, 14, 18, 24], "input": [7, 8, 9, 10, 11, 12, 13, 14, 17, 18], "equal": [7, 8, 9, 10, 11, 12, 13, 14], "when": [7, 8, 9, 10, 11, 12, 13, 14, 18, 22], "log2": [7, 8, 9, 10, 11, 12, 13, 14], "best": [7, 8, 9, 10, 11, 12, 13, 14], "n_featur": [7, 8, 9, 10, 11, 12, 13, 14, 17, 18], "auto": [7, 8, 9, 10, 11, 12, 13, 14], "doe": [7, 8, 9, 10, 11, 12, 17, 18], "stop": [7, 8, 9, 10, 11, 12], "valid": [7, 8, 9, 10, 11, 12, 13, 14, 18], "partit": [7, 8, 9, 10, 11, 12, 18], "found": [7, 8, 9, 10, 11, 12, 13, 14, 18], "grow": [7, 8, 9, 10, 11, 12, 13, 14], "rel": [7, 8, 9, 10, 11, 12, 13, 14, 17, 19], "reduct": [7, 8, 9, 10, 11, 12, 13, 14, 17], "unlimit": [7, 8, 9, 10, 11, 12, 13, 14], "induc": [7, 8, 9, 10, 11, 12, 13, 14], "decreas": [7, 8, 9, 10, 11, 12, 13, 14, 17], "equat": [7, 8, 9, 10, 11, 12, 13, 14], "follow": [7, 8, 9, 10, 11, 12, 13, 14, 18, 19], "n_t": [7, 8, 9, 10, 11, 12, 13, 14], "n_t_r": [7, 8, 9, 10, 11, 12, 13, 14], "right_impur": [7, 8, 9, 10, 11, 12, 13, 14], "n_t_l": [7, 8, 9, 10, 11, 12, 13, 14], "left_impur": [7, 8, 9, 10, 11, 12, 13, 14], "current": [7, 8, 9, 10, 11, 12, 13, 14, 16, 18], "child": [7, 8, 9, 10, 11, 12, 13, 14], "refer": [7, 8, 9, 10, 11, 12, 13, 14], "pass": [7, 8, 9, 10, 11, 12, 13, 14, 18], "bool": [7, 8, 9, 10, 11, 12, 13, 14], "whether": [7, 8, 9, 10, 12, 13, 14], "out": [7, 8, 9, 10, 17], "bag": [7, 8, 9, 10], "job": [7, 8], "parallel": [7, 8, 9, 10], "decision_path": [7, 8, 9, 10, 11, 12, 13, 14], "appli": [7, 8, 9, 10, 11, 12, 13, 14], "unless": [7, 8, 9, 10, 11, 12, 13, 14], "joblib": [7, 8, 9, 10, 16], "parallel_backend": [7, 8], "context": [7, 8], "processor": [7, 8], "glossari": [7, 8, 11, 12], "instanc": [7, 8, 9, 10, 11, 12, 13, 14], "both": [7, 8, 18], "reus": [7, 8], "solut": [7, 8], "previou": [7, 8, 9, 10], "add": [7, 8, 16, 24], "balanc": [7, 8, 11, 12], "balanced_subsampl": [7, 8], "dict": [7, 8, 9, 10, 11, 12, 13, 14], "list": [7, 8, 9, 10, 11, 12, 24], "associ": [7, 8, 10, 11, 12, 18], "class_label": [7, 8, 11, 12], "given": [7, 8, 11, 12, 18, 19], "suppos": [7, 8, 11, 12], "multi": [7, 8, 11, 12, 21], "output": [7, 8, 9, 10, 11, 12, 13, 14, 21], "order": [7, 8, 11, 12], "multioutput": [7, 8, 11, 12], "includ": [7, 8, 11, 12, 24], "multilabel": [7, 8, 11, 12], "everi": [7, 8, 11, 12, 18], "its": [7, 8, 9, 10, 11, 12, 18], "own": [7, 8, 11, 12], "four": [7, 8, 11, 12], "instead": [7, 8, 11, 12], "mode": [7, 8, 11, 12, 16], "automat": [7, 8, 11, 12], "adjust": [7, 8, 11, 12], "invers": [7, 8, 11, 12], "proport": [7, 8, 11, 12], "frequenc": [7, 8, 11, 12], "bincount": [7, 8, 11, 12], "except": [7, 8, 17], "grown": [7, 8, 11], "multipli": [7, 8, 11, 12], "through": [7, 8, 9, 10, 11, 12, 13, 14, 15], "method": [7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19], "thu": [7, 8, 9, 10, 11, 17, 19], "interv": [7, 8, 9, 10], "equival": [7, 11, 18], "tradit": [7, 11], "give": [7, 8, 9, 10, 11], "expect": [7, 11, 12, 17], "must": [7, 11, 13, 14], "alwai": [7, 8, 11, 12, 13, 14, 16, 18], "etc": [7, 8, 11], "lead": [7, 8, 11, 17], "fulli": [7, 8, 11], "unprun": [7, 8, 11], "potenti": [7, 8, 11], "veri": [7, 8, 11], "reduc": [7, 8, 11, 17], "consumpt": [7, 8, 11], "complex": [7, 8, 11, 12, 13, 14, 21], "randomli": [7, 8, 11, 12, 13, 14], "permut": [7, 8, 11, 12, 13, 14, 17], "therefor": [7, 8, 12, 17, 18], "vari": [7, 8, 11, 12, 13, 14], "ident": [7, 8, 11, 12, 13, 14], "sever": [7, 8, 11, 12, 13, 14, 17], "obtain": [7, 8, 9, 10, 11, 12, 13, 14, 17], "determinist": [7, 8, 11, 12, 13, 14], "behaviour": [7, 8, 11, 12, 13, 14], "fix": [7, 8, 11, 12, 13, 14, 22, 23, 24], "breiman": [7, 11, 17, 18], "machin": [7, 17, 18], "32": [7, 17, 18], "2001": [7, 17, 18], "make_classif": 7, "n_inform": 7, "n_redund": 7, "shuffl": 7, "attribut": [7, 8, 9, 10, 11, 12, 13, 14, 17], "base_estimator_": [7, 8, 9, 10], "estimators_": [7, 8, 9, 10], "collect": [7, 8, 9, 10], "classes_": [7, 8, 11, 12], "ndarrai": [7, 8, 9, 10, 11, 12, 13, 14], "n_classes_": [7, 8, 11, 12], "n_features_": [7, 8], "n_features_in_": [7, 8, 9, 10, 11, 12, 13, 14], "seen": [7, 8, 9, 10, 11, 12], "feature_names_in_": [7, 8, 9, 10, 11, 12], "string": [7, 8, 9, 10, 11, 12, 13, 14], "n_outputs_": [7, 8, 11, 12], "feature_importances_": [7, 8, 9, 10, 11, 12, 13, 14, 17], "oob_score_": [7, 8, 9, 10], "exist": [7, 8, 9, 10, 18], "oob_decision_function_": [7, 8, 9, 10], "n_output": [7, 8, 9, 10, 11, 12, 13, 14], "small": [7, 8, 9, 10], "might": [7, 8, 9, 10, 18], "wa": [7, 8, 9, 10, 18], "never": [7, 8, 9, 10], "In": [7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 24], "case": [7, 8, 9, 10, 11, 12, 13, 14, 18], "nan": [7, 8, 9, 10], "array_lik": [7, 8, 9, 10, 11, 12, 13, 14], "convert": [7, 8, 9, 10, 11, 12, 13, 14], "csr_matrix": [7, 8, 9, 10, 11, 12, 13, 14], "x_leav": [7, 8, 9, 10, 11, 12, 13, 14], "datapoint": [7, 8, 9, 10, 11, 12, 13, 14], "index": [7, 8, 9, 10, 11, 12, 13, 14, 15, 18], "up": [7, 8, 9, 10, 11, 12, 13, 14, 18], "path": [7, 8, 9, 10, 11, 12, 13, 14], "version": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22], "18": [7, 8, 9, 10, 11, 12, 13, 14], "n_node": [7, 8, 9, 10, 11, 12, 13, 14], "element": [7, 8, 9, 10, 11, 12, 13, 14, 18], "goe": [7, 8, 9, 10, 11, 12, 13, 14], "csr": [7, 8, 9, 10, 11, 12, 13, 14], "format": [7, 8, 9, 10, 13, 14], "n_nodes_ptr": [7, 8, 9, 10], "csc_matrix": [7, 8, 9, 10, 11, 12, 13, 14], "real": [7, 8], "would": [7, 8, 9, 10, 11, 12, 13, 14, 16, 18], "net": [7, 8, 9, 10, 11, 12, 13, 14], "neg": [7, 8, 9, 10, 11, 12, 13, 14], "result": [7, 8, 9, 10, 11, 12, 13, 14, 19], "either": [7, 8, 9, 10, 11, 12, 13, 14], "self": [7, 8, 9, 10, 11, 12, 13, 14], "get_param": [7, 8, 9, 10, 11, 12, 13, 14], "deep": [7, 8, 9, 10, 11, 12, 13, 14, 17], "get": [7, 8, 9, 10, 11, 12, 13, 14], "subobject": [7, 8, 9, 10, 11, 12, 13, 14], "map": [7, 8, 9, 10, 11, 12, 13, 14], "probabl": [7, 8, 9, 10, 11, 12, 18], "That": [7, 8, 9, 10, 11, 12, 13, 14], "highest": [7, 8, 9, 10, 11], "predict_log_proba": [7, 8, 11, 12], "log": [7, 8, 11, 12, 18, 19], "predict_proba": [7, 8, 11, 12], "subset": [7, 8, 11, 12, 18], "harsh": [7, 8, 11, 12], "metric": [7, 8, 9, 10, 11, 12, 19], "sinc": [7, 8, 11, 12, 24], "correctli": [7, 8, 11, 12], "w": [7, 8, 11, 12], "r": [7, 8, 11, 12, 16, 18], "t": [7, 8, 10, 11, 12, 13, 14, 18], "set_param": [7, 8, 9, 10, 11, 12, 13, 14], "work": [7, 8, 9, 10, 11, 12, 13, 14], "well": [7, 8, 9, 10, 11, 12, 13, 14], "nest": [7, 8, 9, 10, 11, 12, 13, 14], "pipelin": [7, 8, 9, 10, 11, 12, 13, 14], "compon": [7, 8, 9, 10, 11, 12, 13, 14], "__": [7, 8, 9, 10, 11, 12, 13, 14], "so": [7, 8, 9, 10, 11, 12, 13, 14, 18], "updat": [7, 8, 9, 10, 11, 12, 13, 14], "properti": [7, 8, 9, 10, 11, 12, 13, 14], "higher": [7, 8, 9, 10, 17, 18], "normal": [7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 24], "brought": [7, 8, 9, 10, 11, 12, 13, 14], "known": [7, 8, 9, 10, 11, 12, 13, 14, 17], "warn": [7, 8, 9, 10, 11, 12, 13, 14], "mislead": [7, 8, 9, 10, 11, 12, 13, 14, 17], "cardin": [7, 8, 9, 10, 11, 12, 13, 14, 17], "mani": [7, 8, 9, 10, 11, 12, 13, 14, 17, 18], "permutation_import": [7, 8, 9, 10, 11, 12, 13, 14], "altern": [7, 8, 9, 10, 11, 12, 13, 14, 17], "root": [7, 8, 9, 10, 11, 12, 13, 14], "patch": [8, 12, 24], "option": [8, 9, 10, 12, 13, 14, 16], "along": [8, 12, 18], "presum": [8, 12], "un": [8, 12], "vector": [8, 12, 18, 19], "1d": [8, 12], "str": [8, 12], "wrap": [8, 12], "condit": [8, 12], "scipi": [8, 12, 16], "adam": [8, 12, 17, 24], "li": [8, 10, 12, 17, 24], "ronan": [8, 12], "perri": [8, 12], "chester": [8, 12], "huynh": [8, 12], "tyler": [8, 12, 17], "m": [8, 12, 17, 18], "tomita": [8, 12, 17], "ronak": [8, 12], "mehta": [8, 12], "jesu": [8, 12], "arroyo": [8, 12], "jess": [8, 12], "patsol": [8, 12], "benjamin": [8, 12], "falk": [8, 12], "joshua": [8, 10, 12], "vogelstein": [8, 10, 12], "toward": [8, 12, 17], "close": [8, 12, 17], "gap": [8, 11, 12, 13, 14, 17], "convolut": [8, 12, 17], "network": [8, 12, 17], "arxiv": [8, 12, 17], "preprint": [8, 12, 17], "1909": [8, 12, 17], "11799": [8, 12, 17], "2019": [8, 12, 17], "twomean": [9, 10, 13, 14], "clustering_func": [9, 10, 13, 14], "clustering_func_arg": [9, 10, 13, 14], "unsupervis": [9, 10, 13, 14, 15, 21, 24], "inher": [9, 10], "simultan": [9, 10], "adapt": [9, 10, 19], "affin": [9, 10, 13, 14], "distanc": [9, 10, 11, 12, 13, 14, 19], "do": [9, 10, 11, 12, 13, 14, 17, 18], "fall": [9, 10], "fastbic": [9, 10, 13, 14, 24], "maxim": [9, 10], "bayesian": [9, 10, 19], "mathemat": [9, 10, 21], "formul": [9, 10, 21], "recommend": [9, 10, 11, 12, 15, 18], "max": [9, 10, 13, 14, 18], "callabl": [9, 10, 13, 14], "By": [9, 10, 13, 14, 17], "calinski_harabasz_scor": [9, 10], "signatur": [9, 10], "predicted_label": [9, 10], "silhouette_scor": [9, 10], "davies_bouldin_scor": [9, 10], "cpu": [9, 10], "construct": [9, 10, 17, 18], "continu": [9, 10], "instant": [9, 10], "agglomerativeclust": [9, 10, 13, 14], "keyword": [9, 10, 13, 14], "argument": [9, 10, 13, 14], "estimator_": [9, 10], "unsuperviseddecisiontre": [9, 10], "templat": [9, 10], "labels_": [9, 10], "affinity_matrix_": [9, 10], "proxim": [9, 10], "oob": [9, 10], "effici": [9, 10, 12, 22, 23, 24], "Not": [9, 10, 13, 14], "present": [9, 10, 13, 14, 18], "convent": [9, 10, 13, 14], "fit_predict": [9, 10, 13, 14], "int64": [9, 10, 13, 14], "fit_transform": [9, 10, 13, 14], "fit_param": [9, 10, 13, 14], "transform": [9, 10, 13, 14], "addit": [9, 10, 13, 14, 18], "x_new": [9, 10, 13, 14], "n_features_new": [9, 10, 13, 14], "set_output": [9, 10, 13, 14], "introduc": [9, 10, 13, 14], "configur": [9, 10, 13, 14], "unchang": [9, 10, 13, 14], "center": [9, 10, 13, 14], "typic": [9, 10, 13, 14, 18], "dens": [9, 10, 13, 14, 18], "meghana": 10, "madhyastha": 10, "perci": 10, "jame": 10, "brown": 10, "veronika": 10, "strnadova": 10, "neelei": 10, "carei": 10, "prieb": 10, "randal": 10, "burn": 10, "geodes": 10, "proceed": 10, "26th": 10, "acm": 10, "sigkdd": 10, "confer": 10, "knowledg": [10, 18], "discoveri": 10, "mine": 10, "kdd": 10, "513": 10, "523": 10, "york": 10, "ny": 10, "usa": 10, "2020": 10, "machineri": 10, "url": 10, "1145": 10, "3394486": 10, "3403094": 10, "splitter": [11, 12, 13, 14], "strategi": [11, 12, 13, 14], "choos": [11, 12, 13, 14], "compar": [11, 12, 21], "select": [11, 12, 13, 14, 17], "befor": [11, 12, 13, 14], "find": [11, 12, 13, 14, 19], "among": [11, 12, 13, 14], "them": [11, 12, 13, 14, 17], "But": [11, 12, 13, 14], "differ": [11, 12, 13, 14, 21], "integ": [11, 12, 13, 14], "fact": 11, "better": [11, 17], "caveat": 11, "increas": [11, 17], "willing": [11, 18], "spend": [11, 18], "resourc": [11, 18], "oper": [11, 12], "argmax": 11, "ti": 11, "lowest": 11, "en": [11, 18], "wikipedia": [11, 18], "wiki": [11, 18], "decision_tree_learn": [11, 18], "l": [11, 17, 18, 19], "j": [11, 16, 18], "friedman": [11, 18], "olshen": 11, "stone": 11, "wadsworth": 11, "belmont": 11, "ca": 11, "1984": 11, "hasti": [11, 18], "tibshirani": [11, 18], "statist": [11, 17, 18], "springer": [11, 18], "2009": [11, 18], "cutler": 11, "stat": 11, "berkelei": 11, "edu": 11, "randomforest": 11, "cc_home": 11, "htm": 11, "cross_val_scor": 11, "93": 11, "86": 11, "max_features_": [11, 12], "tree_": [11, 12, 13, 14], "pleas": [11, 12], "help": [11, 12], "_tree": [11, 12], "feature_combinations_": 11, "taken": [11, 17], "check_input": [11, 12, 13, 14], "17": [11, 12, 13, 14], "bypass": [11, 12, 13, 14], "check": [11, 12, 13, 14], "don": [11, 12, 13, 14], "know": [11, 12, 13, 14], "re": [11, 12, 13, 14], "node_count": [11, 12, 13, 14], "possibli": [11, 12, 13, 14, 18], "cost_complexity_pruning_path": [11, 12, 13, 14], "prune": [11, 12, 13, 14, 18], "minim": [11, 12, 13, 14, 18, 19], "cost": [11, 12, 13, 14, 17, 18], "process": [11, 12, 13, 14], "ccp_path": [11, 12, 13, 14], "bunch": [11, 12, 13, 14], "dictionari": [11, 12, 13, 14], "ccp_alpha": [11, 12, 13, 14], "subtre": [11, 12, 13, 14], "get_depth": [11, 12, 13, 14], "get_n_leav": [11, 12, 13, 14], "n_leav": [11, 12, 13, 14], "proba": [11, 12], "morf": [12, 24], "discontigu": 12, "sensor": 12, "2d": 12, "mask": 12, "onto": 12, "data_width": 12, "data_height": 12, "origin": [12, 17, 18], "tt": 12, "last": 12, "height": 12, "width": 12, "exactli": [12, 17], "albeit": 12, "optim": [12, 18], "your": [12, 15], "min_patch_dims_": 12, "max_patch_dims_": 12, "data_dims_": 12, "unsupervisedcriterion": [13, 14], "abid": [13, 14], "unsupervisedsplitt": [13, 14], "assign": [13, 14, 19], "packag": [15, 16], "modern": 15, "supervis": [15, 19, 21], "extend": [15, 18], "achiev": [15, 17], "strong": 15, "encourag": 15, "research": 15, "top": [15, 17], "pull": 15, "request": 15, "walk": 15, "contribut": [15, 17, 24], "licens": 15, "under": 15, "bsd": 15, "document": [15, 17], "evalu": [15, 21], "releas": 15, "histori": 15, "instal": 15, "depend": 15, "pip": 15, "meson": 15, "conda": 15, "23": 16, "pypi": 16, "poetri": 16, "clone": 16, "repositori": 16, "neurodata": 16, "git": 16, "github": 16, "com": 16, "cd": 16, "ideal": 16, "virtual": 16, "environ": 16, "dev": 16, "Then": 16, "build_requir": 16, "txt": 16, "spin": 16, "cli": 16, "local": 16, "abl": [16, 20], "edit": 16, "pend": 16, "isol": 16, "u": [16, 17], "repo": 16, "zipbal": 16, "master": 16, "necessari": 16, "forg": 16, "threadpoolctl": 16, "pytest": 16, "compil": 16, "llvm": 16, "openmp": 16, "next": 16, "directori": 16, "dodiscov": 16, "purpos": 16, "main": 16, "obliquepr": 16, "need": [16, 18, 20], "develop": [16, 24], "pr": 16, "22754": 16, "checkout": 16, "page": [16, 22], "instruct": 16, "obliquerandomforestregressor": 17, "drawn": 17, "replac": 17, "divers": 17, "sometim": 17, "slight": 17, "bia": 17, "aim": 17, "motiv": 17, "therebi": [17, 18], "practic": [17, 21], "often": [17, 19], "signific": 17, "henc": 17, "yield": 17, "overal": 17, "contrast": 17, "b2001": 17, "candid": [17, 18], "intuit": [17, 18], "geurt": 17, "d": 17, "ernst": 17, "wehenkel": 17, "extrem": 17, "42": 17, "2006": 17, "rank": 17, "assess": 17, "respect": [17, 19], "variabl": [17, 18], "final": [17, 18], "larger": 17, "essenti": 17, "abil": 17, "mdi": 17, "l2014": 17, "approach": 17, "li2019": 17, "tomita2015": 17, "suffer": 17, "flaw": 17, "conclus": 17, "deriv": 17, "most": [17, 18], "good": 17, "held": 17, "secondli": 17, "favor": 17, "explor": 17, "v": [17, 18], "whose": 17, "posit": [17, 19], "match": 17, "loupp": 17, "understand": 17, "theori": 17, "phd": 17, "thesi": 17, "lieg": 17, "2014": 17, "et": 17, "al": 17, "1506": 17, "03410": 17, "2015": 17, "ground": 18, "truth": 18, "denot": 18, "describ": 18, "beyond": 18, "dt": 18, "ot": 18, "ref": 18, "rc": 18, "landmark": 18, "paper": 18, "empir": 18, "varieti": [18, 19], "lambda": 18, "tradeoff": 18, "wherea": 18, "curv": 18, "similarli": 18, "anoth": 18, "major": [18, 22, 23, 24], "definit": 18, "n_": 18, "becaus": 18, "x_i": [18, 19], "recurs": 18, "group": [18, 19], "manner": 18, "orthogon": 18, "a_i": 18, "inner": 18, "product": 18, "langl": 18, "rangl": 18, "entri": 18, "rest": 18, "being": 18, "let": 18, "repres": 18, "q_m": 18, "n_m": 18, "theta": 18, "t_m": 18, "x_j": 18, "leq": 18, "setminu": 18, "e_i": 18, "basi": 18, "elsewher": 18, "loss": 18, "h": 18, "exact": 18, "handl": 18, "ad": 18, "_featur": 18, "term": [18, 19], "come": 18, "sparsiti": 18, "consider": 18, "pickl": 18, "disc": 18, "special": 18, "earlier": 18, "runtim": 18, "sai": 18, "desir": 18, "analysi": 18, "much": 18, "storag": 18, "ask": 18, "question": 18, "try": 18, "cross": 18, "procedur": 18, "gridsearchcv": 18, "prior": [18, 19], "There": 18, "moreov": 18, "miss": 18, "imput": 18, "1023": 18, "1010933404324": 18, "predictive_analyt": 18, "quinlan": 18, "c4": 18, "program": 18, "morgan": 18, "kaufmann": 18, "1993": 18, "goal": 19, "identifi": 19, "pattern": 19, "without": 19, "common": 19, "techniqu": 19, "wai": 19, "overview": 19, "cutpoint": 19, "dimension": [19, 24], "cutoff": 19, "min_": 19, "sum_": 19, "hat": 19, "mu": 19, "_1": 19, "_2": 19, "sample_indic": 19, "popular": 19, "seleciton": 19, "likelihood": 19, "speed": 19, "kmean": 19, "flexibl": 19, "mclust": 19, "tri": 19, "gaussian": 19, "mle": 19, "hard": 19, "rather": 19, "soft": 19, "gmm": 19, "simpler": 19, "pi": 19, "mathcal": 19, "x_n": 19, "sigma": 19, "frac": 19, "quad": 19, "le": 19, "mu_j": 19, "natur": 19, "notion": 19, "efficaci": 19, "scheme": 19, "adjusted_rand_scor": 19, "tip": [21, 22], "fast": 21, "enhanc": [22, 23, 24], "chang": [22, 23, 24], "link": 22, "subscrib": 22, "librari": 22, "io": 22, "notifi": 22, "11": 24, "21": 24, "jong": 24, "shin": 24, "bug": 24, "outsid": 24, "61": 24, "insid": 24, "arbitrari": 24, "discontinu": 24, "per": 24, "67": 24, "thank": 24, "everyon": 24, "who": 24, "mainten": 24, "incept": 24}, "objects": {"": [[0, 0, 0, "-", "sktree"]], "sktree": [[7, 1, 1, "", "ObliqueRandomForestClassifier"], [8, 1, 1, "", "PatchObliqueRandomForestClassifier"], [9, 1, 1, "", "UnsupervisedObliqueRandomForest"], [10, 1, 1, "", "UnsupervisedRandomForest"]], "sktree.ObliqueRandomForestClassifier": [[7, 2, 1, "", "apply"], [7, 3, 1, "", "base_estimator_"], [7, 2, 1, "", "decision_path"], [7, 3, 1, "", "feature_importances_"], [7, 2, 1, "", "fit"], [7, 2, 1, "", "get_params"], [7, 2, 1, "", "predict"], [7, 2, 1, "", "predict_log_proba"], [7, 2, 1, "", "predict_proba"], [7, 2, 1, "", "score"], [7, 2, 1, "", "set_params"]], "sktree.PatchObliqueRandomForestClassifier": [[8, 2, 1, "", "apply"], [8, 3, 1, "", "base_estimator_"], [8, 2, 1, "", "decision_path"], [8, 3, 1, "", "feature_importances_"], [8, 2, 1, "", "fit"], [8, 2, 1, "", "get_params"], [8, 2, 1, "", "predict"], [8, 2, 1, "", "predict_log_proba"], [8, 2, 1, "", "predict_proba"], [8, 2, 1, "", "score"], [8, 2, 1, "", "set_params"]], "sktree.UnsupervisedObliqueRandomForest": [[9, 2, 1, "", "apply"], [9, 3, 1, "", "base_estimator_"], [9, 2, 1, "", "decision_path"], [9, 3, 1, "", "feature_importances_"], [9, 2, 1, "", "fit"], [9, 2, 1, "", "fit_predict"], [9, 2, 1, "", "fit_transform"], [9, 2, 1, "", "get_params"], [9, 2, 1, "", "predict"], [9, 2, 1, "", "set_output"], [9, 2, 1, "", "set_params"], [9, 2, 1, "", "transform"]], "sktree.UnsupervisedRandomForest": [[10, 2, 1, "", "apply"], [10, 3, 1, "", "base_estimator_"], [10, 2, 1, "", "decision_path"], [10, 3, 1, "", "feature_importances_"], [10, 2, 1, "", "fit"], [10, 2, 1, "", "fit_predict"], [10, 2, 1, "", "fit_transform"], [10, 2, 1, "", "get_params"], [10, 2, 1, "", "predict"], [10, 2, 1, "", "set_output"], [10, 2, 1, "", "set_params"], [10, 2, 1, "", "transform"]], "sktree.tree": [[11, 1, 1, "", "ObliqueDecisionTreeClassifier"], [12, 1, 1, "", "PatchObliqueDecisionTreeClassifier"], [13, 1, 1, "", "UnsupervisedDecisionTree"], [14, 1, 1, "", "UnsupervisedObliqueDecisionTree"]], "sktree.tree.ObliqueDecisionTreeClassifier": [[11, 2, 1, "", "apply"], [11, 2, 1, "", "cost_complexity_pruning_path"], [11, 2, 1, "", "decision_path"], [11, 3, 1, "", "feature_importances_"], [11, 2, 1, "", "fit"], [11, 2, 1, "", "get_depth"], [11, 2, 1, "", "get_n_leaves"], [11, 2, 1, "", "get_params"], [11, 2, 1, "", "predict"], [11, 2, 1, "", "predict_log_proba"], [11, 2, 1, "", "predict_proba"], [11, 2, 1, "", "score"], [11, 2, 1, "", "set_params"]], "sktree.tree.PatchObliqueDecisionTreeClassifier": [[12, 2, 1, "", "apply"], [12, 2, 1, "", "cost_complexity_pruning_path"], [12, 2, 1, "", "decision_path"], [12, 3, 1, "", "feature_importances_"], [12, 2, 1, "", "fit"], [12, 2, 1, "", "get_depth"], [12, 2, 1, "", "get_n_leaves"], [12, 2, 1, "", "get_params"], [12, 2, 1, "", "predict"], [12, 2, 1, "", "predict_log_proba"], [12, 2, 1, "", "predict_proba"], [12, 2, 1, "", "score"], [12, 2, 1, "", "set_params"]], "sktree.tree.UnsupervisedDecisionTree": [[13, 2, 1, "", "apply"], [13, 2, 1, "", "cost_complexity_pruning_path"], [13, 2, 1, "", "decision_path"], [13, 3, 1, "", "feature_importances_"], [13, 2, 1, "", "fit_predict"], [13, 2, 1, "", "fit_transform"], [13, 2, 1, "", "get_depth"], [13, 2, 1, "", "get_n_leaves"], [13, 2, 1, "", "get_params"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "set_output"], [13, 2, 1, "", "set_params"], [13, 2, 1, "", "transform"]], "sktree.tree.UnsupervisedObliqueDecisionTree": [[14, 2, 1, "", "apply"], [14, 2, 1, "", "cost_complexity_pruning_path"], [14, 2, 1, "", "decision_path"], [14, 3, 1, "", "feature_importances_"], [14, 2, 1, "", "fit_predict"], [14, 2, 1, "", "fit_transform"], [14, 2, 1, "", "get_depth"], [14, 2, 1, "", "get_n_leaves"], [14, 2, 1, "", "get_params"], [14, 2, 1, "", "predict"], [14, 2, 1, "", "set_output"], [14, 2, 1, "", "set_params"], [14, 2, 1, "", "transform"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "document": [0, 24], "supervis": [0, 18], "unsupervis": [0, 19], "exampl": [1, 7, 11, 12, 17, 20], "plot": [2, 3, 4, 5], "decis": [2, 18, 19], "surfac": 2, "tree": [2, 5, 11, 12, 13, 14, 15, 18, 19, 20], "train": 2, "iri": 2, "dataset": [2, 4], "obliqu": [3, 4, 5, 17, 18], "forest": [3, 4, 17], "axi": [3, 4], "align": [3, 4], "random": [3, 4, 17], "predict": [3, 4], "spars": 3, "pariti": 3, "simul": 3, "cc18": 4, "project": 5, "matric": 5, "an": 5, "initi": 5, "patch": 5, "splitter": 5, "gener": 5, "1d": 5, "2d": 5, "3d": 5, "discontigu": 5, "comput": 6, "time": 6, "sktree": [7, 8, 9, 10, 11, 12, 13, 14], "obliquerandomforestclassifi": 7, "us": [7, 11, 12, 18, 20], "patchobliquerandomforestclassifi": 8, "unsupervisedobliquerandomforest": 9, "unsupervisedrandomforest": 10, "obliquedecisiontreeclassifi": 11, "patchobliquedecisiontreeclassifi": 12, "unsuperviseddecisiontre": 13, "unsupervisedobliquedecisiontre": 14, "scikit": [15, 20], "content": 15, "get": 15, "start": 15, "indic": 15, "tabl": 15, "instal": 16, "depend": 16, "pip": 16, "from": 16, "sourc": 16, "meson": 16, "conda": 16, "recommend": 16, "refer": [17, 18], "featur": 17, "import": 17, "evalu": [17, 19], "differ": 18, "compar": 18, "mathemat": 18, "formul": 18, "classif": 18, "regress": 18, "multi": 18, "output": 18, "problem": 18, "complex": 18, "tip": 18, "practic": 18, "limit": 18, "criterion": 19, "two": 19, "mean": 19, "fast": 19, "bic": 19, "user": 21, "guid": 21, "releas": 22, "histori": 22, "what": 24, "": 24, "new": 24, "version": 24, "0": 24, "1": 24, "changelog": 24, "code": 24, "contributor": 24}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"API Documentation": [[0, "api-documentation"]], "Supervised": [[0, "supervised"]], "Unsupervised": [[0, "unsupervised"]], "Examples": [[1, "examples"], [20, "examples"]], "Plot the decision surface of decision trees trained on the iris dataset": [[2, "plot-the-decision-surface-of-decision-trees-trained-on-the-iris-dataset"]], "Plot oblique forest and axis-aligned random forest predictions on sparse parity simulation": [[3, "plot-oblique-forest-and-axis-aligned-random-forest-predictions-on-sparse-parity-simulation"]], "Plot oblique forest and axis-aligned random forest predictions on cc18 datasets": [[4, "plot-oblique-forest-and-axis-aligned-random-forest-predictions-on-cc18-datasets"]], "Plot the projection matrices of an oblique tree": [[5, "plot-the-projection-matrices-of-an-oblique-tree"]], "Initialize patch splitter": [[5, "initialize-patch-splitter"]], "Generate 1D patches": [[5, "generate-1d-patches"]], "Generate 2D patches": [[5, "generate-2d-patches"]], "Generate 3D patches": [[5, "generate-3d-patches"]], "Discontiguous Patches": [[5, "discontiguous-patches"]], "Computation times": [[6, "computation-times"]], "sktree.ObliqueRandomForestClassifier": [[7, "sktree-obliquerandomforestclassifier"]], "Examples using sktree.ObliqueRandomForestClassifier": [[7, "examples-using-sktree-obliquerandomforestclassifier"]], "sktree.PatchObliqueRandomForestClassifier": [[8, "sktree-patchobliquerandomforestclassifier"]], "sktree.UnsupervisedObliqueRandomForest": [[9, "sktree-unsupervisedobliquerandomforest"]], "sktree.UnsupervisedRandomForest": [[10, "sktree-unsupervisedrandomforest"]], "sktree.tree.ObliqueDecisionTreeClassifier": [[11, "sktree-tree-obliquedecisiontreeclassifier"]], "Examples using sktree.tree.ObliqueDecisionTreeClassifier": [[11, "examples-using-sktree-tree-obliquedecisiontreeclassifier"]], "sktree.tree.PatchObliqueDecisionTreeClassifier": [[12, "sktree-tree-patchobliquedecisiontreeclassifier"]], "Examples using sktree.tree.PatchObliqueDecisionTreeClassifier": [[12, "examples-using-sktree-tree-patchobliquedecisiontreeclassifier"]], "sktree.tree.UnsupervisedDecisionTree": [[13, "sktree-tree-unsuperviseddecisiontree"]], "sktree.tree.UnsupervisedObliqueDecisionTree": [[14, "sktree-tree-unsupervisedobliquedecisiontree"]], "scikit-tree": [[15, "scikit-tree"]], "Contents": [[15, "contents"]], "Getting started:": [[15, null]], "Indices and tables": [[15, "indices-and-tables"]], "Installation": [[16, "installation"]], "Dependencies": [[16, "dependencies"]], "Installing with pip": [[16, "installing-with-pip"]], "Installing from source with Meson": [[16, "installing-from-source-with-meson"]], "Conda (Recommended)": [[16, "conda-recommended"]], "Oblique Random Forests": [[17, "oblique-random-forests"]], "Examples:": [[17, null]], "References": [[17, null], [17, null]], "Feature importance evaluation": [[17, "feature-importance-evaluation"]], "Supervised Decision Trees": [[18, "supervised-decision-trees"]], "Oblique Trees": [[18, "oblique-trees"]], "Differences compared to decision trees": [[18, "differences-compared-to-decision-trees"]], "Mathematical formulation": [[18, "mathematical-formulation"]], "Classification, regression and multi-output problems": [[18, "classification-regression-and-multi-output-problems"]], "Complexity": [[18, "complexity"]], "Tips on practical use": [[18, "tips-on-practical-use"]], "Limitations compared to decision trees": [[18, "limitations-compared-to-decision-trees"]], "References:": [[18, null]], "Unsupervised Decision Trees": [[19, "unsupervised-decision-trees"]], "Unsupervised Criterion": [[19, "unsupervised-criterion"]], "Two-Means": [[19, "two-means"]], "Fast-BIC": [[19, "fast-bic"]], "Evaluating Unsupervised Trees": [[19, "evaluating-unsupervised-trees"]], "Examples using scikit-tree": [[20, "examples-using-scikit-tree"]], "User Guide": [[21, "user-guide"]], "Release History": [[22, "release-history"]], "What\u2019s new?": [[24, "what-s-new"]], "Version 0.1": [[24, "version-0-1"]], "Changelog": [[24, "changelog"]], "Code and Documentation Contributors": [[24, "code-and-documentation-contributors"]]}, "indexentries": {"module": [[0, "module-sktree"]], "sktree": [[0, "module-sktree"]], "obliquerandomforestclassifier (class in sktree)": [[7, "sktree.ObliqueRandomForestClassifier"]], "apply() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.apply"]], "base_estimator_ (sktree.obliquerandomforestclassifier property)": [[7, "sktree.ObliqueRandomForestClassifier.base_estimator_"]], "decision_path() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.decision_path"]], "feature_importances_ (sktree.obliquerandomforestclassifier property)": [[7, "sktree.ObliqueRandomForestClassifier.feature_importances_"]], "fit() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.fit"]], "get_params() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.get_params"]], "predict() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.predict"]], "predict_log_proba() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.predict_log_proba"]], "predict_proba() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.predict_proba"]], "score() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.score"]], "set_params() (sktree.obliquerandomforestclassifier method)": [[7, "sktree.ObliqueRandomForestClassifier.set_params"]], "patchobliquerandomforestclassifier (class in sktree)": [[8, "sktree.PatchObliqueRandomForestClassifier"]], "apply() (sktree.patchobliquerandomforestclassifier method)": [[8, "sktree.PatchObliqueRandomForestClassifier.apply"]], "base_estimator_ (sktree.patchobliquerandomforestclassifier property)": [[8, "sktree.PatchObliqueRandomForestClassifier.base_estimator_"]], "decision_path() (sktree.patchobliquerandomforestclassifier method)": [[8, "sktree.PatchObliqueRandomForestClassifier.decision_path"]], "feature_importances_ (sktree.patchobliquerandomforestclassifier property)": [[8, "sktree.PatchObliqueRandomForestClassifier.feature_importances_"]], "fit() (sktree.patchobliquerandomforestclassifier method)": [[8, "sktree.PatchObliqueRandomForestClassifier.fit"]], "get_params() (sktree.patchobliquerandomforestclassifier method)": [[8, "sktree.PatchObliqueRandomForestClassifier.get_params"]], "predict() (sktree.patchobliquerandomforestclassifier method)": [[8, "sktree.PatchObliqueRandomForestClassifier.predict"]], "predict_log_proba() (sktree.patchobliquerandomforestclassifier method)": [[8, "sktree.PatchObliqueRandomForestClassifier.predict_log_proba"]], "predict_proba() (sktree.patchobliquerandomforestclassifier method)": [[8, "sktree.PatchObliqueRandomForestClassifier.predict_proba"]], "score() (sktree.patchobliquerandomforestclassifier method)": [[8, "sktree.PatchObliqueRandomForestClassifier.score"]], "set_params() (sktree.patchobliquerandomforestclassifier method)": [[8, "sktree.PatchObliqueRandomForestClassifier.set_params"]], "unsupervisedobliquerandomforest (class in sktree)": [[9, "sktree.UnsupervisedObliqueRandomForest"]], "apply() (sktree.unsupervisedobliquerandomforest method)": [[9, "sktree.UnsupervisedObliqueRandomForest.apply"]], "base_estimator_ (sktree.unsupervisedobliquerandomforest property)": [[9, "sktree.UnsupervisedObliqueRandomForest.base_estimator_"]], "decision_path() (sktree.unsupervisedobliquerandomforest method)": [[9, "sktree.UnsupervisedObliqueRandomForest.decision_path"]], "feature_importances_ (sktree.unsupervisedobliquerandomforest property)": [[9, "sktree.UnsupervisedObliqueRandomForest.feature_importances_"]], "fit() (sktree.unsupervisedobliquerandomforest method)": [[9, "sktree.UnsupervisedObliqueRandomForest.fit"]], "fit_predict() (sktree.unsupervisedobliquerandomforest method)": [[9, "sktree.UnsupervisedObliqueRandomForest.fit_predict"]], "fit_transform() (sktree.unsupervisedobliquerandomforest method)": [[9, "sktree.UnsupervisedObliqueRandomForest.fit_transform"]], "get_params() (sktree.unsupervisedobliquerandomforest method)": [[9, "sktree.UnsupervisedObliqueRandomForest.get_params"]], "predict() (sktree.unsupervisedobliquerandomforest method)": [[9, "sktree.UnsupervisedObliqueRandomForest.predict"]], "set_output() (sktree.unsupervisedobliquerandomforest method)": [[9, "sktree.UnsupervisedObliqueRandomForest.set_output"]], "set_params() (sktree.unsupervisedobliquerandomforest method)": [[9, "sktree.UnsupervisedObliqueRandomForest.set_params"]], "transform() (sktree.unsupervisedobliquerandomforest method)": [[9, "sktree.UnsupervisedObliqueRandomForest.transform"]], "unsupervisedrandomforest (class in sktree)": [[10, "sktree.UnsupervisedRandomForest"]], "apply() (sktree.unsupervisedrandomforest method)": [[10, "sktree.UnsupervisedRandomForest.apply"]], "base_estimator_ (sktree.unsupervisedrandomforest property)": [[10, "sktree.UnsupervisedRandomForest.base_estimator_"]], "decision_path() (sktree.unsupervisedrandomforest method)": [[10, "sktree.UnsupervisedRandomForest.decision_path"]], "feature_importances_ (sktree.unsupervisedrandomforest property)": [[10, "sktree.UnsupervisedRandomForest.feature_importances_"]], "fit() (sktree.unsupervisedrandomforest method)": [[10, "sktree.UnsupervisedRandomForest.fit"]], "fit_predict() (sktree.unsupervisedrandomforest method)": [[10, "sktree.UnsupervisedRandomForest.fit_predict"]], "fit_transform() (sktree.unsupervisedrandomforest method)": [[10, "sktree.UnsupervisedRandomForest.fit_transform"]], "get_params() (sktree.unsupervisedrandomforest method)": [[10, "sktree.UnsupervisedRandomForest.get_params"]], "predict() (sktree.unsupervisedrandomforest method)": [[10, "sktree.UnsupervisedRandomForest.predict"]], "set_output() (sktree.unsupervisedrandomforest method)": [[10, "sktree.UnsupervisedRandomForest.set_output"]], "set_params() (sktree.unsupervisedrandomforest method)": [[10, "sktree.UnsupervisedRandomForest.set_params"]], "transform() (sktree.unsupervisedrandomforest method)": [[10, "sktree.UnsupervisedRandomForest.transform"]], "obliquedecisiontreeclassifier (class in sktree.tree)": [[11, "sktree.tree.ObliqueDecisionTreeClassifier"]], "apply() (sktree.tree.obliquedecisiontreeclassifier method)": [[11, "sktree.tree.ObliqueDecisionTreeClassifier.apply"]], "cost_complexity_pruning_path() (sktree.tree.obliquedecisiontreeclassifier method)": [[11, "sktree.tree.ObliqueDecisionTreeClassifier.cost_complexity_pruning_path"]], "decision_path() (sktree.tree.obliquedecisiontreeclassifier method)": [[11, "sktree.tree.ObliqueDecisionTreeClassifier.decision_path"]], "feature_importances_ (sktree.tree.obliquedecisiontreeclassifier property)": [[11, "sktree.tree.ObliqueDecisionTreeClassifier.feature_importances_"]], "fit() (sktree.tree.obliquedecisiontreeclassifier method)": [[11, "sktree.tree.ObliqueDecisionTreeClassifier.fit"]], "get_depth() (sktree.tree.obliquedecisiontreeclassifier method)": [[11, "sktree.tree.ObliqueDecisionTreeClassifier.get_depth"]], "get_n_leaves() (sktree.tree.obliquedecisiontreeclassifier method)": [[11, "sktree.tree.ObliqueDecisionTreeClassifier.get_n_leaves"]], "get_params() (sktree.tree.obliquedecisiontreeclassifier method)": [[11, "sktree.tree.ObliqueDecisionTreeClassifier.get_params"]], "predict() (sktree.tree.obliquedecisiontreeclassifier method)": [[11, "sktree.tree.ObliqueDecisionTreeClassifier.predict"]], "predict_log_proba() (sktree.tree.obliquedecisiontreeclassifier method)": [[11, "sktree.tree.ObliqueDecisionTreeClassifier.predict_log_proba"]], "predict_proba() (sktree.tree.obliquedecisiontreeclassifier method)": [[11, "sktree.tree.ObliqueDecisionTreeClassifier.predict_proba"]], "score() (sktree.tree.obliquedecisiontreeclassifier method)": [[11, "sktree.tree.ObliqueDecisionTreeClassifier.score"]], "set_params() (sktree.tree.obliquedecisiontreeclassifier method)": [[11, "sktree.tree.ObliqueDecisionTreeClassifier.set_params"]], "patchobliquedecisiontreeclassifier (class in sktree.tree)": [[12, "sktree.tree.PatchObliqueDecisionTreeClassifier"]], "apply() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[12, "sktree.tree.PatchObliqueDecisionTreeClassifier.apply"]], "cost_complexity_pruning_path() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[12, "sktree.tree.PatchObliqueDecisionTreeClassifier.cost_complexity_pruning_path"]], "decision_path() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[12, "sktree.tree.PatchObliqueDecisionTreeClassifier.decision_path"]], "feature_importances_ (sktree.tree.patchobliquedecisiontreeclassifier property)": [[12, "sktree.tree.PatchObliqueDecisionTreeClassifier.feature_importances_"]], "fit() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[12, "sktree.tree.PatchObliqueDecisionTreeClassifier.fit"]], "get_depth() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[12, "sktree.tree.PatchObliqueDecisionTreeClassifier.get_depth"]], "get_n_leaves() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[12, "sktree.tree.PatchObliqueDecisionTreeClassifier.get_n_leaves"]], "get_params() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[12, "sktree.tree.PatchObliqueDecisionTreeClassifier.get_params"]], "predict() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[12, "sktree.tree.PatchObliqueDecisionTreeClassifier.predict"]], "predict_log_proba() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[12, "sktree.tree.PatchObliqueDecisionTreeClassifier.predict_log_proba"]], "predict_proba() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[12, "sktree.tree.PatchObliqueDecisionTreeClassifier.predict_proba"]], "score() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[12, "sktree.tree.PatchObliqueDecisionTreeClassifier.score"]], "set_params() (sktree.tree.patchobliquedecisiontreeclassifier method)": [[12, "sktree.tree.PatchObliqueDecisionTreeClassifier.set_params"]], "unsuperviseddecisiontree (class in sktree.tree)": [[13, "sktree.tree.UnsupervisedDecisionTree"]], "apply() (sktree.tree.unsuperviseddecisiontree method)": [[13, "sktree.tree.UnsupervisedDecisionTree.apply"]], "cost_complexity_pruning_path() (sktree.tree.unsuperviseddecisiontree method)": [[13, "sktree.tree.UnsupervisedDecisionTree.cost_complexity_pruning_path"]], "decision_path() (sktree.tree.unsuperviseddecisiontree method)": [[13, "sktree.tree.UnsupervisedDecisionTree.decision_path"]], "feature_importances_ (sktree.tree.unsuperviseddecisiontree property)": [[13, "sktree.tree.UnsupervisedDecisionTree.feature_importances_"]], "fit_predict() (sktree.tree.unsuperviseddecisiontree method)": [[13, "sktree.tree.UnsupervisedDecisionTree.fit_predict"]], "fit_transform() (sktree.tree.unsuperviseddecisiontree method)": [[13, "sktree.tree.UnsupervisedDecisionTree.fit_transform"]], "get_depth() (sktree.tree.unsuperviseddecisiontree method)": [[13, "sktree.tree.UnsupervisedDecisionTree.get_depth"]], "get_n_leaves() (sktree.tree.unsuperviseddecisiontree method)": [[13, "sktree.tree.UnsupervisedDecisionTree.get_n_leaves"]], "get_params() (sktree.tree.unsuperviseddecisiontree method)": [[13, "sktree.tree.UnsupervisedDecisionTree.get_params"]], "predict() (sktree.tree.unsuperviseddecisiontree method)": [[13, "sktree.tree.UnsupervisedDecisionTree.predict"]], "set_output() (sktree.tree.unsuperviseddecisiontree method)": [[13, "sktree.tree.UnsupervisedDecisionTree.set_output"]], "set_params() (sktree.tree.unsuperviseddecisiontree method)": [[13, "sktree.tree.UnsupervisedDecisionTree.set_params"]], "transform() (sktree.tree.unsuperviseddecisiontree method)": [[13, "sktree.tree.UnsupervisedDecisionTree.transform"]], "unsupervisedobliquedecisiontree (class in sktree.tree)": [[14, "sktree.tree.UnsupervisedObliqueDecisionTree"]], "apply() (sktree.tree.unsupervisedobliquedecisiontree method)": [[14, "sktree.tree.UnsupervisedObliqueDecisionTree.apply"]], "cost_complexity_pruning_path() (sktree.tree.unsupervisedobliquedecisiontree method)": [[14, "sktree.tree.UnsupervisedObliqueDecisionTree.cost_complexity_pruning_path"]], "decision_path() (sktree.tree.unsupervisedobliquedecisiontree method)": [[14, "sktree.tree.UnsupervisedObliqueDecisionTree.decision_path"]], "feature_importances_ (sktree.tree.unsupervisedobliquedecisiontree property)": [[14, "sktree.tree.UnsupervisedObliqueDecisionTree.feature_importances_"]], "fit_predict() (sktree.tree.unsupervisedobliquedecisiontree method)": [[14, "sktree.tree.UnsupervisedObliqueDecisionTree.fit_predict"]], "fit_transform() (sktree.tree.unsupervisedobliquedecisiontree method)": [[14, "sktree.tree.UnsupervisedObliqueDecisionTree.fit_transform"]], "get_depth() (sktree.tree.unsupervisedobliquedecisiontree method)": [[14, "sktree.tree.UnsupervisedObliqueDecisionTree.get_depth"]], "get_n_leaves() (sktree.tree.unsupervisedobliquedecisiontree method)": [[14, "sktree.tree.UnsupervisedObliqueDecisionTree.get_n_leaves"]], "get_params() (sktree.tree.unsupervisedobliquedecisiontree method)": [[14, "sktree.tree.UnsupervisedObliqueDecisionTree.get_params"]], "predict() (sktree.tree.unsupervisedobliquedecisiontree method)": [[14, "sktree.tree.UnsupervisedObliqueDecisionTree.predict"]], "set_output() (sktree.tree.unsupervisedobliquedecisiontree method)": [[14, "sktree.tree.UnsupervisedObliqueDecisionTree.set_output"]], "set_params() (sktree.tree.unsupervisedobliquedecisiontree method)": [[14, "sktree.tree.UnsupervisedObliqueDecisionTree.set_params"]], "transform() (sktree.tree.unsupervisedobliquedecisiontree method)": [[14, "sktree.tree.UnsupervisedObliqueDecisionTree.transform"]]}})