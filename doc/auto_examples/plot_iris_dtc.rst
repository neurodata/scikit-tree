
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_iris_dtc.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_iris_dtc.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_iris_dtc.py:


=======================================================================
Plot the decision surface of decision trees trained on the iris dataset
=======================================================================

Plot the decision surface of a decision tree and oblique decision tree
trained on pairs of features of the iris dataset.

See :ref:`decision tree <tree>` for more information on the estimators.

For each pair of iris features, the decision tree learns axis-aligned decision
boundaries made of combinations of simple thresholding rules inferred from
the training samples. The oblique decision tree learns oblique decision boundaries
made from linear combinations of the features in the training samples and then
the same thresholding rule as regular decision trees.

We also show the tree structure of a model built on all of the features.

.. GENERATED FROM PYTHON SOURCE LINES 20-21

First load the copy of the Iris dataset shipped with scikit-learn:

.. GENERATED FROM PYTHON SOURCE LINES 21-28

.. code-block:: default

    from sklearn.datasets import load_iris

    iris = load_iris()


    import matplotlib.pyplot as plt








.. GENERATED FROM PYTHON SOURCE LINES 29-30

Display the decision functions of trees trained on all pairs of features.

.. GENERATED FROM PYTHON SOURCE LINES 30-93

.. code-block:: default

    import numpy as np
    from sklearn.datasets import load_iris
    from sklearn.inspection import DecisionBoundaryDisplay

    from sktree._lib.sklearn.tree import DecisionTreeClassifier, plot_tree
    from sktree.tree import ObliqueDecisionTreeClassifier

    # Parameters
    n_classes = 3
    plot_colors = "ryb"
    plot_step = 0.02

    clf_labels = ["Axis-aligned", "Oblique"]
    random_state = 123456

    clfs = [
        DecisionTreeClassifier(random_state=random_state),
        ObliqueDecisionTreeClassifier(random_state=random_state),
    ]

    for clf, clf_label in zip(clfs, clf_labels):
        fig, axes = plt.subplots(2, 3)
        axes = axes.flatten()

        for pairidx, pair in enumerate([[0, 1], [0, 2], [0, 3], [1, 2], [1, 3], [2, 3]]):
            # We only take the two corresponding features
            X = iris.data[:, pair]
            y = iris.target

            # Train
            clf.fit(X, y)

            # Plot the decision boundary
            ax = axes[pairidx]
            plt.tight_layout(h_pad=0.5, w_pad=0.5, pad=2.5)
            DecisionBoundaryDisplay.from_estimator(
                clf,
                X,
                cmap=plt.cm.RdYlBu,
                response_method="predict",
                ax=ax,
                xlabel=iris.feature_names[pair[0]],
                ylabel=iris.feature_names[pair[1]],
            )

            # Plot the training points
            for i, color in zip(range(n_classes), plot_colors):
                idx = np.where(y == i)
                ax.scatter(
                    X[idx, 0],
                    X[idx, 1],
                    c=color,
                    label=iris.target_names[i],
                    cmap=plt.cm.RdYlBu,
                    edgecolor="black",
                    s=15,
                )

        fig.suptitle(f"Decision surface of {clf_label} decision trees trained on pairs of features")
        plt.legend(loc="lower right", borderpad=0, handletextpad=0)
        _ = plt.axis("tight")
        plt.show()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_iris_dtc_001.png
         :alt: Decision surface of Axis-aligned decision trees trained on pairs of features
         :srcset: /auto_examples/images/sphx_glr_plot_iris_dtc_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_iris_dtc_002.png
         :alt: Decision surface of Oblique decision trees trained on pairs of features
         :srcset: /auto_examples/images/sphx_glr_plot_iris_dtc_002.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:78: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored
      ax.scatter(
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:64: UserWarning: The figure layout has changed to tight
      plt.tight_layout(h_pad=0.5, w_pad=0.5, pad=2.5)
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:78: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored
      ax.scatter(
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:64: UserWarning: The figure layout has changed to tight
      plt.tight_layout(h_pad=0.5, w_pad=0.5, pad=2.5)
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:78: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored
      ax.scatter(
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:64: UserWarning: The figure layout has changed to tight
      plt.tight_layout(h_pad=0.5, w_pad=0.5, pad=2.5)
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:78: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored
      ax.scatter(
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:64: UserWarning: The figure layout has changed to tight
      plt.tight_layout(h_pad=0.5, w_pad=0.5, pad=2.5)
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:78: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored
      ax.scatter(
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:64: UserWarning: The figure layout has changed to tight
      plt.tight_layout(h_pad=0.5, w_pad=0.5, pad=2.5)
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:78: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored
      ax.scatter(
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:78: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored
      ax.scatter(
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:64: UserWarning: The figure layout has changed to tight
      plt.tight_layout(h_pad=0.5, w_pad=0.5, pad=2.5)
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:78: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored
      ax.scatter(
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:64: UserWarning: The figure layout has changed to tight
      plt.tight_layout(h_pad=0.5, w_pad=0.5, pad=2.5)
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:78: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored
      ax.scatter(
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:64: UserWarning: The figure layout has changed to tight
      plt.tight_layout(h_pad=0.5, w_pad=0.5, pad=2.5)
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:78: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored
      ax.scatter(
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:64: UserWarning: The figure layout has changed to tight
      plt.tight_layout(h_pad=0.5, w_pad=0.5, pad=2.5)
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:78: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored
      ax.scatter(
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:64: UserWarning: The figure layout has changed to tight
      plt.tight_layout(h_pad=0.5, w_pad=0.5, pad=2.5)
    /Users/adam2392/Documents/scikit-tree/examples/plot_iris_dtc.py:78: UserWarning: No data for colormapping provided via 'c'. Parameters 'cmap' will be ignored
      ax.scatter(




.. GENERATED FROM PYTHON SOURCE LINES 94-96

Display the structure of a single decision tree trained on all the features
together.

.. GENERATED FROM PYTHON SOURCE LINES 96-103

.. code-block:: default


    for clf, clf_label in zip(clfs, clf_labels):
        plt.figure()
        clf.fit(iris.data, iris.target)
        plot_tree(clf, filled=True)
        plt.title(f"{clf_label} decision tree trained on all the iris features")
        plt.show()



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_iris_dtc_003.png
         :alt: Axis-aligned decision tree trained on all the iris features
         :srcset: /auto_examples/images/sphx_glr_plot_iris_dtc_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_iris_dtc_004.png
         :alt: Oblique decision tree trained on all the iris features
         :srcset: /auto_examples/images/sphx_glr_plot_iris_dtc_004.png
         :class: sphx-glr-multi-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.572 seconds)


.. _sphx_glr_download_auto_examples_plot_iris_dtc.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_iris_dtc.py <plot_iris_dtc.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_iris_dtc.ipynb <plot_iris_dtc.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
