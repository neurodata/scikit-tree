Search.setIndex({"alltitles": {"API Documentation": [[0, null]], "Analyze a multi-view dataset with a multi-view random forest": [[6, null]], "CMI": [[42, "cmi"], [43, "cmi"]], "Calculate X priors with true pdfs": [[35, "calculate-x-priors-with-true-pdfs"]], "Calculate the statistic": [[36, "calculate-the-statistic"], [37, "calculate-the-statistic"], [38, "calculate-the-statistic"], [39, "calculate-the-statistic"], [41, "calculate-the-statistic"], [42, "calculate-the-statistic"]], "Calculate true posteriors": [[35, "calculate-true-posteriors"]], "Calculating CMI": [[42, null]], "Calculating Hellinger Distance": [[39, null]], "Calculating MI": [[37, null]], "Calculating S@98": [[36, null]], "Calculating S@98 with multiview data": [[41, null]], "Calculating p-value (MIGHT)": [[40, null]], "Calculating p-value with multiview data (CoMIGHT)": [[43, null]], "Calculating pAUC": [[38, null]], "Calibrated decision trees via honesty": [[1, null], [4, "calibrated-decision-trees-via-honesty"], [98, "calibrated-decision-trees-via-honesty"]], "Changelog": [[102, "changelog"], [103, "changelog"], [104, "changelog"], [105, "changelog"], [106, "changelog"], [107, "changelog"], [108, "changelog"], [109, "changelog"], [110, "changelog"], [111, "changelog"]], "Classification, regression and multi-output problems": [[95, "classification-regression-and-multi-output-problems"]], "Code and Documentation Contributors": [[102, "code-and-documentation-contributors"], [103, "code-and-documentation-contributors"], [104, "code-and-documentation-contributors"], [105, "code-and-documentation-contributors"], [106, "code-and-documentation-contributors"], [107, "code-and-documentation-contributors"], [108, "code-and-documentation-contributors"], [109, "code-and-documentation-contributors"], [110, "code-and-documentation-contributors"], [111, "code-and-documentation-contributors"]], "Compare extra oblique forest and oblique random forest predictions on cc18 datasets": [[22, null]], "Compare the decision surfaces of oblique extra-trees with standard oblique trees": [[25, null]], "Comparing sklearn and treeple decision trees": [[4, "comparing-sklearn-and-treeple-decision-trees"], [18, null], [98, "comparing-sklearn-and-treeple-decision-trees"]], "Complexity": [[95, "complexity"]], "Computation times": [[3, null], [7, null], [10, null], [16, null], [17, null], [20, null], [27, null], [32, null], [34, null], [97, null]], "Conda (Recommended)": [[93, "conda-recommended"]], "Contents": [[92, "contents"]], "Create a simulation with two gaussians": [[36, "create-a-simulation-with-two-gaussians"], [37, "create-a-simulation-with-two-gaussians"], [38, "create-a-simulation-with-two-gaussians"], [39, "create-a-simulation-with-two-gaussians"], [40, "create-a-simulation-with-two-gaussians"], [42, "create-a-simulation-with-two-gaussians"], [43, "create-a-simulation-with-two-gaussians"]], "Create a two-dimensional simulation with gaussians": [[41, "create-a-two-dimensional-simulation-with-gaussians"]], "Data generation": [[9, "data-generation"]], "Datasets": [[0, "datasets"]], "Decision-tree splitters": [[4, "decision-tree-splitters"], [28, null], [98, "decision-tree-splitters"]], "Demonstrate and visualize a multi-view projection matrix for an axis-aligned tree": [[29, null]], "Dependencies": [[93, "dependencies"]], "Differences compared to decision trees": [[95, "differences-compared-to-decision-trees"]], "Discontiguous Patches": [[30, "discontiguous-patches"]], "Discussion": [[22, "discussion"], [23, "discussion"], [29, "discussion"], [31, "discussion"]], "Distance Metrics": [[0, "distance-metrics"]], "Estimating true posteriors & statistics": [[35, null]], "Evaluating Unsupervised Trees": [[96, "evaluating-unsupervised-trees"]], "Examples": [[4, null], [98, "examples"]], "Examples using treeple": [[98, null]], "Examples using treeple.datasets.make_trunk_classification": [[64, "examples-using-treeple-datasets-make-trunk-classification"]], "Examples using treeple.datasets.make_trunk_mixture_classification": [[65, "examples-using-treeple-datasets-make-trunk-mixture-classification"]], "Examples using treeple.stats.build_coleman_forest": [[75, "examples-using-treeple-stats-build-coleman-forest"]], "Examples using treeple.stats.build_oob_forest": [[77, "examples-using-treeple-stats-build-oob-forest"]], "Examples:": [[94, null]], "Experimental Functionality": [[0, "experimental-functionality"]], "ExtendedIsolationForest example": [[9, null]], "Fast-BIC": [[96, "fast-bic"]], "Feature importance evaluation": [[94, "feature-importance-evaluation"]], "Fit Random Forest and Multi-view Random Forest": [[6, "fit-random-forest-and-multi-view-random-forest"]], "Fit the model": [[36, "fit-the-model"], [37, "fit-the-model"], [38, "fit-the-model"], [39, "fit-the-model"]], "Fit the model to the training samples": [[14, "fit-the-model-to-the-training-samples"]], "Fit the model with X and Z": [[41, "fit-the-model-with-x-and-z"], [42, "fit-the-model-with-x-and-z"]], "Fit the model with Z only": [[42, "fit-the-model-with-z-only"]], "Fit the models and calculate the p-value": [[40, "fit-the-models-and-calculate-the-p-value"], [43, "fit-the-models-and-calculate-the-p-value"]], "Generate 1D patches": [[30, "generate-1d-patches"]], "Generate 2D patches": [[30, "generate-2d-patches"]], "Generate 3D patches": [[30, "generate-3d-patches"]], "Generate Quantile Predictions": [[15, "generate-quantile-predictions"]], "Generate gaussian mixture simulations": [[35, "generate-gaussian-mixture-simulations"]], "Generate projection matrix": [[31, "generate-projection-matrix"]], "Generate the data": [[12, "generate-the-data"], [15, "generate-the-data"]], "Generate true statistic estimates: MI": [[35, "generate-true-statistic-estimates-mi"]], "Generate true statistic estimates: S@98": [[35, "generate-true-statistic-estimates-s-98"]], "Generate true statistic estimates: pAUC@90": [[35, "generate-true-statistic-estimates-pauc-90"]], "Getting started:": [[92, null]], "Hellinger Distance": [[39, "hellinger-distance"]], "Honest Trees": [[95, "honest-trees"]], "Independence Testing": [[40, "independence-testing"], [43, "independence-testing"]], "Indices and tables": [[92, "indices-and-tables"]], "Initialize patch splitter": [[30, "initialize-patch-splitter"], [31, "initialize-patch-splitter"]], "Initialize the multi-view splitter": [[29, "initialize-the-multi-view-splitter"]], "Initialize the splitter": [[31, "initialize-the-splitter"]], "Installation": [[93, null]], "Installing from source with Meson": [[93, "installing-from-source-with-meson"]], "Installing with pip": [[93, "installing-with-pip"]], "Limitations compared to decision trees": [[95, "limitations-compared-to-decision-trees"]], "MI": [[37, "mi"], [40, "mi"]], "Mathematical formulation": [[95, "mathematical-formulation"]], "Modify the simulation with permuted variable two": [[43, "modify-the-simulation-with-permuted-variable-two"]], "Multi-view learning with Decision-trees": [[4, "multi-view-learning-with-decision-trees"], [5, null], [98, "multi-view-learning-with-decision-trees"]], "Oblique Random Forests": [[94, null]], "Oblique Trees": [[95, "oblique-trees"]], "Outlier Detection": [[0, "outlier-detection"]], "Outlier-detection": [[4, "outlier-detection"], [8, null], [98, "outlier-detection"]], "Plot discrete decision boundary": [[9, "plot-discrete-decision-boundary"]], "Plot honest forest calibrations on overlapping gaussian simulations": [[2, null]], "Plot oblique forest and axis-aligned random forest predictions on cc18 datasets": [[26, null]], "Plot oblique forest and axis-aligned random forest predictions on sparse parity simulation": [[24, null]], "Plot path length decision boundary": [[9, "plot-path-length-decision-boundary"]], "Plot the decision surface of decision trees trained on the iris dataset": [[19, null]], "Plot the projection matrices of an oblique tree for sampling images, or time-series": [[30, null]], "Plot the results": [[13, "plot-the-results"], [14, "plot-the-results"], [15, "plot-the-results"]], "Plot the sparse projection matrices of an oblique tree": [[31, null]], "Predicting with different quantile interpolation methods": [[12, null]], "Quantile Prediction Function": [[13, "quantile-prediction-function"]], "Quantile Predictions with Random Forest": [[4, "quantile-predictions-with-random-forest"], [11, null], [98, "quantile-predictions-with-random-forest"]], "Quantile prediction intervals with Random Forest Regressor": [[13, null]], "Quantile prediction with Random Forest Regressor class": [[14, null]], "Quantile regression with oblique regression forest": [[15, null]], "References": [[2, "references"], [9, "references"], [22, "references"], [23, "references"], [92, null], [94, null], [94, null], [96, null]], "References:": [[95, null]], "Release History": [[100, null]], "S@98": [[36, "s-98"]], "S@98 with multiview data": [[41, "s-98-with-multiview-data"]], "Sample the projection matrix": [[29, "sample-the-projection-matrix"]], "Sampling split candidates scaled to each feature-set dimensionality": [[29, "sampling-split-candidates-scaled-to-each-feature-set-dimensionality"]], "Scikit-learn Tree Estimators": [[0, "scikit-learn-tree-estimators"]], "Simulate data": [[6, "simulate-data"]], "Sparse oblique projections with oblique decision-trees": [[4, "sparse-oblique-projections-with-oblique-decision-trees"], [21, null], [98, "sparse-oblique-projections-with-oblique-decision-trees"]], "Speed of Extra Oblique Random Forest vs Oblique Random Forest on different dataset sizes": [[23, null]], "Statistical Hypothesis Testing": [[0, "statistical-hypothesis-testing"]], "Supervised": [[0, "supervised"]], "Supervised Decision Trees": [[95, null]], "The interpolation methods": [[12, "the-interpolation-methods"]], "Tips on practical use": [[95, "tips-on-practical-use"]], "Training of the model": [[9, "training-of-the-model"]], "Treeple for Hypothesis Testing": [[4, "treeple-for-hypothesis-testing"], [33, null], [98, "treeple-for-hypothesis-testing"]], "True posterior estimation": [[35, "true-posterior-estimation"]], "Two-Means": [[96, "two-means"]], "Unsupervised": [[0, "unsupervised"]], "Unsupervised Criterion": [[96, "unsupervised-criterion"]], "Unsupervised Decision Trees": [[96, null]], "User Guide": [[99, null]], "Version 0.1": [[102, null]], "Version 0.10": [[103, null]], "Version 0.2": [[104, null]], "Version 0.3": [[105, null]], "Version 0.4": [[106, null]], "Version 0.5": [[107, null]], "Version 0.6": [[108, null]], "Version 0.7": [[109, null]], "Version 0.8": [[110, null]], "Version 0.9": [[111, null]], "Visualize scores and compare performance": [[6, "visualize-scores-and-compare-performance"]], "Visualize the prediction of each tree within the forest": [[9, "visualize-the-prediction-of-each-tree-within-the-forest"]], "pAUC@r": [[38, "pauc-r"]], "treeple": [[92, null]], "treeple.ExtendedIsolationForest": [[44, null]], "treeple.ExtraTreesClassifier": [[45, null]], "treeple.ExtraTreesRegressor": [[46, null]], "treeple.HonestForestClassifier": [[47, null]], "treeple.MultiViewRandomForestClassifier": [[48, null]], "treeple.NearestNeighborsMetaEstimator": [[49, null]], "treeple.ObliqueRandomForestClassifier": [[50, null]], "treeple.ObliqueRandomForestRegressor": [[51, null]], "treeple.PatchObliqueRandomForestClassifier": [[52, null]], "treeple.PatchObliqueRandomForestRegressor": [[53, null]], "treeple.RandomForestClassifier": [[54, null]], "treeple.RandomForestRegressor": [[55, null]], "treeple.UnsupervisedObliqueRandomForest": [[56, null]], "treeple.UnsupervisedRandomForest": [[57, null]], "treeple.datasets.approximate_clf_mutual_information": [[58, null]], "treeple.datasets.approximate_clf_mutual_information_with_monte_carlo": [[59, null]], "treeple.datasets.make_gaussian_mixture": [[60, null]], "treeple.datasets.make_joint_factor_model": [[61, null]], "treeple.datasets.make_marron_wand_classification": [[62, null]], "treeple.datasets.make_quadratic_classification": [[63, null]], "treeple.datasets.make_trunk_classification": [[64, null]], "treeple.datasets.make_trunk_mixture_classification": [[65, null]], "treeple.experimental.conditional_resample": [[66, null]], "treeple.experimental.mutual_info.cmi_gaussian": [[67, null]], "treeple.experimental.mutual_info.entropy_gaussian": [[68, null]], "treeple.experimental.mutual_info.mi_gaussian": [[69, null]], "treeple.experimental.mutual_info_ksg": [[70, null]], "treeple.experimental.simulate.simulate_helix": [[71, null]], "treeple.experimental.simulate.simulate_multivariate_gaussian": [[72, null]], "treeple.experimental.simulate.simulate_sphere": [[73, null]], "treeple.stats.PermutationHonestForestClassifier": [[74, null]], "treeple.stats.build_coleman_forest": [[75, null]], "treeple.stats.build_cv_forest": [[76, null]], "treeple.stats.build_oob_forest": [[77, null]], "treeple.stats.build_permutation_forest": [[78, null]], "treeple.tree.DecisionTreeClassifier": [[79, null]], "treeple.tree.DecisionTreeRegressor": [[80, null]], "treeple.tree.ExtraTreeClassifier": [[81, null]], "treeple.tree.ExtraTreeRegressor": [[82, null]], "treeple.tree.HonestTreeClassifier": [[83, null]], "treeple.tree.MultiViewDecisionTreeClassifier": [[84, null]], "treeple.tree.ObliqueDecisionTreeClassifier": [[85, null]], "treeple.tree.ObliqueDecisionTreeRegressor": [[86, null]], "treeple.tree.PatchObliqueDecisionTreeClassifier": [[87, null]], "treeple.tree.PatchObliqueDecisionTreeRegressor": [[88, null]], "treeple.tree.UnsupervisedDecisionTree": [[89, null]], "treeple.tree.UnsupervisedObliqueDecisionTree": [[90, null]], "treeple.tree.compute_forest_similarity_matrix": [[91, null]]}, "docnames": ["api", "auto_examples/calibration/index", "auto_examples/calibration/plot_overlapping_gaussians", "auto_examples/calibration/sg_execution_times", "auto_examples/index", "auto_examples/multiview/index", "auto_examples/multiview/plot_multiview_dtc", "auto_examples/multiview/sg_execution_times", "auto_examples/outlier_detection/index", "auto_examples/outlier_detection/plot_extended_isolation_forest", "auto_examples/outlier_detection/sg_execution_times", "auto_examples/quantile_predictions/index", "auto_examples/quantile_predictions/plot_quantile_interpolation_with_RF", "auto_examples/quantile_predictions/plot_quantile_regression_intervals_with_RF", "auto_examples/quantile_predictions/plot_quantile_toy_example_with_RF", "auto_examples/quantile_predictions/plot_quantile_vs_standard_oblique_forest", "auto_examples/quantile_predictions/sg_execution_times", "auto_examples/sg_execution_times", "auto_examples/sklearn_vs_treeple/index", "auto_examples/sklearn_vs_treeple/plot_iris_dtc", "auto_examples/sklearn_vs_treeple/sg_execution_times", "auto_examples/sparse_oblique_trees/index", "auto_examples/sparse_oblique_trees/plot_extra_oblique_random_forest", "auto_examples/sparse_oblique_trees/plot_extra_orf_sample_size", "auto_examples/sparse_oblique_trees/plot_oblique_axis_aligned_forests_sparse_parity", "auto_examples/sparse_oblique_trees/plot_oblique_forests_iris", "auto_examples/sparse_oblique_trees/plot_oblique_random_forest", "auto_examples/sparse_oblique_trees/sg_execution_times", "auto_examples/splitters/index", "auto_examples/splitters/plot_multiview_axis_aligned_splitter", "auto_examples/splitters/plot_projection_matrices", "auto_examples/splitters/plot_sparse_projection_matrix", "auto_examples/splitters/sg_execution_times", "auto_examples/treeple/index", "auto_examples/treeple/sg_execution_times", "auto_examples/treeple/treeple_tutorial_0_GMM", "auto_examples/treeple/treeple_tutorial_1_1a_SA98", "auto_examples/treeple/treeple_tutorial_1_1b_MI", "auto_examples/treeple/treeple_tutorial_1_1c_pAUC", "auto_examples/treeple/treeple_tutorial_1_1d_HD", "auto_examples/treeple/treeple_tutorial_1_2_pvalue", "auto_examples/treeple/treeple_tutorial_2_1a_SA98_multiview", "auto_examples/treeple/treeple_tutorial_2_1b_CMI", "auto_examples/treeple/treeple_tutorial_2_2_pvalue_multiview", "generated/treeple.ExtendedIsolationForest", "generated/treeple.ExtraTreesClassifier", "generated/treeple.ExtraTreesRegressor", "generated/treeple.HonestForestClassifier", "generated/treeple.MultiViewRandomForestClassifier", "generated/treeple.NearestNeighborsMetaEstimator", "generated/treeple.ObliqueRandomForestClassifier", "generated/treeple.ObliqueRandomForestRegressor", "generated/treeple.PatchObliqueRandomForestClassifier", "generated/treeple.PatchObliqueRandomForestRegressor", "generated/treeple.RandomForestClassifier", "generated/treeple.RandomForestRegressor", "generated/treeple.UnsupervisedObliqueRandomForest", "generated/treeple.UnsupervisedRandomForest", "generated/treeple.datasets.approximate_clf_mutual_information", "generated/treeple.datasets.approximate_clf_mutual_information_with_monte_carlo", "generated/treeple.datasets.make_gaussian_mixture", "generated/treeple.datasets.make_joint_factor_model", "generated/treeple.datasets.make_marron_wand_classification", "generated/treeple.datasets.make_quadratic_classification", "generated/treeple.datasets.make_trunk_classification", "generated/treeple.datasets.make_trunk_mixture_classification", "generated/treeple.experimental.conditional_resample", "generated/treeple.experimental.mutual_info.cmi_gaussian", "generated/treeple.experimental.mutual_info.entropy_gaussian", "generated/treeple.experimental.mutual_info.mi_gaussian", "generated/treeple.experimental.mutual_info_ksg", "generated/treeple.experimental.simulate.simulate_helix", "generated/treeple.experimental.simulate.simulate_multivariate_gaussian", "generated/treeple.experimental.simulate.simulate_sphere", "generated/treeple.stats.PermutationHonestForestClassifier", "generated/treeple.stats.build_coleman_forest", "generated/treeple.stats.build_cv_forest", "generated/treeple.stats.build_oob_forest", "generated/treeple.stats.build_permutation_forest", "generated/treeple.tree.DecisionTreeClassifier", "generated/treeple.tree.DecisionTreeRegressor", "generated/treeple.tree.ExtraTreeClassifier", "generated/treeple.tree.ExtraTreeRegressor", "generated/treeple.tree.HonestTreeClassifier", "generated/treeple.tree.MultiViewDecisionTreeClassifier", "generated/treeple.tree.ObliqueDecisionTreeClassifier", "generated/treeple.tree.ObliqueDecisionTreeRegressor", "generated/treeple.tree.PatchObliqueDecisionTreeClassifier", "generated/treeple.tree.PatchObliqueDecisionTreeRegressor", "generated/treeple.tree.UnsupervisedDecisionTree", "generated/treeple.tree.UnsupervisedObliqueDecisionTree", "generated/treeple.tree.compute_forest_similarity_matrix", "index", "install", "modules/ensemble", "modules/supervised_tree", "modules/unsupervised_tree", "sg_execution_times", "use", "user_guide", "whats_new", "whats_new/_contributors", "whats_new/v0.1", "whats_new/v0.10", "whats_new/v0.2", "whats_new/v0.3", "whats_new/v0.4", "whats_new/v0.5", "whats_new/v0.6", "whats_new/v0.7", "whats_new/v0.8", "whats_new/v0.9"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["api.rst", "auto_examples/calibration/index.rst", "auto_examples/calibration/plot_overlapping_gaussians.rst", "auto_examples/calibration/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/multiview/index.rst", "auto_examples/multiview/plot_multiview_dtc.rst", "auto_examples/multiview/sg_execution_times.rst", "auto_examples/outlier_detection/index.rst", "auto_examples/outlier_detection/plot_extended_isolation_forest.rst", "auto_examples/outlier_detection/sg_execution_times.rst", "auto_examples/quantile_predictions/index.rst", "auto_examples/quantile_predictions/plot_quantile_interpolation_with_RF.rst", "auto_examples/quantile_predictions/plot_quantile_regression_intervals_with_RF.rst", "auto_examples/quantile_predictions/plot_quantile_toy_example_with_RF.rst", "auto_examples/quantile_predictions/plot_quantile_vs_standard_oblique_forest.rst", "auto_examples/quantile_predictions/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "auto_examples/sklearn_vs_treeple/index.rst", "auto_examples/sklearn_vs_treeple/plot_iris_dtc.rst", "auto_examples/sklearn_vs_treeple/sg_execution_times.rst", "auto_examples/sparse_oblique_trees/index.rst", "auto_examples/sparse_oblique_trees/plot_extra_oblique_random_forest.rst", "auto_examples/sparse_oblique_trees/plot_extra_orf_sample_size.rst", "auto_examples/sparse_oblique_trees/plot_oblique_axis_aligned_forests_sparse_parity.rst", "auto_examples/sparse_oblique_trees/plot_oblique_forests_iris.rst", "auto_examples/sparse_oblique_trees/plot_oblique_random_forest.rst", "auto_examples/sparse_oblique_trees/sg_execution_times.rst", "auto_examples/splitters/index.rst", "auto_examples/splitters/plot_multiview_axis_aligned_splitter.rst", "auto_examples/splitters/plot_projection_matrices.rst", "auto_examples/splitters/plot_sparse_projection_matrix.rst", "auto_examples/splitters/sg_execution_times.rst", "auto_examples/treeple/index.rst", "auto_examples/treeple/sg_execution_times.rst", "auto_examples/treeple/treeple_tutorial_0_GMM.rst", "auto_examples/treeple/treeple_tutorial_1_1a_SA98.rst", "auto_examples/treeple/treeple_tutorial_1_1b_MI.rst", "auto_examples/treeple/treeple_tutorial_1_1c_pAUC.rst", "auto_examples/treeple/treeple_tutorial_1_1d_HD.rst", "auto_examples/treeple/treeple_tutorial_1_2_pvalue.rst", "auto_examples/treeple/treeple_tutorial_2_1a_SA98_multiview.rst", "auto_examples/treeple/treeple_tutorial_2_1b_CMI.rst", "auto_examples/treeple/treeple_tutorial_2_2_pvalue_multiview.rst", "generated/treeple.ExtendedIsolationForest.rst", "generated/treeple.ExtraTreesClassifier.rst", "generated/treeple.ExtraTreesRegressor.rst", "generated/treeple.HonestForestClassifier.rst", "generated/treeple.MultiViewRandomForestClassifier.rst", "generated/treeple.NearestNeighborsMetaEstimator.rst", "generated/treeple.ObliqueRandomForestClassifier.rst", "generated/treeple.ObliqueRandomForestRegressor.rst", "generated/treeple.PatchObliqueRandomForestClassifier.rst", "generated/treeple.PatchObliqueRandomForestRegressor.rst", "generated/treeple.RandomForestClassifier.rst", "generated/treeple.RandomForestRegressor.rst", "generated/treeple.UnsupervisedObliqueRandomForest.rst", "generated/treeple.UnsupervisedRandomForest.rst", "generated/treeple.datasets.approximate_clf_mutual_information.rst", "generated/treeple.datasets.approximate_clf_mutual_information_with_monte_carlo.rst", "generated/treeple.datasets.make_gaussian_mixture.rst", "generated/treeple.datasets.make_joint_factor_model.rst", "generated/treeple.datasets.make_marron_wand_classification.rst", "generated/treeple.datasets.make_quadratic_classification.rst", "generated/treeple.datasets.make_trunk_classification.rst", "generated/treeple.datasets.make_trunk_mixture_classification.rst", "generated/treeple.experimental.conditional_resample.rst", "generated/treeple.experimental.mutual_info.cmi_gaussian.rst", "generated/treeple.experimental.mutual_info.entropy_gaussian.rst", "generated/treeple.experimental.mutual_info.mi_gaussian.rst", "generated/treeple.experimental.mutual_info_ksg.rst", "generated/treeple.experimental.simulate.simulate_helix.rst", "generated/treeple.experimental.simulate.simulate_multivariate_gaussian.rst", "generated/treeple.experimental.simulate.simulate_sphere.rst", "generated/treeple.stats.PermutationHonestForestClassifier.rst", "generated/treeple.stats.build_coleman_forest.rst", "generated/treeple.stats.build_cv_forest.rst", "generated/treeple.stats.build_oob_forest.rst", "generated/treeple.stats.build_permutation_forest.rst", "generated/treeple.tree.DecisionTreeClassifier.rst", "generated/treeple.tree.DecisionTreeRegressor.rst", "generated/treeple.tree.ExtraTreeClassifier.rst", "generated/treeple.tree.ExtraTreeRegressor.rst", "generated/treeple.tree.HonestTreeClassifier.rst", "generated/treeple.tree.MultiViewDecisionTreeClassifier.rst", "generated/treeple.tree.ObliqueDecisionTreeClassifier.rst", "generated/treeple.tree.ObliqueDecisionTreeRegressor.rst", "generated/treeple.tree.PatchObliqueDecisionTreeClassifier.rst", "generated/treeple.tree.PatchObliqueDecisionTreeRegressor.rst", "generated/treeple.tree.UnsupervisedDecisionTree.rst", "generated/treeple.tree.UnsupervisedObliqueDecisionTree.rst", "generated/treeple.tree.compute_forest_similarity_matrix.rst", "index.rst", "install.rst", "modules/ensemble.rst", "modules/supervised_tree.rst", "modules/unsupervised_tree.rst", "sg_execution_times.rst", "use.rst", "user_guide.rst", "whats_new.rst", "whats_new/_contributors.rst", "whats_new/v0.1.rst", "whats_new/v0.10.rst", "whats_new/v0.2.rst", "whats_new/v0.3.rst", "whats_new/v0.4.rst", "whats_new/v0.5.rst", "whats_new/v0.6.rst", "whats_new/v0.7.rst", "whats_new/v0.8.rst", "whats_new/v0.9.rst"], "indexentries": {}, "objects": {"": [[0, 0, 0, "-", "treeple"]], "treeple": [[44, 1, 1, "", "ExtendedIsolationForest"], [45, 1, 1, "", "ExtraTreesClassifier"], [46, 1, 1, "", "ExtraTreesRegressor"], [47, 1, 1, "", "HonestForestClassifier"], [48, 1, 1, "", "MultiViewRandomForestClassifier"], [49, 1, 1, "", "NearestNeighborsMetaEstimator"], [50, 1, 1, "", "ObliqueRandomForestClassifier"], [51, 1, 1, "", "ObliqueRandomForestRegressor"], [52, 1, 1, "", "PatchObliqueRandomForestClassifier"], [53, 1, 1, "", "PatchObliqueRandomForestRegressor"], [54, 1, 1, "", "RandomForestClassifier"], [55, 1, 1, "", "RandomForestRegressor"], [56, 1, 1, "", "UnsupervisedObliqueRandomForest"], [57, 1, 1, "", "UnsupervisedRandomForest"]], "treeple.ExtendedIsolationForest": [[44, 2, 1, "", "decision_function"], [44, 3, 1, "", "estimators_samples_"], [44, 2, 1, "", "fit"], [44, 2, 1, "", "fit_predict"], [44, 2, 1, "", "get_metadata_routing"], [44, 2, 1, "", "get_params"], [44, 2, 1, "", "predict"], [44, 2, 1, "", "score_samples"], [44, 2, 1, "", "set_fit_request"], [44, 2, 1, "", "set_params"]], "treeple.ExtraTreesClassifier": [[45, 2, 1, "", "apply"], [45, 2, 1, "", "decision_path"], [45, 3, 1, "", "estimators_samples_"], [45, 3, 1, "", "feature_importances_"], [45, 2, 1, "", "fit"], [45, 2, 1, "", "get_leaf_node_samples"], [45, 2, 1, "", "get_metadata_routing"], [45, 2, 1, "", "get_params"], [45, 2, 1, "", "partial_fit"], [45, 2, 1, "", "predict"], [45, 2, 1, "", "predict_log_proba"], [45, 2, 1, "", "predict_proba"], [45, 2, 1, "", "predict_quantiles"], [45, 2, 1, "", "score"], [45, 2, 1, "", "set_fit_request"], [45, 2, 1, "", "set_params"], [45, 2, 1, "", "set_partial_fit_request"], [45, 2, 1, "", "set_score_request"]], "treeple.ExtraTreesRegressor": [[46, 2, 1, "", "apply"], [46, 2, 1, "", "decision_path"], [46, 3, 1, "", "estimators_samples_"], [46, 3, 1, "", "feature_importances_"], [46, 2, 1, "", "fit"], [46, 2, 1, "", "get_leaf_node_samples"], [46, 2, 1, "", "get_metadata_routing"], [46, 2, 1, "", "get_params"], [46, 2, 1, "", "predict"], [46, 2, 1, "", "predict_quantiles"], [46, 2, 1, "", "score"], [46, 2, 1, "", "set_fit_request"], [46, 2, 1, "", "set_params"], [46, 2, 1, "", "set_score_request"]], "treeple.HonestForestClassifier": [[47, 2, 1, "", "apply"], [47, 2, 1, "", "decision_path"], [47, 3, 1, "", "estimators_samples_"], [47, 3, 1, "", "feature_importances_"], [47, 2, 1, "", "fit"], [47, 2, 1, "", "get_leaf_node_samples"], [47, 2, 1, "", "get_metadata_routing"], [47, 2, 1, "", "get_params"], [47, 3, 1, "", "honest_indices_"], [47, 3, 1, "", "oob_samples_"], [47, 2, 1, "", "partial_fit"], [47, 2, 1, "", "predict"], [47, 2, 1, "", "predict_log_proba"], [47, 2, 1, "", "predict_proba"], [47, 2, 1, "", "predict_proba_per_tree"], [47, 2, 1, "", "predict_quantiles"], [47, 2, 1, "", "score"], [47, 2, 1, "", "set_fit_request"], [47, 2, 1, "", "set_params"], [47, 2, 1, "", "set_partial_fit_request"], [47, 2, 1, "", "set_score_request"], [47, 3, 1, "", "structure_indices_"]], "treeple.MultiViewRandomForestClassifier": [[48, 2, 1, "", "apply"], [48, 2, 1, "", "compute_similarity_matrix"], [48, 2, 1, "", "decision_path"], [48, 3, 1, "", "estimators_samples_"], [48, 3, 1, "", "feature_importances_"], [48, 2, 1, "", "fit"], [48, 2, 1, "", "get_leaf_node_samples"], [48, 2, 1, "", "get_metadata_routing"], [48, 2, 1, "", "get_params"], [48, 3, 1, "", "oob_samples_"], [48, 2, 1, "", "partial_fit"], [48, 2, 1, "", "predict"], [48, 2, 1, "", "predict_log_proba"], [48, 2, 1, "", "predict_proba"], [48, 2, 1, "", "predict_proba_per_tree"], [48, 2, 1, "", "predict_quantiles"], [48, 2, 1, "", "score"], [48, 2, 1, "", "set_fit_request"], [48, 2, 1, "", "set_params"], [48, 2, 1, "", "set_partial_fit_request"], [48, 2, 1, "", "set_score_request"]], "treeple.NearestNeighborsMetaEstimator": [[49, 2, 1, "", "fit"], [49, 2, 1, "", "get_metadata_routing"], [49, 2, 1, "", "get_params"], [49, 2, 1, "", "kneighbors"], [49, 2, 1, "", "radius_neighbors"], [49, 2, 1, "", "set_params"]], "treeple.ObliqueRandomForestClassifier": [[50, 2, 1, "", "apply"], [50, 2, 1, "", "compute_similarity_matrix"], [50, 2, 1, "", "decision_path"], [50, 3, 1, "", "estimators_samples_"], [50, 3, 1, "", "feature_importances_"], [50, 2, 1, "", "fit"], [50, 2, 1, "", "get_leaf_node_samples"], [50, 2, 1, "", "get_metadata_routing"], [50, 2, 1, "", "get_params"], [50, 3, 1, "", "oob_samples_"], [50, 2, 1, "", "partial_fit"], [50, 2, 1, "", "predict"], [50, 2, 1, "", "predict_log_proba"], [50, 2, 1, "", "predict_proba"], [50, 2, 1, "", "predict_proba_per_tree"], [50, 2, 1, "", "predict_quantiles"], [50, 2, 1, "", "score"], [50, 2, 1, "", "set_fit_request"], [50, 2, 1, "", "set_params"], [50, 2, 1, "", "set_partial_fit_request"], [50, 2, 1, "", "set_score_request"]], "treeple.ObliqueRandomForestRegressor": [[51, 2, 1, "", "apply"], [51, 2, 1, "", "compute_similarity_matrix"], [51, 2, 1, "", "decision_path"], [51, 3, 1, "", "estimators_samples_"], [51, 3, 1, "", "feature_importances_"], [51, 2, 1, "", "fit"], [51, 2, 1, "", "get_leaf_node_samples"], [51, 2, 1, "", "get_metadata_routing"], [51, 2, 1, "", "get_params"], [51, 3, 1, "", "oob_samples_"], [51, 2, 1, "", "predict"], [51, 2, 1, "", "predict_quantiles"], [51, 2, 1, "", "score"], [51, 2, 1, "", "set_fit_request"], [51, 2, 1, "", "set_params"], [51, 2, 1, "", "set_score_request"]], "treeple.PatchObliqueRandomForestClassifier": [[52, 2, 1, "", "apply"], [52, 2, 1, "", "compute_similarity_matrix"], [52, 2, 1, "", "decision_path"], [52, 3, 1, "", "estimators_samples_"], [52, 3, 1, "", "feature_importances_"], [52, 2, 1, "", "fit"], [52, 2, 1, "", "get_leaf_node_samples"], [52, 2, 1, "", "get_metadata_routing"], [52, 2, 1, "", "get_params"], [52, 3, 1, "", "oob_samples_"], [52, 2, 1, "", "partial_fit"], [52, 2, 1, "", "predict"], [52, 2, 1, "", "predict_log_proba"], [52, 2, 1, "", "predict_proba"], [52, 2, 1, "", "predict_proba_per_tree"], [52, 2, 1, "", "predict_quantiles"], [52, 2, 1, "", "score"], [52, 2, 1, "", "set_fit_request"], [52, 2, 1, "", "set_params"], [52, 2, 1, "", "set_partial_fit_request"], [52, 2, 1, "", "set_score_request"]], "treeple.PatchObliqueRandomForestRegressor": [[53, 2, 1, "", "apply"], [53, 2, 1, "", "compute_similarity_matrix"], [53, 2, 1, "", "decision_path"], [53, 3, 1, "", "estimators_samples_"], [53, 3, 1, "", "feature_importances_"], [53, 2, 1, "", "fit"], [53, 2, 1, "", "get_leaf_node_samples"], [53, 2, 1, "", "get_metadata_routing"], [53, 2, 1, "", "get_params"], [53, 3, 1, "", "oob_samples_"], [53, 2, 1, "", "predict"], [53, 2, 1, "", "predict_quantiles"], [53, 2, 1, "", "score"], [53, 2, 1, "", "set_fit_request"], [53, 2, 1, "", "set_params"], [53, 2, 1, "", "set_score_request"]], "treeple.RandomForestClassifier": [[54, 2, 1, "", "apply"], [54, 2, 1, "", "decision_path"], [54, 3, 1, "", "estimators_samples_"], [54, 3, 1, "", "feature_importances_"], [54, 2, 1, "", "fit"], [54, 2, 1, "", "get_leaf_node_samples"], [54, 2, 1, "", "get_metadata_routing"], [54, 2, 1, "", "get_params"], [54, 2, 1, "", "partial_fit"], [54, 2, 1, "", "predict"], [54, 2, 1, "", "predict_log_proba"], [54, 2, 1, "", "predict_proba"], [54, 2, 1, "", "predict_quantiles"], [54, 2, 1, "", "score"], [54, 2, 1, "", "set_fit_request"], [54, 2, 1, "", "set_params"], [54, 2, 1, "", "set_partial_fit_request"], [54, 2, 1, "", "set_score_request"]], "treeple.RandomForestRegressor": [[55, 2, 1, "", "apply"], [55, 2, 1, "", "decision_path"], [55, 3, 1, "", "estimators_samples_"], [55, 3, 1, "", "feature_importances_"], [55, 2, 1, "", "fit"], [55, 2, 1, "", "get_leaf_node_samples"], [55, 2, 1, "", "get_metadata_routing"], [55, 2, 1, "", "get_params"], [55, 2, 1, "", "predict"], [55, 2, 1, "", "predict_quantiles"], [55, 2, 1, "", "score"], [55, 2, 1, "", "set_fit_request"], [55, 2, 1, "", "set_params"], [55, 2, 1, "", "set_score_request"]], "treeple.UnsupervisedObliqueRandomForest": [[56, 2, 1, "", "apply"], [56, 2, 1, "", "compute_similarity_matrix"], [56, 2, 1, "", "decision_path"], [56, 3, 1, "", "estimators_samples_"], [56, 3, 1, "", "feature_importances_"], [56, 2, 1, "", "fit"], [56, 2, 1, "", "fit_predict"], [56, 2, 1, "", "fit_transform"], [56, 2, 1, "", "get_leaf_node_samples"], [56, 2, 1, "", "get_metadata_routing"], [56, 2, 1, "", "get_params"], [56, 2, 1, "", "predict"], [56, 2, 1, "", "predict_quantiles"], [56, 2, 1, "", "set_fit_request"], [56, 2, 1, "", "set_output"], [56, 2, 1, "", "set_params"], [56, 2, 1, "", "transform"]], "treeple.UnsupervisedRandomForest": [[57, 2, 1, "", "apply"], [57, 2, 1, "", "compute_similarity_matrix"], [57, 2, 1, "", "decision_path"], [57, 3, 1, "", "estimators_samples_"], [57, 3, 1, "", "feature_importances_"], [57, 2, 1, "", "fit"], [57, 2, 1, "", "fit_predict"], [57, 2, 1, "", "fit_transform"], [57, 2, 1, "", "get_leaf_node_samples"], [57, 2, 1, "", "get_metadata_routing"], [57, 2, 1, "", "get_params"], [57, 2, 1, "", "predict"], [57, 2, 1, "", "predict_quantiles"], [57, 2, 1, "", "set_fit_request"], [57, 2, 1, "", "set_output"], [57, 2, 1, "", "set_params"], [57, 2, 1, "", "transform"]], "treeple._lib.sklearn": [[0, 0, 0, "-", "ensemble"]], "treeple.datasets": [[58, 4, 1, "", "approximate_clf_mutual_information"], [59, 4, 1, "", "approximate_clf_mutual_information_with_monte_carlo"], [60, 4, 1, "", "make_gaussian_mixture"], [61, 4, 1, "", "make_joint_factor_model"], [62, 4, 1, "", "make_marron_wand_classification"], [63, 4, 1, "", "make_quadratic_classification"], [64, 4, 1, "", "make_trunk_classification"], [65, 4, 1, "", "make_trunk_mixture_classification"]], "treeple.experimental": [[66, 4, 1, "", "conditional_resample"], [70, 4, 1, "", "mutual_info_ksg"]], "treeple.experimental.mutual_info": [[67, 4, 1, "", "cmi_gaussian"], [68, 4, 1, "", "entropy_gaussian"], [69, 4, 1, "", "mi_gaussian"]], "treeple.experimental.simulate": [[71, 4, 1, "", "simulate_helix"], [72, 4, 1, "", "simulate_multivariate_gaussian"], [73, 4, 1, "", "simulate_sphere"]], "treeple.stats": [[74, 1, 1, "", "PermutationHonestForestClassifier"], [75, 4, 1, "", "build_coleman_forest"], [76, 4, 1, "", "build_cv_forest"], [77, 4, 1, "", "build_oob_forest"], [78, 4, 1, "", "build_permutation_forest"]], "treeple.stats.PermutationHonestForestClassifier": [[74, 2, 1, "", "apply"], [74, 2, 1, "", "decision_path"], [74, 3, 1, "", "estimators_samples_"], [74, 3, 1, "", "feature_importances_"], [74, 2, 1, "", "fit"], [74, 2, 1, "", "get_leaf_node_samples"], [74, 2, 1, "", "get_metadata_routing"], [74, 2, 1, "", "get_params"], [74, 3, 1, "", "honest_indices_"], [74, 3, 1, "", "oob_samples_"], [74, 2, 1, "", "partial_fit"], [74, 2, 1, "", "predict"], [74, 2, 1, "", "predict_log_proba"], [74, 2, 1, "", "predict_proba"], [74, 2, 1, "", "predict_proba_per_tree"], [74, 2, 1, "", "predict_quantiles"], [74, 2, 1, "", "score"], [74, 2, 1, "", "set_fit_request"], [74, 2, 1, "", "set_params"], [74, 2, 1, "", "set_partial_fit_request"], [74, 2, 1, "", "set_score_request"], [74, 3, 1, "", "structure_indices_"]], "treeple.tree": [[79, 1, 1, "", "DecisionTreeClassifier"], [80, 1, 1, "", "DecisionTreeRegressor"], [81, 1, 1, "", "ExtraTreeClassifier"], [82, 1, 1, "", "ExtraTreeRegressor"], [83, 1, 1, "", "HonestTreeClassifier"], [84, 1, 1, "", "MultiViewDecisionTreeClassifier"], [85, 1, 1, "", "ObliqueDecisionTreeClassifier"], [86, 1, 1, "", "ObliqueDecisionTreeRegressor"], [87, 1, 1, "", "PatchObliqueDecisionTreeClassifier"], [88, 1, 1, "", "PatchObliqueDecisionTreeRegressor"], [89, 1, 1, "", "UnsupervisedDecisionTree"], [90, 1, 1, "", "UnsupervisedObliqueDecisionTree"], [91, 4, 1, "", "compute_forest_similarity_matrix"]], "treeple.tree.DecisionTreeClassifier": [[79, 2, 1, "", "apply"], [79, 2, 1, "", "cost_complexity_pruning_path"], [79, 2, 1, "", "decision_path"], [79, 3, 1, "", "feature_importances_"], [79, 2, 1, "", "fit"], [79, 2, 1, "", "get_depth"], [79, 2, 1, "", "get_leaf_node_samples"], [79, 2, 1, "", "get_metadata_routing"], [79, 2, 1, "", "get_n_leaves"], [79, 2, 1, "", "get_params"], [79, 2, 1, "", "partial_fit"], [79, 2, 1, "", "predict"], [79, 2, 1, "", "predict_log_proba"], [79, 2, 1, "", "predict_proba"], [79, 2, 1, "", "predict_quantiles"], [79, 2, 1, "", "score"], [79, 2, 1, "", "set_fit_request"], [79, 2, 1, "", "set_params"], [79, 2, 1, "", "set_partial_fit_request"], [79, 2, 1, "", "set_predict_proba_request"], [79, 2, 1, "", "set_predict_request"], [79, 2, 1, "", "set_score_request"]], "treeple.tree.DecisionTreeRegressor": [[80, 2, 1, "", "apply"], [80, 2, 1, "", "cost_complexity_pruning_path"], [80, 2, 1, "", "decision_path"], [80, 3, 1, "", "feature_importances_"], [80, 2, 1, "", "fit"], [80, 2, 1, "", "get_depth"], [80, 2, 1, "", "get_leaf_node_samples"], [80, 2, 1, "", "get_metadata_routing"], [80, 2, 1, "", "get_n_leaves"], [80, 2, 1, "", "get_params"], [80, 2, 1, "", "predict"], [80, 2, 1, "", "predict_quantiles"], [80, 2, 1, "", "score"], [80, 2, 1, "", "set_fit_request"], [80, 2, 1, "", "set_params"], [80, 2, 1, "", "set_predict_request"], [80, 2, 1, "", "set_score_request"]], "treeple.tree.ExtraTreeClassifier": [[81, 2, 1, "", "apply"], [81, 2, 1, "", "cost_complexity_pruning_path"], [81, 2, 1, "", "decision_path"], [81, 3, 1, "", "feature_importances_"], [81, 2, 1, "", "fit"], [81, 2, 1, "", "get_depth"], [81, 2, 1, "", "get_leaf_node_samples"], [81, 2, 1, "", "get_metadata_routing"], [81, 2, 1, "", "get_n_leaves"], [81, 2, 1, "", "get_params"], [81, 2, 1, "", "partial_fit"], [81, 2, 1, "", "predict"], [81, 2, 1, "", "predict_log_proba"], [81, 2, 1, "", "predict_proba"], [81, 2, 1, "", "predict_quantiles"], [81, 2, 1, "", "score"], [81, 2, 1, "", "set_fit_request"], [81, 2, 1, "", "set_params"], [81, 2, 1, "", "set_partial_fit_request"], [81, 2, 1, "", "set_predict_proba_request"], [81, 2, 1, "", "set_predict_request"], [81, 2, 1, "", "set_score_request"]], "treeple.tree.ExtraTreeRegressor": [[82, 2, 1, "", "apply"], [82, 2, 1, "", "cost_complexity_pruning_path"], [82, 2, 1, "", "decision_path"], [82, 3, 1, "", "feature_importances_"], [82, 2, 1, "", "fit"], [82, 2, 1, "", "get_depth"], [82, 2, 1, "", "get_leaf_node_samples"], [82, 2, 1, "", "get_metadata_routing"], [82, 2, 1, "", "get_n_leaves"], [82, 2, 1, "", "get_params"], [82, 2, 1, "", "predict"], [82, 2, 1, "", "predict_quantiles"], [82, 2, 1, "", "score"], [82, 2, 1, "", "set_fit_request"], [82, 2, 1, "", "set_params"], [82, 2, 1, "", "set_predict_request"], [82, 2, 1, "", "set_score_request"]], "treeple.tree.HonestTreeClassifier": [[83, 2, 1, "", "apply"], [83, 2, 1, "", "cost_complexity_pruning_path"], [83, 2, 1, "", "decision_path"], [83, 3, 1, "", "feature_importances_"], [83, 2, 1, "", "fit"], [83, 2, 1, "", "get_depth"], [83, 2, 1, "", "get_leaf_node_samples"], [83, 2, 1, "", "get_metadata_routing"], [83, 2, 1, "", "get_n_leaves"], [83, 2, 1, "", "get_params"], [83, 2, 1, "", "partial_fit"], [83, 2, 1, "", "predict"], [83, 2, 1, "", "predict_proba"], [83, 2, 1, "", "predict_quantiles"], [83, 2, 1, "", "score"], [83, 2, 1, "", "set_fit_request"], [83, 2, 1, "", "set_params"], [83, 2, 1, "", "set_partial_fit_request"], [83, 2, 1, "", "set_predict_proba_request"], [83, 2, 1, "", "set_predict_request"], [83, 2, 1, "", "set_score_request"]], "treeple.tree.MultiViewDecisionTreeClassifier": [[84, 2, 1, "", "apply"], [84, 2, 1, "", "compute_similarity_matrix"], [84, 2, 1, "", "cost_complexity_pruning_path"], [84, 2, 1, "", "decision_path"], [84, 3, 1, "", "feature_importances_"], [84, 2, 1, "", "fit"], [84, 2, 1, "", "get_depth"], [84, 2, 1, "", "get_leaf_node_samples"], [84, 2, 1, "", "get_metadata_routing"], [84, 2, 1, "", "get_n_leaves"], [84, 2, 1, "", "get_params"], [84, 2, 1, "", "partial_fit"], [84, 2, 1, "", "predict"], [84, 2, 1, "", "predict_log_proba"], [84, 2, 1, "", "predict_proba"], [84, 2, 1, "", "predict_quantiles"], [84, 2, 1, "", "score"], [84, 2, 1, "", "set_fit_request"], [84, 2, 1, "", "set_params"], [84, 2, 1, "", "set_partial_fit_request"], [84, 2, 1, "", "set_predict_proba_request"], [84, 2, 1, "", "set_predict_request"], [84, 2, 1, "", "set_score_request"]], "treeple.tree.ObliqueDecisionTreeClassifier": [[85, 2, 1, "", "apply"], [85, 2, 1, "", "compute_similarity_matrix"], [85, 2, 1, "", "cost_complexity_pruning_path"], [85, 2, 1, "", "decision_path"], [85, 3, 1, "", "feature_importances_"], [85, 2, 1, "", "fit"], [85, 2, 1, "", "get_depth"], [85, 2, 1, "", "get_leaf_node_samples"], [85, 2, 1, "", "get_metadata_routing"], [85, 2, 1, "", "get_n_leaves"], [85, 2, 1, "", "get_params"], [85, 2, 1, "", "partial_fit"], [85, 2, 1, "", "predict"], [85, 2, 1, "", "predict_log_proba"], [85, 2, 1, "", "predict_proba"], [85, 2, 1, "", "predict_quantiles"], [85, 2, 1, "", "score"], [85, 2, 1, "", "set_fit_request"], [85, 2, 1, "", "set_params"], [85, 2, 1, "", "set_partial_fit_request"], [85, 2, 1, "", "set_predict_proba_request"], [85, 2, 1, "", "set_predict_request"], [85, 2, 1, "", "set_score_request"]], "treeple.tree.ObliqueDecisionTreeRegressor": [[86, 2, 1, "", "apply"], [86, 2, 1, "", "compute_similarity_matrix"], [86, 2, 1, "", "cost_complexity_pruning_path"], [86, 2, 1, "", "decision_path"], [86, 3, 1, "", "feature_importances_"], [86, 2, 1, "", "fit"], [86, 2, 1, "", "get_depth"], [86, 2, 1, "", "get_leaf_node_samples"], [86, 2, 1, "", "get_metadata_routing"], [86, 2, 1, "", "get_n_leaves"], [86, 2, 1, "", "get_params"], [86, 2, 1, "", "predict"], [86, 2, 1, "", "predict_quantiles"], [86, 2, 1, "", "score"], [86, 2, 1, "", "set_fit_request"], [86, 2, 1, "", "set_params"], [86, 2, 1, "", "set_predict_request"], [86, 2, 1, "", "set_score_request"]], "treeple.tree.PatchObliqueDecisionTreeClassifier": [[87, 2, 1, "", "apply"], [87, 2, 1, "", "compute_similarity_matrix"], [87, 2, 1, "", "cost_complexity_pruning_path"], [87, 2, 1, "", "decision_path"], [87, 3, 1, "", "feature_importances_"], [87, 2, 1, "", "fit"], [87, 2, 1, "", "get_depth"], [87, 2, 1, "", "get_leaf_node_samples"], [87, 2, 1, "", "get_metadata_routing"], [87, 2, 1, "", "get_n_leaves"], [87, 2, 1, "", "get_params"], [87, 2, 1, "", "partial_fit"], [87, 2, 1, "", "predict"], [87, 2, 1, "", "predict_log_proba"], [87, 2, 1, "", "predict_proba"], [87, 2, 1, "", "predict_quantiles"], [87, 2, 1, "", "score"], [87, 2, 1, "", "set_fit_request"], [87, 2, 1, "", "set_params"], [87, 2, 1, "", "set_partial_fit_request"], [87, 2, 1, "", "set_predict_proba_request"], [87, 2, 1, "", "set_predict_request"], [87, 2, 1, "", "set_score_request"]], "treeple.tree.PatchObliqueDecisionTreeRegressor": [[88, 2, 1, "", "apply"], [88, 2, 1, "", "compute_similarity_matrix"], [88, 2, 1, "", "cost_complexity_pruning_path"], [88, 2, 1, "", "decision_path"], [88, 3, 1, "", "feature_importances_"], [88, 2, 1, "", "fit"], [88, 2, 1, "", "get_depth"], [88, 2, 1, "", "get_leaf_node_samples"], [88, 2, 1, "", "get_metadata_routing"], [88, 2, 1, "", "get_n_leaves"], [88, 2, 1, "", "get_params"], [88, 2, 1, "", "predict"], [88, 2, 1, "", "predict_quantiles"], [88, 2, 1, "", "score"], [88, 2, 1, "", "set_fit_request"], [88, 2, 1, "", "set_params"], [88, 2, 1, "", "set_predict_request"], [88, 2, 1, "", "set_score_request"]], "treeple.tree.UnsupervisedDecisionTree": [[89, 2, 1, "", "apply"], [89, 2, 1, "", "compute_similarity_matrix"], [89, 2, 1, "", "cost_complexity_pruning_path"], [89, 2, 1, "", "decision_path"], [89, 3, 1, "", "feature_importances_"], [89, 2, 1, "", "fit_predict"], [89, 2, 1, "", "fit_transform"], [89, 2, 1, "", "get_depth"], [89, 2, 1, "", "get_leaf_node_samples"], [89, 2, 1, "", "get_metadata_routing"], [89, 2, 1, "", "get_n_leaves"], [89, 2, 1, "", "get_params"], [89, 2, 1, "", "predict"], [89, 2, 1, "", "predict_quantiles"], [89, 2, 1, "", "set_fit_request"], [89, 2, 1, "", "set_output"], [89, 2, 1, "", "set_params"], [89, 2, 1, "", "set_predict_request"], [89, 2, 1, "", "transform"]], "treeple.tree.UnsupervisedObliqueDecisionTree": [[90, 2, 1, "", "apply"], [90, 2, 1, "", "compute_similarity_matrix"], [90, 2, 1, "", "cost_complexity_pruning_path"], [90, 2, 1, "", "decision_path"], [90, 3, 1, "", "feature_importances_"], [90, 2, 1, "", "fit_predict"], [90, 2, 1, "", "fit_transform"], [90, 2, 1, "", "get_depth"], [90, 2, 1, "", "get_leaf_node_samples"], [90, 2, 1, "", "get_metadata_routing"], [90, 2, 1, "", "get_n_leaves"], [90, 2, 1, "", "get_params"], [90, 2, 1, "", "predict"], [90, 2, 1, "", "predict_quantiles"], [90, 2, 1, "", "set_fit_request"], [90, 2, 1, "", "set_output"], [90, 2, 1, "", "set_params"], [90, 2, 1, "", "set_predict_request"], [90, 2, 1, "", "transform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "terms": {"": [2, 4, 9, 19, 22, 24, 25, 29, 33, 34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 98], "0": [2, 3, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 70, 71, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 100], "00": [3, 7, 10, 16, 17, 20, 27, 32, 34, 80, 97], "000": [17, 34, 97], "00029": 63, "00325": [2, 92], "005": [35, 36, 38, 41, 71, 73], "006aff": [12, 13, 14], "009053607000000758": [62, 64, 65], "01": [10, 16, 25, 27, 30], "01490768": 88, "02": [16, 19, 34, 35, 36, 41, 80, 97], "021": [34, 35, 97], "025": [12, 13, 14], "029": [13, 16], "03": [3, 27, 109], "03616902": 86, "039": 32, "04": [], "040": 16, "05": [2, 27, 40, 43], "0588273": 88, "06": 80, "06945264": 86, "07": 27, "070": [22, 27], "07927208": 88, "08": [7, 27, 44], "08483": 92, "087": 32, "09": 35, "0d4599": 12, "1": [2, 3, 6, 7, 9, 10, 12, 13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 100, 104], "10": [2, 6, 9, 12, 13, 14, 15, 22, 23, 24, 25, 27, 29, 31, 45, 46, 48, 52, 53, 54, 55, 57, 60, 61, 62, 64, 65, 79, 80, 83, 84, 85, 86, 87, 88, 92, 94, 95, 96, 100], "100": [2, 6, 9, 13, 22, 24, 26, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 74], "1000": [6, 9, 13, 14, 23, 24, 36, 37, 38, 39, 40, 41, 42, 43, 47, 50, 54, 71, 72, 73], "10000": [6, 13, 23, 35, 40, 43, 75, 78], "100000": 59, "101": 104, "1010933404324": 95, "10163671": 88, "1023": 95, "10299": 23, "104": [51, 92, 94], "109": 104, "10_000": [54, 55], "10th": [], "11": [80, 102], "11055": 23, "1109": [62, 64, 65], "111": [9, 10], "1137": [24, 52, 53, 87, 88, 94], "114": 104, "1145": [57, 96], "116": 104, "12": [25, 30, 36], "120": 9, "1214": [62, 64, 65], "123": [22, 23, 25], "1234": [25, 72], "12345": 6, "123456": [19, 24, 26], "125": [30, 104], "129": 105, "1315": 68, "1321": 68, "135": 105, "140": [23, 27, 105], "143": [26, 27, 105], "145": 106, "1465216": 86, "1468": [22, 26], "1478": [22, 23], "1479": [9, 92], "1484": 22, "1489": [9, 92], "15": [9, 12, 13, 19, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43], "1510": [22, 26], "152": 106, "15308512": 86, "156": 105, "15600762": 88, "158": 105, "16": [37, 80], "164": 106, "169": 106, "17": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "170": [16, 106], "172": 106, "18": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94], "1812": 63, "183": [107, 108], "19": [45, 46, 54, 55, 79, 80, 81, 82], "1907": [2, 92], "1982": [62, 64, 65], "1984": [79, 80, 83, 85, 86], "199": 108, "1992": [62, 109], "1993": 95, "1999": 68, "1b9e77": 2, "1d": [35, 36, 38, 41, 49, 52, 53, 60, 87, 88], "1e5": 13, "2": [2, 6, 9, 12, 13, 14, 15, 19, 24, 25, 26, 29, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 72, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 100], "20": [9, 24, 25, 44, 48, 57, 62, 84, 96], "200": [9, 16, 108], "2000": 22, "20000": 6, "2001": [47, 50, 51, 54, 55, 94, 95], "2006": [22, 23, 45, 46, 55, 81, 82, 89], "2008": [44, 62, 64, 65], "2009": [79, 80, 83, 85, 86, 95], "2012": 44, "2014": 94, "2017": 61, "2018": 63, "2019": [9, 47, 83, 92], "2020": [51, 57, 92, 94, 96], "2021": [2, 92], "2022": [75, 89, 92], "2023": [52, 53, 61, 87, 88, 92, 94], "203": 109, "206": 108, "21": [44, 51, 92, 94, 102], "210": 108, "211": 109, "2110": 92, "213": [], "21m1449117": [52, 53, 87, 88, 94], "22": [42, 45, 46, 49, 54, 55, 79, 80, 81, 82], "222": 109, "227": 109, "228": 109, "23": [46, 51, 53, 55, 75, 80, 82, 86, 88, 93], "236": 109, "24": [44, 45, 46, 54, 55, 79, 80, 81, 82], "242": 109, "24816698": 88, "25": [2, 12, 14, 25, 29, 30, 35, 97], "255": [45, 46, 54, 55], "256": [44, 62, 64, 65], "257": [], "2590": 61, "26": 61, "2617": 61, "26362952": 61, "264": 110, "26th": [57, 96], "27": 35, "2727": 46, "274": 110, "279": 110, "283": 110, "29": 39, "291": 111, "292": 111, "2d": [60, 72, 79, 80, 81, 82, 87, 88], "2x": [104, 109], "3": [2, 6, 9, 13, 14, 19, 22, 23, 24, 25, 29, 30, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 71, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 100, 104], "30": [9, 22, 23, 48, 80, 84], "31": 26, "310": 22, "316": 89, "319": [], "32": [47, 50, 51, 54, 55, 94, 95], "32235221": 86, "327": 89, "32737289": 88, "32987858": 55, "33": [9, 82, 92], "3394486": [57, 96], "3403094": [57, 96], "343": [62, 64, 65], "345": [62, 64, 65], "34597007": 86, "349": [], "35": 12, "35223873": 86, "35854406": 86, "377eb8": 2, "379": 42, "39": [51, 80, 92, 94], "4": [9, 13, 16, 24, 29, 30, 40, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 100], "40": [9, 24], "407": [24, 27], "4096": [62, 64, 65], "41": [], "415": 89, "41881754": 88, "42": [2, 9, 22, 23, 27, 45, 46, 55, 60, 81, 82], "421": [], "423": 89, "45": [47, 50, 51, 54, 55, 61, 68, 94, 95, 102], "4534": [22, 23, 26], "455": 22, "46": 80, "4767256": [62, 64, 65], "48": 41, "48722913": 88, "493": 40, "5": [2, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 27, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 71, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 100, 104], "50": [2, 15, 22, 23, 25, 26, 35, 36, 37, 38, 39, 40, 41, 42, 43, 80], "500": [6, 36, 37, 38, 39, 40, 41, 42, 43, 78], "5000": [15, 35], "502525": 22, "51": 2, "511218": 22, "513": [57, 92, 96], "521512": 22, "523": [57, 92, 96], "528197": 22, "556": [6, 7], "56": 24, "560": [], "56008907": 86, "561": 22, "562": 23, "57": 102, "584": [], "59": 38, "6": [9, 22, 23, 24, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 61, 92, 100], "60000": 2, "61": 102, "625": 27, "63": [22, 23, 35, 45, 46, 55, 81, 82, 102], "636244": 22, "64": 102, "640": 43, "641104": 22, "645477": 22, "646": [], "650": [], "664": 94, "667251": 22, "67": 102, "670950": 22, "68908909": 86, "69": [], "699": 32, "7": [9, 22, 92, 100], "70": 102, "703108": 22, "712": 62, "718281828459045": [58, 59], "72": 102, "73": [19, 80], "736": 62, "75": [12, 29, 35, 104], "755": 20, "7679": 75, "77": [52, 53, 87, 88, 92, 94], "7713": 75, "778": [], "78786738": 88, "8": [6, 9, 13, 22, 26, 30, 55, 71, 83, 92, 100], "826": 32, "82818509": 53, "83": 102, "856": 22, "857": 26, "86": [79, 85, 102], "86327109": 51, "864": 22, "865": [25, 27], "872": [], "8947": 81, "9": [2, 9, 22, 25, 26, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 92, 93, 100, 102], "90": [38, 44], "901": 16, "92": 25, "928": [2, 3], "93": [79, 85], "93333333": 83, "95": [13, 14], "96": [52, 53, 87, 88, 92, 94], "975": [12, 13, 14], "9781611974973": 24, "98": [4, 25, 33, 34, 64, 75, 77, 78, 97, 98], "9866666666666667": 25, "9933333333333333": 25, "A": [17, 22, 23, 24, 26, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 68, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 102], "And": 71, "As": [6, 26, 29, 31, 35, 62, 64, 65, 91, 95], "But": [79, 80, 83, 84, 85, 86, 87, 88, 89, 90], "By": [9, 40, 43, 45, 46, 47, 54, 55, 56, 57, 62, 64, 65, 71, 72, 74, 79, 80, 81, 82, 83, 89, 90, 94, 108, 110, 111], "For": [6, 9, 12, 19, 22, 23, 26, 29, 30, 31, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 70, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 104], "If": [6, 30, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 66, 70, 71, 72, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "In": [0, 6, 9, 15, 22, 23, 25, 29, 30, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 103, 109], "It": [24, 26, 37, 40, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 72, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96], "No": 19, "Not": [44, 49, 56, 57, 84, 85, 86, 87, 88, 89, 90], "OF": [24, 26], "On": 9, "One": [9, 35, 36, 37, 38, 39, 40, 41, 42, 43, 79, 80, 81, 82], "Such": 9, "That": [45, 47, 48, 50, 52, 54, 56, 57, 74, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90], "The": [0, 2, 6, 9, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 105, 111], "Then": [38, 78, 91, 93], "There": 95, "These": [0, 25, 30, 47, 74, 83, 94], "To": [12, 22, 29, 30, 31, 45, 46, 47, 50, 51, 52, 53, 54, 55, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 98], "Will": 74, "With": [36, 37, 38, 39, 40, 41, 42, 43], "_": [13, 19, 35, 36, 37, 38, 39, 40, 41, 42, 43], "_1": 96, "_2": [39, 96], "__": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "__init__": [], "_criterion": [29, 30, 31], "_decision_path_length": 9, "_decomp": [], "_featur": 95, "_flapack": [], "_lib": [19, 29, 30, 31], "_morf_splitt": 30, "_multivari": [], "_oblique_splitt": [29, 31], "_process_paramet": [], "_psd": [], "_tree": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "a1": [], "a6e5ff": [12, 15], "a_i": 95, "abid": [89, 90], "abil": [94, 109], "abl": [93, 98, 106], "abnorm": 44, "about": [24, 95], "abov": 84, "absolut": [46, 51, 53, 55, 80, 82, 86, 88], "absolute_error": [46, 51, 53, 55, 80, 82, 86, 88], "accept": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 70, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "access": 47, "accord": [44, 49, 75, 78], "accuraci": [22, 23, 24, 26, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 74, 79, 81, 83, 84, 85, 87], "accuracy_scor": [45, 54], "achiev": [2, 25, 46, 55, 92, 94], "acm": [44, 57, 96], "across": [24, 29, 31, 44, 45, 47, 48, 50, 52, 54, 56, 57, 60, 61, 66, 74, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90], "activ": [26, 93], "actual": [12, 15, 29, 30, 31, 44], "ad": [9, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 71, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 102, 104, 105, 109], "adaboost": 25, "adam": [52, 53, 87, 88, 92, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "adapt": [2, 56, 57, 68, 92, 96], "add": [6, 25, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 60, 63, 71, 73, 74, 102, 105, 106, 109], "add_latent_nois": 60, "add_subplot": [9, 30], "addit": [0, 45, 46, 54, 55, 56, 57, 60, 75, 77, 78, 89, 90, 95, 109], "addition": 110, "adjust": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "adjusted_rand_scor": 96, "advantag": [0, 104], "aff_matrix": 91, "affect": 22, "affin": [56, 57, 89, 90], "after": 106, "afterward": 71, "against": 13, "agglomerativeclust": [56, 57, 89, 90], "aim": 94, "al": [44, 75, 92], "albeit": [87, 88, 105], "alexand": 89, "algorithm": [4, 9, 22, 44, 49, 56, 57, 70, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 98], "alia": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "align": [0, 4, 6, 19, 21, 27, 28, 31, 32, 48, 50, 51, 52, 53, 84, 85, 86, 87, 88, 94, 95, 97, 98, 105], "all": [0, 4, 6, 19, 23, 26, 29, 30, 31, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 64, 65, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 100, 102, 104, 109, 110, 111], "all_proba": 77, "all_proba_list": 76, "allow": [0, 13, 22, 30, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 104, 105, 106, 108, 109], "allow_singular": [], "along": [52, 53, 72, 87, 88, 95], "alpha": [2, 9, 13, 25, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 71, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "also": [0, 2, 19, 29, 30, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 105, 106, 109], "altern": [40, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94], "alwai": [46, 47, 48, 50, 51, 52, 53, 54, 55, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95], "among": [22, 48, 50, 51, 52, 53, 56, 57, 62, 64, 65, 71, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "amount": [35, 44, 47, 81, 82], "an": [0, 4, 6, 9, 12, 13, 14, 15, 22, 25, 26, 28, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 64, 65, 66, 68, 70, 71, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 102, 104, 105, 106, 107, 108, 109, 110], "anal": [62, 64, 65], "analog": 104, "analysi": 95, "analyt": [0, 67, 68, 69, 70, 72], "analyz": [4, 5, 7, 29, 30, 97, 98], "ani": [13, 30, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 70, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 102, 109], "annal": [47, 61, 62, 64, 65, 83], "anomali": [9, 44], "anoth": [40, 43, 95, 107, 108], "api": [29, 30, 31, 44, 49, 56, 57, 74, 87, 88, 89, 90, 92, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "appear": [30, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "append": [6, 9, 12, 13, 14, 15, 22, 23, 24, 26], "appli": [9, 12, 13, 14, 15, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 70, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 106, 107, 108], "apply_max_features_per_feature_set": [29, 48, 84, 107, 108], "apply_max_features_per_set": 106, "approach": [22, 62, 75, 78, 94], "appropri": [22, 23], "approx": 71, "approxim": [49, 58, 59, 108], "approximate_clf_mutual_inform": 108, "approximate_clf_mutual_information_with_monte_carlo": 108, "ar": [0, 2, 6, 9, 12, 13, 14, 15, 22, 23, 24, 25, 26, 29, 30, 31, 38, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 71, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 100, 106, 109, 110], "arang": [12, 13, 25, 29, 30, 31], "arbitrari": 102, "arbitrarili": [30, 46, 51, 53, 55, 80, 82, 86, 88], "area": [9, 14, 38], "arg": [], "argmax": [79, 83, 85], "argsort": 13, "argument": [13, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 105, 106, 107, 108, 110], "around": [49, 104], "arrai": [6, 9, 12, 29, 30, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 72, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 107, 108, 110], "array_lik": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 63, 66, 67, 68, 69, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "arraylik": [58, 59, 64, 65, 70, 75, 76, 77, 78], "arroyo": [2, 52, 53, 87, 88, 94], "art": 0, "arxiv": [2, 63, 92], "as_fram": [22, 23, 26], "asarrai": 2, "ascend": 22, "ask": 95, "aspect": [29, 31], "assess": 94, "assign": [9, 89, 90, 96], "associ": [45, 47, 48, 50, 52, 54, 57, 65, 74, 79, 81, 83, 84, 85, 87, 95, 96], "assum": [48, 84, 110], "assumpt": 29, "astyp": [6, 22, 23, 24, 26, 29, 30, 31], "asymmetric_claw": 62, "asymmetric_double_claw": 62, "athei": [47, 83], "atleast_2d": 14, "attribut": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 61, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 109], "auc": 106, "auto": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "auto_exampl": [3, 7, 10, 16, 17, 20, 27, 32, 34], "auto_examples_jupyt": [4, 98], "auto_examples_python": [4, 98], "automat": [45, 47, 48, 50, 52, 54, 66, 74, 79, 81, 83, 84, 85, 87], "avail": [0, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 93, 104, 111], "averag": [9, 22, 31, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 70, 84, 85, 86, 90, 94], "awai": 25, "awar": [0, 29, 87, 88], "ax": [2, 6, 9, 19, 22, 23, 24, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 95], "ax1": 13, "ax2": 13, "ax_": 9, "axhlin": [35, 36, 41], "axi": [0, 2, 4, 6, 9, 12, 13, 19, 21, 23, 25, 27, 28, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 48, 50, 51, 52, 53, 84, 85, 86, 87, 88, 94, 95, 97, 98, 102, 105], "axvlin": [29, 35, 36, 40, 41, 43], "b": [9, 25, 61], "background": 9, "bag": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 75, 76, 77, 78, 108, 109], "baggingclassifi": 81, "baggingregressor": 82, "bai": 105, "balanc": [35, 45, 47, 48, 50, 52, 54, 58, 59, 74, 79, 81, 83, 84, 85, 87], "balanced_subsampl": [45, 47, 48, 50, 52, 54, 74], "ball": 49, "ball_tre": 70, "band": [62, 64, 65, 108], "band_typ": [62, 64, 65], "bar": [29, 31], "base": [0, 9, 13, 22, 35, 37, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 106, 108, 109], "base_estimator_": [45, 46, 54, 55], "basedecisiontre": [47, 49, 83, 91], "baseforest": [49, 91], "basi": 95, "basic": [25, 79, 80, 81, 82, 83], "bayesian": [56, 57, 96], "becaus": [6, 29, 46, 47, 49, 51, 53, 55, 80, 82, 86, 88, 95], "becom": [40, 43, 62, 64, 65], "befor": [49, 60, 71, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90], "behaviour": [47, 50, 51, 52, 53, 54, 55, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90], "being": [13, 49, 60, 95], "belmont": [79, 80, 83, 85, 86], "below": [2, 38], "ben": [52, 53, 87, 88, 94], "benchmark": [22, 23, 26, 92], "benjamin": 94, "berkelei": [79, 80, 83, 85, 86], "best": [2, 22, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "bestobliquesplittertest": 31, "bestpatchsplittertest": 30, "better": [15, 85, 86, 94, 95], "between": [4, 6, 12, 13, 18, 22, 23, 24, 26, 29, 37, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 98], "beyond": [0, 95], "bia": [22, 94], "bias": 110, "bic": [0, 56, 57, 89, 90, 99], "bickel": [62, 64, 65], "big": [54, 55], "bigl": 39, "bigr": 39, "bimod": 62, "bin": [0, 2, 15, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 54, 55], "binari": [9, 24, 36, 37, 38, 39, 40, 41, 42, 43, 58, 59, 62, 64, 65, 75, 76, 77, 78], "bincount": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "bit": [58, 59], "black": [14, 19, 25, 29, 30], "blend": 25, "blob": 2, "blue": [13, 14], "bool": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "boost": [54, 55], "bootstrap": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 66, 74, 75, 76, 77, 78, 94, 108, 110], "borderpad": 19, "both": [6, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 60, 74, 75, 79, 81, 95], "bottom": 9, "bound": [13, 30, 71, 73, 109], "boundari": [19, 25, 30, 49, 52, 53, 87, 88, 102], "boxplot": [22, 24, 26], "branch": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "breiman": [47, 50, 51, 54, 55, 79, 80, 83, 85, 86, 94, 95], "brought": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "brown": [57, 94, 96], "brunner": [9, 92], "brute": 70, "bug": [102, 105, 106, 107, 110, 111], "build": [0, 25, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 104, 105], "build_coleman_forest": [40, 43, 109], "build_oob_forest": [36, 37, 38, 39, 41, 42], "build_permutation_forest": 109, "build_requir": 93, "built": [19, 22, 25, 81, 82, 94, 95], "bunch": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "burn": [57, 94, 96], "bypass": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "c": [2, 9, 13, 14, 19, 25, 68, 69, 79, 80, 82, 83, 85, 86, 87, 88, 93, 109], "c0c0c0": 15, "c4": 95, "c_": 25, "ca": [79, 80, 83, 85, 86], "calcul": [4, 13, 30, 33, 34, 64, 75, 77, 91, 96, 97, 98], "calculate_hd": 39, "calculate_mi": [35, 37, 42], "calculate_pauc": [35, 38], "calculate_sa": [35, 36, 41], "calibr": [3, 92, 95, 97], "calibratedclassifiercv": 2, "calibration_curv": 2, "california": 13, "calinski_harabasz_scor": [56, 57], "call": [0, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 62, 66, 70, 71, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 106], "callabl": [45, 46, 54, 55, 56, 57, 60, 71, 73, 89, 90], "can": [0, 6, 9, 12, 25, 29, 30, 31, 35, 37, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 64, 65, 66, 70, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 102, 111], "candid": [31, 94, 95, 106], "cannot": 49, "capabl": [0, 104], "cardin": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94], "carei": [57, 94, 96], "carlo": 108, "carrasco": [9, 92], "carri": [24, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "case": [6, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 105, 107, 108], "causal": 47, "caveat": [85, 86], "cc18": [4, 21, 27, 31, 94, 97, 98], "cc_home": [79, 80, 83, 85, 86], "ccp_alpha": [45, 46, 47, 54, 55, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "ccp_path": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "cd": 93, "ceil": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "cell": 9, "cencheng": [2, 63, 94], "center": [2, 6, 9, 13, 15, 56, 57, 60, 89, 90], "certain": 30, "chang": [23, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "channel": 30, "characterist": 63, "check": [35, 36, 38, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 109], "check_finit": [], "check_input": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "check_random_st": [13, 15], "checkout": 93, "chester": [52, 53, 87, 88, 94], "child": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "choi": 61, "choos": [25, 47, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "chosen": [22, 45, 46, 47, 54, 55, 74, 79, 80, 81, 82, 83], "chung": 94, "ci": [22, 23], "circl": 9, "cl": 81, "class": [0, 2, 4, 9, 11, 13, 16, 24, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 96, 97, 98, 106, 109, 110], "class_label": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "class_one_prob": 2, "class_prob": [58, 59, 60], "class_weight": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "classes_": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "classic": [22, 81, 82], "classif": [0, 6, 24, 25, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 106], "classifi": [2, 25, 44, 45, 46, 47, 48, 50, 52, 54, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 109], "claw": 62, "clf": [2, 9, 19, 22, 23, 24, 26, 44, 45, 47, 50, 54, 79, 83, 85, 95], "clf_cv": 2, "clf_label": 19, "clf_name": 2, "cli": 93, "clone": 93, "close": [9, 44, 52, 53, 87, 88, 92, 94], "closer": [2, 62, 64, 65], "closest": 2, "cluster": [0, 2, 9, 25, 56, 57, 89, 90, 96], "cluster_1": 9, "cluster_2": 9, "cluster_std": 6, "cluster_std_first": 6, "cluster_std_second": 6, "clustering_func": [56, 57, 89, 90], "clustering_func_arg": [56, 57, 89, 90], "cm": [2, 19, 25, 29, 31], "cmap": [19, 25, 29, 30, 31], "cmi": [0, 4, 33, 34, 64, 67, 70, 72, 77, 97, 98], "cnae": [22, 26], "cnae_9": 22, "co": [71, 110], "coars": 25, "coarser": 25, "code": [2, 4, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 89, 90, 93, 98], "codebas": 110, "coeffici": [46, 51, 53, 55, 80, 82, 86, 88], "coleman": [62, 64, 65, 75], "collect": [6, 9, 12, 13, 14, 15, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 66, 74, 83], "color": [2, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43], "color_cod": [35, 36, 37, 38, 39, 40, 41, 42, 43], "color_dict": 2, "color_palett": [35, 36, 37, 38, 39, 40, 41, 42, 43], "colorbar": [9, 29, 31], "colormap": 19, "column": [0, 22, 23, 24, 25, 26, 29, 30, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 81, 83, 84, 85, 86, 87, 88, 95, 102], "com": 93, "combin": [0, 19, 31, 35, 44, 48, 50, 51, 56, 84, 85, 86, 90, 94, 95, 96], "come": 95, "comight": [4, 33, 34, 64, 75, 97, 98], "common": [61, 95, 96], "compar": [0, 2, 9, 13, 14, 21, 26, 27, 31, 40, 43, 54, 55, 75, 78, 84, 85, 86, 87, 88, 92, 97, 99, 109], "comparison": [12, 22, 23, 24, 26, 54, 55], "compat": [0, 30, 56, 57, 89, 90], "compil": [93, 109], "complex": [22, 45, 46, 47, 50, 51, 52, 53, 54, 55, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 99], "compon": [35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "compris": [0, 87, 88], "comput": [0, 22, 26, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 67, 68, 69, 70, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 102, 109], "computation": 22, "compute_similarity_matrix": [48, 50, 51, 52, 53, 56, 57, 84, 85, 86, 87, 88, 89, 90], "concat": [22, 23, 26], "concaten": [6, 9, 12, 13, 84], "concern": [4, 8, 33, 98], "conclus": 94, "conda": 92, "condit": [0, 13, 14, 35, 37, 40, 42, 43, 52, 53, 58, 59, 66, 67, 70, 87, 88, 102, 106], "condition": [66, 71], "conditional_arrai": 66, "conditional_resampl": 106, "conduct": [40, 43], "confer": [44, 57, 89, 96], "confid": [13, 14, 47, 95], "configur": [56, 57, 89, 90], "confirm": [40, 43], "confound": 71, "consid": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 105], "consider": 95, "consist": [0, 9, 22, 26, 29, 30, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 66, 74, 80, 82, 86, 88, 89, 90, 95, 105], "consol": 25, "constant": [46, 51, 53, 55, 80, 82, 86, 88], "constrain": [30, 95], "constraint": [22, 26, 45, 46, 54, 55, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "construct": [40, 43, 56, 57, 75, 78, 94, 95], "constructor": 49, "consumpt": [45, 46, 47, 50, 51, 52, 53, 54, 55, 79, 80, 81, 82, 83, 85, 86], "contain": [2, 6, 9, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "contamin": 44, "context": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 74], "contigu": [29, 30, 52, 53, 87, 88], "continu": [56, 57], "contour": 25, "contourf": 25, "contrast": [22, 25, 29, 31, 94, 95], "contribut": [92, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "control": [29, 31, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 61, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 106, 108], "conveni": 0, "convent": [44, 49, 56, 57, 89, 90], "convert": [22, 23, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 72, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "convolut": [52, 53, 87, 88, 92, 94], "coordin": 73, "copi": [9, 19, 43, 66], "corner": 9, "correct": 0, "correctli": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87, 107, 108, 109], "correl": 6, "correspond": [9, 12, 13, 14, 15, 19, 25, 35, 45, 47, 48, 50, 52, 53, 54, 61, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "cost": [45, 46, 47, 54, 55, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95], "cost_complexity_pruning_path": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "could": [70, 79, 80, 81, 82], "count": [15, 35, 37, 42, 91], "cov": [58, 59, 64, 65, 67, 68, 69, 72], "covari": [9, 44, 58, 59, 60, 62, 64, 65, 67, 68, 69, 70, 72, 75, 78, 105, 108, 109], "covariate_index": [43, 74, 75, 78, 106], "covariate_index_": 74, "cpu": [56, 57], "creat": [0, 6, 9, 12, 13, 14, 15, 25, 29, 31, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94], "criteria": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96], "criterion": [0, 29, 30, 31, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 99, 102], "cross": [6, 76, 95], "cross_val_scor": [6, 79, 80, 83, 85, 86, 88], "cross_valid": [22, 23, 24, 26], "cs_point": 25, "csc_matrix": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "csr": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "csr_matrix": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "current": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95], "curv": [2, 35, 36, 38, 41, 95], "custom": [30, 45, 46, 54, 55, 56, 57], "cutler": [79, 80, 83, 85, 86], "cutoff": 96, "cutpoint": 96, "cv": [2, 6, 22, 23, 24, 26, 76, 79, 80, 83, 85, 86, 88], "cython": [29, 30, 31, 89, 90, 93, 104, 109], "d": [9, 12, 13, 14, 15, 22, 23, 29, 31, 45, 46, 55, 60, 62, 64, 65, 67, 68, 69, 72, 81, 82], "d_name": [22, 23, 26], "darbellai": 68, "data": [0, 2, 4, 13, 14, 19, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 102, 105], "data_dim": [30, 52, 53, 87, 88], "data_dims_": [87, 88], "data_height": [87, 88], "data_id": [22, 23, 26], "data_width": [87, 88], "datafram": [6, 22, 23, 24, 25, 26, 41, 42, 43, 56, 57, 66, 89, 90], "datapoint": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "dataset": [2, 4, 5, 7, 9, 13, 15, 18, 20, 21, 24, 25, 27, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 70, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 106, 108, 109, 110], "datatyp": [22, 23], "datetim": [22, 23, 24, 26], "davies_bouldin_scor": [56, 57], "dddddd": [35, 36, 37, 38, 39, 40, 41, 42, 43], "deal": [47, 74, 83], "decis": [0, 8, 20, 22, 27, 29, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 97, 99, 104, 105], "decision_funct": [9, 44], "decision_path": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "decision_tree_learn": [79, 80, 83, 85, 86, 95], "decisionboundarydisplai": [9, 19], "decisiontre": 25, "decisiontreeclassifi": [19, 25, 29, 31, 45, 47, 54, 74, 80, 81, 83, 84, 85, 86, 87, 109], "decisiontreeregressor": [46, 54, 55, 79, 82, 86, 88], "decreas": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94], "deep": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94], "def": [2, 6, 13, 14, 22, 23, 24, 26, 35, 36, 37, 38, 39, 41, 42], "default": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 105, 110], "default_rng": [6, 72], "defaultdict": [6, 12, 13, 14, 15], "defauult": 71, "defin": [2, 24, 29, 30, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 70, 71, 74, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 106], "definit": 95, "deform": 9, "degrad": 109, "deliber": [22, 23], "demo": 9, "demonstr": [1, 4, 5, 6, 11, 12, 14, 18, 21, 22, 25, 28, 30, 31, 32, 97, 98], "denot": [70, 71, 95], "dens": [56, 57, 62, 64, 65, 89, 90, 95], "depend": [22, 23, 37, 40, 42, 43, 71, 92], "deprec": [], "depth": [9, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94], "deriv": 94, "describ": [89, 95], "desir": [12, 15, 95], "det": [68, 69], "detail": [12, 22, 23, 24, 26, 29, 30, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 64, 65, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "detect": [9, 44, 92], "determin": [22, 44, 46, 51, 53, 55, 66, 80, 82, 86, 88, 95], "determinist": [47, 50, 51, 52, 53, 54, 55, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90], "dev": 93, "develop": [0, 93, 103, 110], "devianc": [46, 51, 53, 55, 80, 82, 86, 88], "df": [6, 22, 23, 24, 26], "df_0": 38, "df_1": 38, "df_tmp": 23, "diag": 61, "dict": [25, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "dictionari": [12, 13, 14, 15, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "did": 110, "diff": [40, 43], "differ": [2, 4, 6, 11, 16, 18, 21, 22, 25, 27, 28, 29, 37, 40, 42, 43, 44, 49, 61, 62, 64, 65, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 107, 108], "digamma": 70, "dim": [22, 23, 30], "dim_contigu": [30, 52, 53, 87, 88], "dimens": [6, 22, 23, 24, 29, 30, 31, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 71, 74, 87, 88, 89, 90, 95, 110], "dimension": [0, 6, 22, 44, 62, 64, 65, 72, 96, 102, 104], "direct": 109, "directli": [29, 30, 31, 109], "directori": 93, "disc": 95, "discontigu": [87, 88], "discontinu": 102, "discoveri": [44, 57, 96], "discrete_comb": 62, "discuss": [2, 25], "diskspac": [79, 80, 81, 82], "disp": 9, "displai": [9, 19], "disregard": [46, 51, 53, 55, 80, 82, 86, 88], "dissimilar": 102, "distanc": [4, 33, 34, 49, 56, 57, 64, 70, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98], "distinct": [25, 60], "distribut": [0, 9, 13, 15, 24, 39, 44, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 78, 95, 96, 107, 108], "divers": 94, "divid": 60, "do": [4, 8, 25, 29, 30, 31, 56, 57, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 98], "document": [9, 92, 94], "dodg": [22, 24, 26], "doe": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 70, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 95], "doi": [24, 52, 53, 57, 62, 64, 65, 87, 88, 94, 95, 96], "dollar": 13, "dollar_formatt": 13, "don": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "done": [30, 66, 87, 88, 94, 106], "dot": [14, 60], "doubl": 47, "double_claw": 62, "download": [2, 4, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 98], "draw": [22, 23, 24, 26, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74], "drawn": [22, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 72, 74, 81, 82, 94], "drop": [0, 12, 13, 14, 15, 22, 23, 24, 26, 95], "drop_intermedi": [35, 36, 38, 41], "drv": [], "drv_arg": [], "dsyevr": [], "dt": 95, "dtype": [9, 26, 29, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "dub": 26, "due": [22, 26, 68, 109, 110], "dummi": [29, 30, 31], "dure": [12, 22, 30, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 109], "dx": [62, 64, 65], "dynam": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74], "e": [0, 9, 13, 15, 29, 30, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 61, 70, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96], "e0f2ff": [13, 14], "e7a4f5": 15, "e_b": 61, "e_i": 95, "each": [6, 12, 13, 14, 15, 19, 22, 23, 25, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 106, 107, 108, 110], "earli": 25, "earlier": 95, "easier": [6, 105], "eb": 12, "ecolor": 12, "edgecolor": [2, 9, 19, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43], "edit": 93, "edu": [79, 80, 83, 85, 86], "effect": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98], "efficaci": 96, "effici": [44, 49, 56, 57, 75, 80, 82, 86, 88, 89, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "efficienc": [87, 88], "eigh": [], "eighth": 44, "either": [25, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 108], "element": [31, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "elizaveta": [62, 64, 65], "ellipticenvelop": 44, "els": [0, 9, 25, 26, 35, 36, 38, 40, 41, 43, 62, 64, 65], "elsewher": 95, "embed": 0, "empir": [35, 37, 42, 47, 55, 74, 83, 95], "empirical_prior_": 83, "empti": [29, 31, 47, 74, 83, 111], "en": [79, 80, 83, 85, 86, 95], "enabl": [44, 47, 75, 76, 77, 78, 89, 104], "enable_metadata_rout": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "enablescomput": 89, "encapsul": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "encod": 110, "encount": 110, "encourag": 92, "end": [2, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "enforc": [45, 46, 47, 54, 55, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "engin": [9, 92], "enhanc": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "enough": 25, "ensembl": [0, 2, 9, 12, 13, 14, 15, 24, 25, 26, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 81, 82, 94], "ensur": 110, "entir": [26, 48, 52, 53, 84, 87, 88], "entri": 95, "entropi": [0, 35, 37, 40, 42, 45, 47, 48, 50, 52, 54, 58, 59, 67, 68, 69, 72, 74, 79, 81, 83, 84, 85, 87], "entropy_gaussian": 67, "enumer": [6, 12, 13, 14, 15, 19, 22, 23, 24, 26, 30, 47, 50, 51, 52, 53, 54, 55], "env": [], "environ": [9, 93], "eorf": [22, 23], "epdf": 24, "epsilon_1": 71, "epsilon_2": 71, "epsilon_3": 71, "epub": 24, "equal": [40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 106], "equat": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "equival": [9, 44, 46, 48, 50, 51, 54, 55, 85, 86, 95], "ernst": [22, 23, 45, 46, 55, 81, 82], "error": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 110], "errorbar": 12, "especi": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "essenti": 94, "est": [12, 36, 37, 38, 39, 40, 41, 42, 43, 75, 76, 77, 78], "est_kwarg": 77, "est_nul": [40, 43], "estim": [2, 4, 13, 19, 22, 23, 24, 25, 26, 33, 34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 102, 109, 110, 111], "estimator_": [44, 45, 46, 54, 55, 56, 57, 83], "estimator_alpha": 25, "estimators_": [9, 25, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74], "estimators_features_": 44, "estimators_samples_": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 77], "et": [44, 75, 92], "eta": [36, 38, 39, 41], "etc": [45, 46, 47, 50, 51, 52, 53, 54, 55, 70, 79, 80, 81, 82, 83, 85, 86], "eva": 2, "evalu": [0, 9, 22, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 99], "even": [0, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94], "everi": [45, 47, 48, 50, 52, 53, 54, 74, 79, 81, 83, 84, 85, 87, 88, 95], "everyon": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "everyth": [0, 98], "evimaria": 89, "exact": [62, 95], "exactli": [87, 88, 94], "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 70, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 96, 97, 105], "except": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 74, 80, 82, 86, 88, 94], "execut": [3, 7, 10, 16, 17, 20, 27, 32, 34, 97], "exhaust": [107, 108], "exist": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "exot": 0, "exp": [2, 14, 35, 37, 42, 58, 59], "expand": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "expect": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 70, 74, 80, 82, 85, 86, 87, 88, 94], "expens": 22, "experi": 6, "experiment": [45, 46, 54, 55, 79, 80, 81, 82, 84, 92, 104, 105, 106], "explicitli": [0, 109], "explod": [22, 23, 24, 26], "explor": 94, "expos": [29, 31], "extend": [0, 6, 9, 44, 92, 95, 104], "extended_clf": 9, "extendedisoforest": 9, "extendedisolationforest": [4, 8, 10, 97, 98], "extens": 0, "extra": [4, 21, 26, 27, 31, 45, 46, 81, 82, 97, 98, 104, 109], "extra_tre": [81, 82], "extract": [0, 22, 23, 26], "extraobliquedecisiontre": 25, "extraobliquedecisiontreeclassifi": 104, "extraobliquedecisiontreeregressor": [44, 104], "extraobliquerandomforest": 25, "extraobliquerandomforestclassifi": [22, 23, 25], "extratreeclassifi": [45, 82], "extratreeregressor": [44, 46, 81], "extratreesclassifi": [46, 54, 81, 82], "extratreesregressor": [45, 55, 81, 82], "extrem": [0, 22, 23, 40, 45, 46, 54, 55, 81, 82], "ey": 60, "f": [9, 14, 19, 22, 24, 26, 30, 35, 36, 38, 41], "f2a619": [12, 13, 14], "f41711": 2, "f_": [35, 40, 43], "f_x": 40, "f_y": 40, "fact": [85, 86], "factor": [29, 44, 61, 62, 64, 65], "fail": [], "falk": [52, 53, 87, 88, 94], "fall": [12, 13, 14, 15, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "fals": [2, 9, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 107, 108], "fashion": [0, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 66, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "fast": [54, 55, 89, 99], "fastbic": [56, 57, 89, 90, 102], "faster": [22, 23, 89, 109], "favor": 94, "fdae61": 2, "featur": [0, 6, 12, 15, 19, 22, 23, 24, 25, 26, 30, 31, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 61, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "feature_combin": [9, 29, 30, 31, 44, 48, 50, 51, 56, 84, 85, 86, 90, 94, 95], "feature_combinations_": [84, 85, 86], "feature_importances_": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 105], "feature_nam": [19, 25], "feature_names_in_": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "feature_set_end": [6, 29, 48, 84], "feature_set_ends_": 84, "feature_weight": [30, 52, 53, 87, 88], "featureimport": [105, 106], "featureimportanceforest": 106, "featureimportanceforestclassifi": [105, 107, 108, 110], "featureimportanceforestregressor": 105, "februari": [62, 64, 65], "feed": 72, "fei": 44, "fell": [12, 13, 14, 15], "fetch": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74], "fetch_california_h": 13, "fetch_openml": [22, 23, 26], "fewer": 25, "ffd237": 12, "fig": [2, 6, 9, 13, 19, 22, 23, 24, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43], "figsiz": [2, 9, 13, 24, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43], "figur": [2, 9, 19, 22, 30], "file": [3, 7, 10, 16, 17, 20, 27, 32, 34, 93, 97], "fill": [19, 25], "fill_between": [13, 14, 35, 38], "filterwarn": 35, "final": [94, 95, 104], "find": [35, 36, 38, 41, 46, 49, 51, 53, 55, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 105], "fine": 25, "first": [6, 19, 24, 25, 29, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 64, 65, 66, 71, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 106], "fischer": 89, "fit": [2, 9, 12, 13, 15, 19, 25, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 66, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 108, 109], "fit_param": [47, 56, 57, 89, 90], "fit_predict": [44, 56, 57, 89, 90], "fit_transform": [56, 57, 89, 90], "five": 6, "fix": [6, 47, 50, 51, 52, 53, 54, 55, 70, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "flatten": [19, 30], "flaw": 94, "flexibl": [0, 96], "float": [13, 22, 23, 24, 26, 35, 36, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "float32": [29, 30, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "float64": [29, 30, 31, 62, 64, 65, 80, 82, 86, 88], "fmt": 12, "focu": 23, "fold": 76, "follow": [12, 13, 22, 23, 26, 29, 31, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 71, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 111], "font_scal": [35, 36, 37, 38, 39, 40, 41, 42, 43], "fontsiz": [25, 35, 36, 37, 38, 39, 40, 41, 42, 43], "footprint": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74], "forest": [0, 1, 3, 5, 7, 12, 16, 21, 25, 27, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 102, 104, 105, 106, 109], "forg": 93, "form": [0, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 71, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "format": [13, 25, 29, 31, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 89, 90], "former": [26, 55], "formul": [45, 54, 56, 57, 79, 81, 99], "found": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "four": [12, 22, 45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "fpr": [35, 36, 38, 41], "frac": [35, 38, 39, 46, 51, 53, 55, 68, 69, 80, 82, 86, 88, 96], "fraction": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94], "frame": [22, 23, 26], "frameon": [35, 36, 37, 38, 39, 40, 41, 42, 43], "frequenc": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "friedman": [46, 51, 53, 55, 79, 80, 82, 83, 85, 86, 88, 95], "friedman_ms": [46, 51, 53, 55, 80, 82, 86, 88], "from": [0, 2, 3, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 94, 95, 96, 97, 105, 109, 111], "from_dict": 22, "from_estim": [9, 19], "full": [2, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 62, 64, 65, 75], "fulli": [45, 46, 47, 50, 51, 52, 53, 54, 55, 79, 80, 81, 82, 83, 85, 86], "func": 71, "funcformatt": 13, "function": [14, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 66, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 107, 108, 111], "functionss": [4, 33, 98], "further": 24, "g": [0, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 62, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95], "gain": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "galleri": [2, 4, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 97, 98], "gap": [52, 53, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94], "gaussian": [0, 1, 3, 4, 9, 44, 58, 59, 60, 62, 64, 65, 67, 68, 69, 72, 96, 97, 98], "gener": [0, 2, 4, 6, 11, 13, 14, 19, 22, 23, 24, 25, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 82, 83, 86, 87, 88, 94, 95, 96, 98, 102, 106, 108, 109], "geodes": [57, 70, 89, 92, 96], "georg": 68, "gerard": [62, 64, 65], "get": [9, 12, 13, 14, 15, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 70, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "get_depth": [9, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "get_leaf_node_sampl": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "get_metadata_rout": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "get_n_leav": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "get_n_split": 13, "get_param": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "get_quantile_predict": 13, "get_scor": [22, 23, 24, 26], "get_xaxi": 9, "get_yaxi": 9, "geurt": [22, 23, 45, 46, 55, 81, 82], "gini": [29, 30, 31, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "git": 93, "github": [9, 93], "give": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 85, 86], "given": [9, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 68, 69, 70, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 109], "glossari": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 66, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "gmm": 96, "go": [2, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 62, 64, 65], "goal": 96, "goe": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "good": [25, 94], "gradient": [54, 55], "graphic": 71, "greater": [24, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "greedi": [22, 47], "green": [29, 31], "grei": 13, "grid": [13, 24, 25, 30], "gridsearchcv": 95, "ground": [9, 14, 95], "group": [22, 29, 81, 82, 95, 96], "groupbi": [22, 23], "grow": [23, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "grown": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 74, 79, 80, 81, 82, 83, 85, 86], "guess": 25, "guid": [2, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 96, 102], "guo": 2, "h": [37, 39, 40, 67, 68, 69, 95], "h_0": [40, 43], "h_a": [40, 43], "h_pad": [19, 25], "h_x": 58, "h_xy": 58, "h_y": [35, 37, 42, 59], "h_y_on_x": 59, "h_yx": [35, 37, 42], "ha": [6, 25, 26, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "half": [2, 47, 74], "halfwai": 13, "handl": [9, 95, 107, 108], "handletextpad": 19, "haoyin": [92, 102, 104, 108, 111], "har": [22, 23], "hard": 96, "hariri": [9, 92], "hariri2019": 92, "harsh": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "hasattr": 25, "hasti": [79, 80, 83, 85, 86, 95], "hat": 96, "have": [0, 2, 6, 25, 30, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 104, 105, 108], "hayden": 2, "hd": 39, "heatmap": [29, 31], "heavili": [12, 13, 14, 15], "height": [87, 88], "held": 94, "helix": 71, "helling": [4, 33, 34, 64, 77, 97, 98], "helm": 2, "help": [0, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "henc": [22, 94], "here": [2, 6, 9, 12, 13, 14, 15, 29, 30, 31, 47, 95, 98], "high": [0, 6, 9, 22, 24, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 104], "higher": [12, 23, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 94, 95, 108], "highest": [45, 47, 48, 50, 52, 54, 56, 57, 74, 79, 83, 85], "highli": [9, 104], "hist": [15, 35, 36, 37, 38, 39, 40, 41, 42, 43], "histgradientboostingclassifi": 54, "histgradientboostingregressor": 55, "histogram": [35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55], "histori": 92, "hold": [45, 54, 79, 81, 83], "honest": [1, 3, 4, 47, 74, 83, 92, 97, 98, 99, 108, 109], "honest_decision_function_": [47, 74], "honest_forest": [47, 83], "honest_fract": [2, 47, 74, 83], "honest_indices_": [47, 74, 83], "honest_prior": [47, 74, 83], "honestforestclassifi": [2, 36, 37, 38, 39, 40, 41, 42, 43, 102, 105, 108, 109, 110, 111], "honesti": [47, 92, 95], "honestrf": 2, "honesttreeclassifi": [47, 74, 102, 109], "hous": 13, "how": [0, 4, 6, 8, 11, 13, 14, 22, 25, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 98, 109], "howev": [0, 22, 25, 29, 95], "hstack": [6, 35, 41, 42, 43], "htm": [79, 80, 83, 85, 86], "html": [9, 94], "http": [22, 23, 24, 26, 57, 61, 62, 64, 65, 79, 80, 83, 85, 86, 93, 94, 95, 96], "hua": 44, "hue": [6, 23, 41, 42, 43], "huynh": [52, 53, 87, 88, 94], "hyper": 24, "hyperparamet": [29, 30, 31, 95, 106], "hyperrectangl": 30, "hypothesi": [40, 43, 62, 64, 65, 75, 76, 77, 78, 92, 104, 105, 106, 109], "hyppo": 110, "i": [0, 2, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 104, 105, 106, 107, 108, 110], "i_xi": [58, 59], "icdm": 44, "id": [12, 13, 14, 15, 22, 23, 26], "id_var": 6, "idea": 15, "ideal": [2, 79, 80, 81, 82, 93], "ident": [47, 50, 51, 52, 53, 54, 55, 62, 64, 65, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90], "identifi": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 96], "idx": [6, 12, 13, 14, 15, 19, 25, 30], "ieee": [9, 44, 62, 64, 65, 68, 92], "iend": 29, "ignor": [19, 35, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 111], "igor": 68, "illustr": 12, "iloc": [22, 23, 24, 26], "imag": [0, 4, 28, 32, 87, 88, 97, 98], "imbal": 110, "impact": 66, "implement": [0, 29, 30, 31, 44, 45, 46, 47, 60, 62, 64, 65, 66, 85, 86, 92, 94, 95, 102, 104], "impli": 71, "import": [2, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 99, 104, 111], "improv": [0, 2, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "impur": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95], "imput": 95, "imshow": [29, 30, 31], "incept": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "includ": [0, 2, 4, 33, 45, 47, 48, 49, 50, 52, 54, 70, 74, 79, 81, 83, 84, 85, 87, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "incorrect": 106, "increas": [6, 13, 22, 23, 45, 46, 49, 54, 55, 61, 62, 64, 65, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94], "increasingli": 6, "increment": 92, "independ": [71, 75, 95], "index": [22, 29, 31, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 66, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 109], "indic": [0, 12, 13, 14, 15, 25, 29, 30, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 67, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 105, 108], "individu": 44, "induc": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "ineffici": 47, "inf": 68, "infer": [19, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "infin": 110, "influenc": [46, 51, 53, 55, 80, 82, 86, 88], "info": [], "inform": [0, 2, 6, 19, 23, 24, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 65, 67, 68, 69, 70, 71, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 102, 108], "infti": 38, "inher": [0, 56, 57], "init_test": [29, 30, 31], "initi": [36, 37, 38, 39, 40, 41, 42, 43], "inlier": [9, 44], "inlier_sampl": 9, "inner": [61, 95], "inner_f": [], "inplac": [22, 23, 24, 26], "input": [25, 29, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 110], "insert": 43, "insid": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 102], "inspect": [9, 19, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "inspir": [12, 13, 14, 15], "instal": 92, "instanc": [2, 15, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 64, 65, 66, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 104, 110], "instant": [56, 57], "instanti": [47, 83], "instead": [6, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 110], "instruct": 93, "int": [6, 9, 13, 22, 23, 26, 29, 31, 35, 36, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "int64": [56, 57, 89, 90], "int_": 38, "int_err": 58, "integ": [6, 44, 45, 47, 48, 50, 52, 54, 60, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 107, 108], "integr": [38, 58, 62], "intel": [62, 64, 65], "interfac": [0, 29, 30, 31], "intermedi": 91, "intern": [29, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96], "interpol": [4, 11, 16, 29, 31, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98], "interpret": 63, "interv": [4, 11, 12, 14, 16, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 95, 97, 98], "intp": [29, 62, 64, 65], "introduc": [56, 57, 89, 90, 109], "intuit": [94, 95], "invers": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "io": 100, "ipynb": [2, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43], "irf": 2, "iri": [4, 18, 20, 25, 79, 83, 85, 95, 97, 98], "is_inli": 44, "isinst": 25, "isoforest": 9, "isol": [0, 9, 44, 92, 93, 104], "isolationforest": [9, 44], "isolationforestifittedisolationforest": 9, "isoton": 2, "issu": 106, "item": [2, 12, 13, 14, 15, 23], "its": [25, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 74, 79, 81, 83, 84, 85, 87, 95], "itself": [9, 24, 45, 47, 48, 50, 52, 54, 56, 57, 70, 74], "j": [9, 12, 47, 62, 64, 65, 79, 80, 83, 85, 86, 92, 93, 95], "jaewon": 94, "jame": [57, 94, 96], "jason": 94, "jess": [52, 53, 87, 88, 94], "jesu": [52, 53, 87, 88, 94], "jes\u00fa": 2, "jmlr": 94, "job": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 70, 74], "joblib": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 93], "joint": [42, 43, 61], "joint_mi": 42, "joint_rank": 61, "jona": 89, "jonathan": 61, "jong": 102, "joshua": [2, 52, 53, 57, 63, 87, 88, 94, 96], "journal": [51, 52, 53, 75, 87, 88, 92, 94], "jpg": 24, "jstor": 61, "jupyt": [2, 4, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 98], "just": [29, 30, 31, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 71, 74, 93], "justifi": 55, "k": [2, 9, 12, 25, 45, 46, 49, 70, 89], "kai": 44, "kaufmann": 95, "kd_tree": 70, "kdd": [57, 92, 96], "kdeplot": [41, 42, 43], "keep": [46, 51, 53, 55, 80, 82, 86, 88, 109], "kei": [6, 29, 79, 80, 81, 82], "kept": 6, "kernel": [46, 51, 53, 55, 63, 80, 82, 86, 88, 102], "keyword": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 104, 105, 108], "kf": 13, "kfold": 13, "kind": [9, 92], "kmean": 96, "kneighbor": 49, "knn": 70, "know": [35, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "knowledg": [9, 44, 57, 92, 95, 96], "known": [6, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 72, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94], "ksg": 70, "kth": 70, "kurtotic_unimod": 62, "kwarg": [22, 23, 24, 26, 44, 56, 57, 89, 90, 107, 108], "l": [2, 13, 22, 23, 45, 46, 55, 79, 80, 81, 82, 83, 85, 86, 94, 95, 96], "l1": [46, 51, 53, 55, 80, 82, 86, 88], "l2": [46, 51, 53, 55, 80, 82, 86, 88], "l2014": 94, "label": [0, 2, 9, 13, 14, 15, 19, 24, 29, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 64, 65, 66, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96], "labels": [35, 36, 37, 38, 39, 40, 41, 42, 43], "labels_": [56, 57], "lambda": [13, 95], "landmark": 95, "langl": 95, "larg": [9, 22, 23, 26, 45, 46, 47, 50, 51, 52, 53, 54, 55, 62, 64, 65, 79, 80, 81, 82, 83, 85, 86], "larger": [40, 43, 44, 47, 66, 74, 83, 94], "largest": [45, 46, 47, 54, 55, 71, 74, 79, 80, 81, 82, 83], "last": [87, 88], "latent": 60, "latitud": 73, "latter": [26, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "lb": [71, 73], "le": 96, "lead": [44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 79, 80, 81, 82, 83, 85, 86, 94, 109], "leaf": [0, 9, 12, 13, 14, 15, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 111], "leaf_id": [12, 13, 14, 15], "leaf_ids_test": [12, 13, 14, 15], "leaf_index": 9, "leaf_node_sampl": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74], "leaf_nodes_sampl": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "learn": [19, 21, 22, 23, 25, 45, 46, 47, 50, 51, 54, 55, 56, 57, 63, 74, 75, 79, 80, 81, 82, 83, 85, 86, 89, 90, 92, 93, 94, 95, 96], "least": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 109], "leav": [0, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "left": [2, 13, 14, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 66, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "left_impur": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "legend": [2, 9, 12, 14, 15, 19, 24, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43], "legend_el": 9, "len": [6, 9, 12, 13, 14, 15, 25, 29, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "length": [25, 30, 44, 47, 48, 49, 50, 52, 61, 66, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "leo": 94, "leq": 95, "less": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 110], "let": 95, "level": [25, 66], "levina": [62, 64, 65], "lexsort": 2, "li": [12, 13, 14, 15, 52, 53, 57, 87, 88, 92, 94, 96, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "li2023": 92, "lib": [], "librari": [2, 100, 102], "libsvm": 44, "licens": 92, "lie": 49, "lieg": 94, "light": 109, "lik0": 2, "lik1": 2, "like": [0, 9, 29, 30, 31, 35, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96], "likelihood": [2, 35, 36, 37, 38, 39, 40, 96], "limit": [24, 49, 99, 105], "linalg": [], "line": [2, 13, 14], "linear": [0, 12, 19, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "linearli": [23, 31, 61], "lineplot": [6, 23], "linestyl": [35, 36, 38, 40, 41, 43], "linewidth": [2, 29], "link": 100, "linspac": [2, 6, 9, 14, 23], "list": [6, 12, 13, 14, 15, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "listedcolormap": [25, 29, 31], "liu": 44, "liwork": [], "llvm": 93, "load": [9, 13, 19, 25, 26, 61], "load_cc18": [22, 23, 26], "load_diabet": [46, 80, 82, 86, 88], "load_iri": [19, 25, 79, 81, 83, 85, 95], "loc": [2, 12, 14, 15, 19, 24], "local": [44, 93], "localoutlierfactor": 44, "locat": 9, "lof": 44, "log": [45, 47, 48, 50, 52, 54, 68, 69, 74, 79, 81, 84, 85, 87, 95, 96], "log2": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 104], "log_2": 44, "log_loss": [45, 54, 79, 81], "logarithm": [58, 59], "logic": 84, "lognorm": 14, "longer": 44, "longitud": 73, "look": [22, 29, 30, 31, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98], "loss": [46, 51, 53, 55, 80, 82, 86, 88, 95], "loupp": 94, "low": [6, 9, 13, 22, 23, 61, 110], "lower": [12, 13, 19, 44, 47, 71, 73, 74, 79, 80, 81, 82, 83, 95], "lowest": [79, 83, 85], "lsvt": 22, "luca": 75, "lw": [9, 13, 14], "lwork_arg": [], "ly": 49, "m": [13, 14, 52, 53, 61, 87, 88, 92, 94, 95], "ma": [62, 64, 65], "mach": [62, 64, 65], "machin": [22, 23, 45, 46, 47, 50, 51, 54, 55, 75, 81, 82, 92, 94, 95], "machineri": [57, 96], "made": [19, 109], "madhyastha": [57, 92, 96], "madhyastha2020": 92, "mae": [46, 55, 80, 82], "maggioni": 94, "mai": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96], "main": [22, 44, 93], "mainli": [107, 108], "mainten": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "major": [95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "make": [6, 13, 22, 30, 94, 102, 105], "make_blob": [2, 6], "make_classif": [45, 47, 50, 54], "make_marron_wand_classif": 109, "make_multiview_classif": 6, "make_regress": [51, 53, 55], "make_toy_dataset": 14, "make_trunk_classif": [36, 37, 38, 39, 40, 41, 42, 43, 62, 108, 109], "make_trunk_mixture_classif": [35, 109], "mani": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 104], "manifold": [0, 30, 52, 53, 87, 88, 92, 94, 102], "manner": 95, "map": [12, 13, 14, 15, 25, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "mappabl": [29, 31], "marker": [6, 13, 30], "marron": [62, 109], "marx": 89, "mask": [87, 88], "master": 93, "match": [60, 94], "mathbb": [35, 36, 38, 41], "mathcal": [38, 60, 96], "mathemat": [45, 52, 53, 54, 56, 57, 79, 81, 87, 88, 92, 94, 99], "matia": [9, 92], "matplotlib": [2, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 93], "matric": [4, 28, 29, 32, 44, 56, 57, 61, 62, 64, 65, 66, 95, 97, 98, 102], "matrix": [4, 6, 28, 30, 32, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 67, 68, 69, 72, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 97, 98], "matt": 62, "mauro": 94, "max": [9, 13, 25, 35, 36, 41, 44, 45, 46, 54, 55, 56, 57, 79, 80, 81, 82, 89, 90, 95], "max_bin": [45, 46, 54, 55], "max_depth": [14, 22, 23, 24, 25, 26, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "max_depth_tre": 9, "max_featur": [2, 6, 13, 22, 23, 24, 26, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 106, 107, 108], "max_features_": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "max_features_per_set": 29, "max_features_per_set_": [29, 84], "max_fpr": [35, 36, 38, 41], "max_leaf_nod": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "max_patch_dim": [30, 52, 53, 87, 88], "max_patch_dims_": [87, 88], "max_sampl": [9, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 108], "max_sample_s": [22, 23], "max_samples_": 44, "max_tree_depth": 9, "maxim": [56, 57], "maximum": [13, 25, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96], "mb": [3, 7, 10, 16, 17, 20, 27, 32, 34, 97], "mclust": 96, "mdi": 94, "mean": [0, 2, 9, 13, 15, 22, 23, 24, 25, 26, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 72, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 99, 102, 104, 106], "measur": [9, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96], "mechan": [26, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "median": [12, 13, 14, 15, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "meghana": [57, 92, 96], "mehta": [2, 52, 53, 87, 88, 94], "melt": 6, "mem": [3, 7, 10, 16, 17, 20, 27, 32, 34, 97], "member": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74], "membership": 60, "memori": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 85, 86], "mentch": 75, "merg": [12, 13, 14, 15], "mesh": 25, "meshgrid": 25, "meson": 92, "meta": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "metadata": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "metadata_rout": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "metadatarequest": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "metadatarout": 44, "method": [2, 4, 11, 15, 16, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 70, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 105, 109], "metric": [35, 36, 38, 40, 41, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 70, 74, 75, 78, 79, 81, 83, 84, 85, 87, 92, 96, 106, 107, 108], "metric_forest": 75, "metric_kwarg": [75, 78], "metric_perm_forest": 75, "mi": [0, 4, 33, 34, 42, 43, 58, 59, 64, 70, 72, 77, 97, 98, 106], "mid": [13, 35, 36, 37, 40, 41, 43], "midpoint": 12, "might": [4, 33, 34, 45, 47, 48, 50, 51, 52, 54, 56, 57, 64, 74, 75, 95, 97, 98, 110], "mike": 2, "min": [13, 25, 44], "min_": 96, "min_impurity_decreas": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "min_patch_dim": [30, 52, 53, 87, 88], "min_patch_dims_": [87, 88], "min_samples_leaf": [29, 30, 31, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "min_samples_leaf_": [79, 80, 81, 82], "min_samples_split": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 104], "min_samples_split_": [79, 80, 81, 82], "min_weight_fraction_leaf": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "min_weight_leaf": [29, 30, 31], "min_weight_leaf_": [79, 80, 81, 82], "mine": [44, 57, 89, 96], "ming": 44, "miniconda3": [], "minim": [45, 46, 47, 51, 53, 54, 55, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96], "minimum": [13, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "minut": [2, 6, 9, 13, 22, 23, 24, 25, 26, 35, 40, 42, 43], "mislead": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94], "miss": [45, 46, 54, 55, 79, 80, 81, 82, 83, 95, 110], "missing_value_feature_mask": [29, 30, 31], "mix": [35, 65], "mix_diff": [40, 43], "mixtur": [58, 60, 62, 65, 109], "mle": 96, "mode": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87, 93], "model": [0, 6, 12, 19, 22, 23, 24, 25, 26, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 63, 71, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 102, 108, 109], "model_detail": 25, "model_select": [2, 6, 9, 13, 14, 15, 22, 23, 24, 26, 46, 79, 80, 81, 82, 83, 85, 86, 88], "model_titl": 25, "modern": 92, "modif": 66, "modul": [2, 29, 30, 31, 92], "monoton": [45, 46, 54, 55, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "monotonic_cst": [29, 30, 31, 45, 46, 54, 55, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 104], "monotonic_cst_": [79, 80, 81, 82], "mont": 108, "more": [0, 2, 9, 12, 19, 22, 23, 29, 40, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 94, 95, 106], "moreov": [79, 80, 81, 82, 95, 104, 105], "morf": [87, 88, 92, 102], "morgan": 95, "most": [75, 76, 77, 78, 94, 95, 107], "mostli": [22, 31], "motiv": 94, "move": 25, "mse": 95, "mu": 96, "mu_0": [35, 36, 37, 38, 39, 40, 41, 42, 43, 64, 65], "mu_1": [35, 36, 37, 38, 39, 40, 41, 42, 43, 64, 65], "mu_i": 60, "mu_j": 96, "much": 95, "multi": [7, 28, 32, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 81, 83, 84, 85, 87, 92, 97, 99, 102, 105, 106], "multiclass": [45, 54, 79, 81, 83], "multilabel": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "multioutput": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "multioutputregressor": [46, 51, 53, 55, 80, 82, 86, 88], "multipl": [0, 6, 29, 30, 44, 49, 66, 84, 95, 105], "multipli": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "multivari": [0, 24, 30, 58, 59, 62, 65, 67, 68, 69, 72, 87, 88, 104], "multivariate_norm": 35, "multiview": [4, 6, 7, 33, 34, 42, 60, 64, 75, 77, 97, 98], "multiviewdecisiontreeclassifi": [29, 41, 42, 43, 106, 107, 108], "multiviewrandomforestclassifi": 6, "multiviewsplittertest": 29, "must": [35, 36, 38, 41, 45, 47, 48, 50, 51, 52, 54, 60, 62, 64, 65, 71, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 89, 90], "mutual": [0, 37, 40, 42, 43, 58, 59, 67, 68, 69, 70, 71, 73, 89, 102, 108], "mvrf": 6, "mvrf_score": 6, "n": [9, 17, 22, 23, 26, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 70, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 102], "n_": [70, 95], "n_1": 71, "n_2": 71, "n_3": 71, "n_bin": 2, "n_channel": 30, "n_class": [19, 25, 35, 37, 42, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 109], "n_classes_": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "n_col": 30, "n_color": [35, 36, 37, 38, 39, 40, 41, 42, 43], "n_covari": [75, 78], "n_cv": [22, 23, 24, 26], "n_depth": 30, "n_dim": [35, 36, 37, 38, 39, 40, 41, 42, 43, 58, 59, 62, 64, 65], "n_estim": [2, 6, 9, 12, 13, 15, 22, 23, 24, 25, 26, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 75, 76, 77, 78, 109], "n_featur": [6, 29, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 63, 66, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95], "n_feature_set": [29, 48, 84], "n_feature_sets_": 84, "n_features_": [48, 50, 51, 52, 53, 74], "n_features_1": 6, "n_features_2": 6, "n_features_b": 61, "n_features_i": [61, 70], "n_features_in_": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "n_features_new": [56, 57, 89, 90], "n_features_view": 6, "n_features_x": 70, "n_features_z": 70, "n_honest": [47, 74, 83], "n_i": 70, "n_index": 49, "n_inform": [35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 50, 51, 53, 54, 55, 62, 64, 65], "n_job": [2, 6, 22, 23, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 70, 74, 75, 78], "n_leaf_node_sampl": [45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "n_leav": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "n_left": 44, "n_m": 95, "n_model": 25, "n_neighbor": 49, "n_node": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "n_nodes_ptr": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74], "n_outlier": 9, "n_output": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 66, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "n_outputs_": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "n_quantil": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74], "n_queri": 49, "n_redund": [47, 50, 54], "n_repeat": [22, 23, 24, 26, 40, 43, 75, 78], "n_row": [23, 25, 30], "n_sampl": [2, 6, 9, 13, 14, 15, 24, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 109], "n_samples_bootstrap": [47, 74], "n_samples_fit": [46, 51, 53, 55, 80, 82, 86, 88], "n_split": [13, 22, 23, 24, 26], "n_structur": [47, 74, 83], "n_t": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "n_t_l": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "n_t_r": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "n_time": 30, "n_view": 61, "n_x": 70, "n_y": 70, "name": [2, 9, 15, 22, 23, 25, 26, 36, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 111], "namespac": 74, "nan": [45, 47, 48, 50, 51, 52, 54, 56, 57, 74, 83, 111], "nanmean": [36, 37, 38, 39, 41, 42], "natur": [0, 58, 59, 71, 96], "nature_noise_func": 71, "nbr": 70, "nbsp": 9, "nbviewer": 9, "ncol": [13, 30], "ndarrai": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "ndim": [35, 36, 38, 41], "nearest": [0, 2, 12, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 66, 70, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 106, 107, 108], "nearestneighbor": [0, 49, 66, 70], "nearestneighborsmetaestim": 102, "necessari": [2, 93], "necessarili": [30, 49, 94], "need": [47, 79, 80, 81, 82, 83, 93, 95, 98], "neelei": [57, 96], "neg": [2, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "neigh_dist": 49, "neigh_ind": 49, "neighbor": [0, 2, 44, 49, 66, 70, 92, 106], "neq": [40, 43], "nest": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "net": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "network": [52, 53, 87, 88, 92, 94], "neurodata": 93, "never": [45, 47, 48, 50, 51, 52, 54, 56, 57, 74], "new": [0, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 78, 89, 90, 96, 100, 104, 108, 109], "newaxi": 2, "next": [25, 48, 62, 64, 65, 84, 93], "nlog": 22, "nn": [70, 89], "nn_estim": 66, "nnomin": 9, "node": [0, 4, 9, 12, 13, 14, 15, 22, 28, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 98], "node_count": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "node_id": [79, 80, 81, 82], "node_to_indic": [12, 13, 14, 15], "nof": 9, "nois": [6, 9, 14, 60, 61, 62, 63, 64, 65, 71, 73], "noise_dim": 60, "noise_func": 73, "noise_std": 61, "noisi": [14, 24, 60, 61], "nomin": [22, 23], "non": [0, 31, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "noncommerci": 92, "none": [6, 24, 25, 26, 29, 30, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "nonlinear": 60, "nonzero": 30, "normal": [9, 15, 22, 23, 29, 31, 38, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 72, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 102], "normin": 26, "notabl": [23, 26, 107], "notat": 9, "note": [22, 25, 29, 30, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 100, 111], "notebook": [2, 4, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 98], "notic": [26, 79, 80, 81, 82], "notifi": 100, "notion": 96, "now": [6, 22, 23, 24, 25, 26, 30, 93, 102, 106, 107, 108, 109, 110], "np": [2, 6, 9, 12, 13, 14, 15, 19, 23, 24, 25, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 111], "np_i": 60, "nrow": [13, 30], "null": [40, 43, 75, 78, 107, 108], "null_dist": 75, "number": [6, 9, 24, 25, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 105, 106, 107, 108, 110], "numer": [22, 23, 26, 108], "numpi": [2, 6, 9, 12, 13, 14, 15, 19, 23, 24, 25, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 72, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93], "nuniformli": 9, "ny": [57, 96], "o": [6, 9, 12, 22, 30, 62, 64, 65, 89, 95, 102, 104, 111], "object": [26, 29, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 66, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96], "obliqu": [0, 11, 16, 19, 27, 28, 32, 48, 50, 51, 52, 53, 56, 84, 85, 86, 87, 88, 90, 92, 93, 97, 99, 102, 104], "obliquedecisiontre": 25, "obliquedecisiontreeclassifi": [19, 31, 47, 48, 50, 52, 86, 95], "obliquedecisiontreeregressor": [51, 53, 102], "obliquepr": 93, "obliquerandomforest": 25, "obliquerandomforestclassifi": [22, 23, 24, 25, 26, 94], "obliquerandomforestregressor": [15, 94, 102], "obs_noise_func": 71, "observ": [9, 13, 14, 40, 43, 44, 68], "observe_proba": [36, 37, 38, 39, 41, 42], "observe_stat": [75, 78], "observe_stat_": [75, 78], "observed_diff": [40, 43], "obtain": [1, 4, 6, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 94, 98], "odd": 24, "off": [15, 24, 71, 109], "offer": 0, "offset": 44, "offset_": 44, "often": [94, 96], "olshen": [79, 80, 83, 85, 86], "omiss": 22, "omit": [22, 45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "onc": [29, 75], "one": [6, 9, 12, 13, 14, 15, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 66, 70, 71, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 106, 107, 108], "oneclasssvm": 44, "ones": [9, 29, 30, 31], "onli": [19, 25, 30, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "onto": [87, 88], "oob": [77, 110], "oob_decision_function_": [45, 47, 48, 50, 51, 52, 54, 56, 57, 74], "oob_prediction_": [46, 53, 55], "oob_samples_": [47, 48, 50, 51, 52, 53, 74, 77, 108, 109], "oob_scor": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74], "oob_score_": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74], "openml": [22, 23, 26], "openmp": 93, "oper": [29, 79, 83, 85, 87, 88], "opposit": 44, "optim": [45, 46, 87, 88, 95, 109], "option": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 105], "orang": 31, "order": [2, 13, 22, 23, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "orf": [15, 22, 23], "org": [9, 22, 23, 24, 26, 57, 61, 62, 64, 65, 79, 80, 83, 85, 86, 94, 95, 96], "organiz": 105, "orient": 22, "orig_forest_proba": [75, 78], "origin": [22, 40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 66, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 109], "orthogon": 95, "orthonorm": 61, "ot": 95, "other": [0, 2, 6, 9, 13, 40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "other_arg": [], "otherwis": [24, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "our": [22, 29, 30, 31, 92, 95], "out": [41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 75, 76, 77, 78, 94, 108, 109], "outcom": 0, "outdat": 110, "outlier": [9, 44, 62, 92], "outlier_detect": [10, 97], "outlier_sampl": 9, "outlin": 25, "outperform": [6, 26, 95], "output": [40, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 99, 102, 109], "outsid": 102, "over": [6, 9, 29, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 60, 74, 79, 81, 83, 84, 87, 88, 94, 106], "overal": 94, "overfit": 95, "overhaul": 105, "overlap": [1, 3, 4, 64, 97, 98], "overlapping_gaussian": 2, "oversampl": 106, "overset": 60, "overview": 96, "overwrit": 109, "own": [0, 45, 47, 48, 49, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "p": [2, 4, 13, 22, 23, 24, 33, 34, 35, 36, 41, 45, 46, 47, 48, 50, 52, 54, 55, 62, 64, 71, 74, 75, 78, 81, 82, 97, 98, 109], "p_i": 60, "p_star": 24, "p_x": 35, "packag": [12, 13, 14, 15, 92, 93, 111], "pad": [13, 19, 25], "page": [9, 93, 100, 105], "pair": [19, 25, 40, 43, 91, 95], "pairidx": 19, "pairwis": 0, "palett": [35, 36, 37, 38, 39, 40, 41, 42, 43], "panayioti": 89, "panda": [6, 22, 23, 24, 25, 26, 41, 42, 43, 56, 57, 63, 89, 90, 102, 104, 105, 109, 110], "paper": [44, 62, 75, 94, 95], "parallel": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 70, 74, 75, 78], "parallel_backend": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 74], "param": [22, 23, 24, 26, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "paramet": [6, 13, 19, 22, 23, 24, 25, 29, 30, 31, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 104, 108, 109], "parametr": [0, 95], "pariti": [4, 21, 27, 94, 97, 98], "parser": [22, 23, 26], "part": [25, 29, 30, 31], "partial": 38, "partial_fit": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87, 92, 104], "particular": [9, 44, 95], "partit": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 68, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95], "pass": [6, 23, 30, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 66, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 102, 107, 108, 109], "patch": [29, 52, 53, 87, 88, 102, 106, 109], "patchobliquedecisiontreeclassifi": [30, 52], "patchobliquedecisiontreeregressor": [53, 102], "patchobliquerandomforestregressor": 102, "path": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "patsol": [52, 53, 87, 88, 94], "pattern": [62, 64, 65, 96], "pauc": [4, 33, 34, 64, 77, 97, 98], "pd": [6, 22, 23, 24, 25, 26, 41, 42, 43, 72], "pdf_class0": 35, "pdf_class1": 35, "pdf_class1_0": 35, "pdf_class1_1": 35, "pend": 93, "peng": 75, "per": [48, 60, 74, 76, 77, 84, 102, 106, 107, 108, 109], "percentag": 38, "perci": [57, 96], "perform": [0, 22, 23, 24, 25, 26, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 96, 109], "perm": 13, "perm_est": [75, 78], "perm_forest_proba": [75, 78], "permut": [13, 40, 47, 50, 51, 52, 53, 54, 55, 66, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 94, 104, 106, 109], "permutaiton": 78, "permutation_import": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "permutation_indices_": 74, "permutationhonestforestclassifi": [40, 43, 78, 109], "permute_per_forest_fract": 106, "permute_per_tre": 74, "permute_stat_": [75, 78], "perri": [2, 52, 53, 87, 88, 92, 94, 102], "perry2021": 92, "petal": 25, "peter": [62, 64, 65], "phd": 94, "phish": [22, 23, 26], "phishing_websit": [22, 23], "phishingwebsit": [22, 26], "pi": [9, 69, 71, 96], "pick": [81, 82], "pickl": 95, "pip": 92, "pipelin": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "place": 66, "pleas": [9, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "plot": [1, 3, 4, 6, 18, 20, 21, 22, 23, 25, 27, 28, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 94, 97, 98], "plot_color": 19, "plot_extended_isolation_forest": [9, 10, 97], "plot_extra_oblique_random_forest": [22, 27, 97], "plot_extra_orf_sample_s": [23, 27, 97], "plot_idx": 25, "plot_iris_dtc": [19, 20, 97], "plot_multiview_axis_aligned_splitt": [29, 32, 97], "plot_multiview_dtc": [6, 7, 97], "plot_oblique_axis_aligned_forests_sparse_par": [24, 27, 97], "plot_oblique_forests_iri": [25, 27, 97], "plot_oblique_random_forest": [26, 27, 97], "plot_overlapping_gaussian": [2, 3, 97], "plot_projection_matric": [30, 32, 97], "plot_quantile_interpolation_with_rf": [12, 16, 97], "plot_quantile_regression_intervals_with_rf": [13, 16, 97], "plot_quantile_toy_example_with_rf": [14, 16, 97], "plot_quantile_vs_standard_oblique_forest": [15, 16, 97], "plot_sim_": 24, "plot_sparse_projection_matrix": [31, 32, 97], "plot_step": [19, 25], "plot_step_coars": 25, "plot_tre": 19, "plt": [2, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43], "plug": 67, "png": 2, "po": [35, 38], "point": [12, 13, 19, 24, 25, 30, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 71, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96], "poisson": [46, 51, 53, 55, 80, 82, 86, 88], "polar": [9, 56, 57, 89, 90], "poli": 60, "polyform": 92, "popul": 49, "popular": 96, "portion": 6, "pos_class0": 35, "pos_class1": 35, "pos_label": [35, 36, 38, 41], "posit": [2, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 54, 79, 81, 83, 94, 96], "possibl": [0, 22, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96], "possibli": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 60, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "posterior": [4, 33, 34, 36, 37, 38, 39, 41, 42, 47, 65, 74, 75, 76, 77, 78, 83, 97, 98, 110, 111], "potenti": [45, 46, 47, 50, 51, 52, 53, 54, 55, 79, 80, 81, 82, 83, 85, 86, 88], "powel": 2, "power": [0, 94], "pr": 93, "practic": [26, 29, 30, 31, 94, 99], "precomput": [46, 49, 51, 53, 55, 80, 82, 86, 88], "predict": [1, 2, 16, 19, 21, 25, 27, 29, 31, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 97, 109], "predict_log_proba": [45, 47, 48, 50, 52, 54, 74, 79, 81, 84, 85, 87], "predict_proba": [2, 45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87, 111], "predict_proba_per_tre": [47, 48, 50, 52, 74, 109], "predict_quantil": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "predicted_label": [56, 57], "predictive_analyt": 95, "predit": [12, 13, 14, 15], "preprint": [63, 92], "preprocess": 70, "present": [9, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 89, 90, 95], "preserv": [61, 66], "presum": [52, 53, 87, 88], "prevent": 95, "previou": [29, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 109, 111], "previous": 110, "price": 13, "prieb": [57, 94, 96], "princip": 61, "print": [22, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 50, 51, 53, 54, 55, 60], "prior": [47, 60, 74, 83, 95, 96, 111], "privat": [29, 30, 31], "prob": 2, "proba": [79, 81, 83, 84, 85, 87], "proba_per_tre": [47, 48, 50, 52, 74], "probabl": [2, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 50, 52, 54, 56, 57, 58, 59, 60, 65, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 87, 95, 109], "problem": [24, 45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87, 92, 99], "proce": 70, "procedur": [66, 95], "proceed": [57, 89, 96], "process": [22, 44, 47, 71, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 104], "processor": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 74], "prod": 2, "produc": [0, 9, 110], "product": [61, 95], "program": 95, "progress": 0, "proj_mat": 30, "project": [6, 9, 19, 26, 28, 32, 48, 50, 51, 85, 86, 92, 94, 95, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "projection_matrix": [29, 31], "propens": [47, 95], "proper": 0, "properti": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 105, 108], "proport": [44, 45, 47, 48, 50, 52, 54, 74, 76, 79, 81, 83, 84, 85, 87], "provid": [0, 19, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "prune": [45, 46, 47, 54, 55, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "psd": [], "pseudo": 44, "psi": 70, "public": [24, 29, 30, 31, 94], "pull": 92, "pure": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "purpos": [23, 25, 93], "pvalu": [40, 43, 75, 78], "py": [2, 3, 6, 7, 9, 10, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 97], "pypi": [93, 111], "pyplot": [2, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43], "pytest": 93, "python": [2, 4, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 93, 98], "python3": [], "q_m": 95, "qrf": 15, "quad": 96, "quadrat": 63, "qualiti": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96], "quantifi": 39, "quantil": [16, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 97], "quantile_predict": [16, 97], "quantiti": [2, 92], "quatil": [12, 13, 14, 15], "queri": [22, 24, 26, 49], "question": 95, "quinlan": 95, "r": [2, 9, 25, 35, 36, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 70, 71, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 95], "r2_score": [46, 51, 53, 55, 80, 82, 86, 88], "radii": 9, "radii_in": 9, "radii_out": 9, "radiu": [49, 70, 71, 73], "radius_a": 71, "radius_b": 71, "radius_neighbor": 49, "rainbow": 2, "rais": [35, 36, 38, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 110], "ram": [79, 80, 81, 82], "ran": 110, "rand": [2, 9], "randal": [57, 94, 96], "randn": [9, 15], "random": [0, 2, 5, 7, 9, 15, 16, 21, 25, 27, 29, 30, 31, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 97, 99, 102, 105, 109], "random_se": [24, 25, 70, 71, 73], "random_st": [2, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 66, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 105], "randomforest": [79, 80, 83, 85, 86], "randomforestclassifi": [2, 6, 24, 26, 45, 46, 48, 50, 52, 81], "randomforestregressor": [12, 13, 14, 45, 46, 51, 53, 81], "randomli": [9, 22, 29, 31, 40, 43, 44, 47, 50, 51, 52, 53, 54, 55, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "randomst": [2, 9, 14, 29, 30, 31, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 61, 66, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "randomtreesembed": [0, 81], "rang": [9, 12, 13, 14, 15, 19, 22, 24, 25, 30, 44, 49, 87, 88], "rangl": 95, "rank": [61, 70, 94], "rate": [35, 36, 38, 41, 106], "rather": [55, 74, 96], "ratio": [64, 65], "ravel": [14, 25], "raw": 44, "rc": 95, "rdylbu": 19, "re": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "reach": [45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "read": [44, 45, 46, 50, 51, 54, 55, 79, 80, 81, 82, 83, 85, 86], "real": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 74, 80, 82, 86, 88], "recent": 55, "recommend": [47, 56, 57, 85, 86, 87, 88, 92, 95], "recurs": 95, "red": 2, "reduc": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 85, 86, 94], "reduct": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94], "ref": 95, "refer": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 68, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "reg": [46, 82], "regr": [51, 55], "regr_orf": 15, "regress": [0, 2, 4, 11, 16, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 106], "regressor": [4, 11, 15, 16, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 86, 88, 97, 98], "regular": [2, 6, 15, 19, 22, 62, 64, 65], "regularli": 25, "reject": [40, 43], "rel": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 96], "relat": [29, 30, 31, 44, 105, 109], "releas": [92, 104, 105, 107, 108, 109, 110, 111], "relev": [29, 30, 31, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92], "reli": 104, "remain": [47, 74, 83], "remov": 110, "renam": [45, 46, 54, 55, 111], "render": 9, "rep": 2, "repeat": [29, 30, 62, 64, 65, 71], "repeatedkfold": [22, 23, 24, 26], "replac": [0, 41, 42, 43, 44, 47, 66, 94, 111], "replace_nbr": 66, "repo": 93, "repositori": 93, "repres": [9, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 110], "represent": 9, "reproduc": [2, 44, 60, 61, 66, 108], "request": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92], "requir": [9, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "rerun": 9, "resampl": [47, 66, 106], "resampled_arrai": 66, "research": [51, 75, 92, 94], "reset_index": [22, 23, 24, 26], "reshap": [2, 9, 15, 25, 29, 30, 31, 35, 41, 42, 43], "residu": [46, 51, 53, 55, 80, 82, 86, 88], "resourc": [85, 86, 95], "respect": [25, 29, 64, 65, 84, 94, 96], "response_method": [9, 19], "rest": 95, "result": [2, 9, 23, 25, 29, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 66, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 106, 111], "retain": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "return": [2, 6, 9, 13, 14, 22, 23, 24, 26, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "return_count": [35, 37, 42], "return_decomp": 61, "return_dist": 49, "return_indic": 76, "return_lat": 60, "return_mi_lb": [71, 73], "return_param": [62, 64, 65], "return_posterior": [40, 43, 75, 78], "return_x_i": [46, 80, 81, 82, 86, 88], "reus": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 74], "rf": [2, 6, 13, 14, 24, 26, 95], "rf_score": 6, "rff": 24, "rg": 88, "rho": [62, 64, 65], "richard": 2, "right": [9, 13, 15, 19, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "right_impur": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "rightarrow": 71, "risk": 0, "rng": [6, 9, 13, 14, 15], "robert": [9, 61, 92], "robust": [30, 92], "roc": [35, 36, 38, 41], "roc_auc_scor": [35, 38], "roc_curv": [35, 36, 38, 41], "ronak": [2, 52, 53, 87, 88, 94], "ronan": [2, 52, 53, 87, 88, 92, 94, 102], "root": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 106], "rotat": 61, "round": [9, 13, 24, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 50, 51, 52, 53, 54, 55, 74, 107, 108], "rout": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "row": [25, 30, 87, 88, 106], "rule": 19, "run": [2, 6, 9, 13, 22, 23, 24, 25, 26, 35, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 74, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 105, 106], "runtim": [0, 44, 95, 109], "rv": 15, "ryb": 19, "sa98": [35, 36, 41], "sacrific": 95, "sahand": [9, 92], "sai": 95, "sake": [30, 31], "sambit": [63, 102, 104, 105, 109, 110], "same": [12, 13, 14, 15, 19, 29, 30, 31, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 74, 79, 81, 83, 84, 85, 87, 88, 91, 94, 95, 106], "sampl": [0, 2, 4, 6, 9, 12, 13, 15, 19, 22, 23, 24, 26, 28, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 102, 105, 106, 108, 109, 110, 111], "sample_indic": 96, "sample_projection_matrix_pi": [29, 30, 31], "sample_s": 23, "sample_weight": [2, 29, 30, 31, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "sarma": [52, 53, 87, 88, 94], "savefig": [2, 24], "sc": 12, "scalabl": 75, "scalarmapp": [29, 31], "scale": [13, 15, 61, 62, 64, 65, 106], "scaling_factor": [62, 64, 65], "scatter": [2, 9, 12, 19, 25, 30], "scatterplot": [41, 42, 43], "scheme": 96, "scienc": [52, 53, 87, 88, 92, 94], "scikit": [19, 56, 57, 89, 90, 92, 93, 94, 95, 109, 111], "scipi": [15, 35, 37, 42, 52, 53, 66, 87, 88, 93], "score": [9, 22, 23, 24, 25, 26, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 61, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "score_sampl": 44, "script": [2, 6, 9, 13, 22, 23, 24, 25, 26, 35, 40, 42, 43], "sdm": 89, "seaborn": [6, 22, 23, 24, 26, 35, 36, 37, 38, 39, 40, 41, 42, 43], "search": [22, 23, 24, 26, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "sec": 25, "second": [2, 6, 9, 13, 22, 23, 24, 25, 26, 29, 35, 40, 42, 43, 48, 60, 62, 64, 65, 84, 95], "secondli": 94, "section": [23, 25, 61], "see": [2, 6, 12, 13, 14, 15, 19, 22, 23, 25, 26, 29, 30, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 66, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96], "seed": [6, 14, 24, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56, 57, 58, 59, 62, 63, 64, 65, 70, 71, 72, 73, 75, 76, 78, 109], "seen": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "segment": [13, 89], "seleciton": 96, "select": [22, 29, 44, 46, 51, 53, 55, 61, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94], "self": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "sensit": [35, 36, 41, 75, 78], "sensor": [87, 88], "sepal": 25, "separ": [22, 47, 81, 82, 109], "separated_bimod": 62, "sequenc": [25, 66, 89], "seri": [4, 28, 32, 87, 88, 97, 98], "set": [6, 9, 22, 23, 25, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 105, 106, 109], "set1": [35, 36, 37, 38, 39, 40, 41, 42, 43], "set_arrai": [29, 31], "set_config": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "set_fit_request": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "set_label": [29, 31], "set_major_formatt": 13, "set_output": [56, 57, 89, 90], "set_palett": [35, 36, 37, 38, 39, 40, 41, 42, 43], "set_param": [13, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "set_partial_fit_request": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "set_predict_proba_request": [79, 81, 83, 84, 85, 87], "set_predict_request": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "set_score_request": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "set_size_inch": [22, 23, 26], "set_styl": [35, 36, 37, 38, 39, 40, 41, 42, 43], "set_titl": [6, 9, 22, 23, 24, 26], "set_vis": 9, "set_xlabel": [2, 6, 13, 22, 26, 35, 36, 37, 38, 39, 40, 41, 42, 43], "set_xlim": [13, 35, 36, 38, 41], "set_xtick": [2, 29, 31], "set_xticklabel": [9, 29, 31], "set_ylabel": [2, 6, 13, 22, 26, 35, 36, 37, 38, 39, 40, 41, 42, 43], "set_ylim": [2, 13, 35, 36, 38, 41], "set_ytick": [2, 29, 31], "set_yticklabel": [29, 31], "set_zlim": 30, "setminu": 95, "setup": [29, 62], "sever": [44, 47, 50, 51, 52, 53, 54, 55, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94], "shade": 14, "shallow": [47, 74, 83], "shannon": [45, 54, 79, 81], "shape": [2, 6, 9, 12, 13, 14, 15, 22, 23, 25, 26, 29, 30, 31, 35, 36, 38, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94], "share": 61, "sharei": 30, "sharex": 30, "shen": [2, 63, 94], "shin": 102, "ship": 19, "short": 9, "should": [22, 23, 29, 30, 31, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 66, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93], "show": [2, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43], "shown": [2, 67], "shuffl": [2, 25, 43, 47, 50, 51, 53, 54, 55, 60, 66, 74, 75, 78, 105], "shuffle_random_st": 60, "siam": [24, 52, 53, 87, 88, 89, 92, 94], "sigkdd": [57, 96], "sigma": [14, 96], "sigma_i": 60, "sigmoid": 2, "signal": [6, 61, 64, 65], "signatur": [45, 46, 54, 55, 56, 57], "signific": [23, 94], "significantli": [0, 40, 43, 46, 51, 53, 55], "sigrf": 2, "silent": 110, "silhouette_scor": [56, 57], "sim": 60, "sim_matrix": [48, 50, 51, 52, 53, 56, 57, 84, 85, 86, 87, 88, 89, 90], "similar": [0, 22, 25, 39, 48, 50, 51, 52, 53, 56, 57, 62, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 102], "similarli": [9, 95], "simpl": [12, 19, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "simpler": [41, 96], "simplest": 92, "simul": [0, 1, 3, 4, 21, 27, 29, 59, 62, 63, 64, 65, 94, 97, 98, 109, 110], "simultan": [56, 57], "sin": [9, 14, 60, 71], "sinc": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "singl": [19, 25, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "single_proba": 42, "singular": 61, "sinusoid": 9, "site": [], "size": [0, 2, 4, 6, 9, 13, 14, 21, 22, 27, 30, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 79, 80, 81, 82, 83, 85, 86, 87, 88, 95, 97, 98, 106, 110], "skew": 15, "skewed_bimod": 62, "skewed_unimod": 62, "skewnorm": 15, "skewnorm_rv": 15, "sklearn": [2, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 38, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 66, 70, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 105], "sklearn_vs_treepl": [19, 20, 97], "sktree": 111, "slice": [25, 66], "slight": 94, "slightli": 9, "slower": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74], "sm": [29, 31], "small": [31, 45, 47, 48, 50, 51, 52, 54, 56, 57, 74], "smaller": [45, 46, 47, 54, 55, 74, 79, 80, 81, 82, 83], "smallest": 71, "smooth": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "smooth_comb": 62, "sn": [6, 22, 23, 24, 26, 35, 36, 37, 38, 39, 40, 41, 42, 43], "so": [6, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 64, 65, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "soft": 96, "solut": [0, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 67, 68, 69, 70, 74], "some": [0, 6, 9, 22, 29, 30, 31, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 98, 106], "sometim": 94, "sort": [2, 9, 13, 22, 23, 26, 47, 49, 89, 96], "sort_idx": 13, "sort_result": 49, "sourc": [2, 4, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98], "sp": 15, "space": [25, 26, 48, 49, 56, 57, 68, 70, 84, 89, 90, 95], "spars": [0, 22, 26, 27, 28, 32, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 66, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 97], "sparse_oblique_tre": [27, 97], "sparse_par": 24, "sparsiti": 95, "spec": [35, 36, 41], "special": 95, "specif": [0, 29, 30, 31, 35, 36, 38, 41, 45, 47, 48, 50, 52, 54, 62, 64, 65, 74, 75, 78, 95, 105], "specifi": [29, 30, 40, 43, 45, 47, 48, 50, 52, 54, 60, 61, 62, 65, 74, 79, 81, 83, 84, 85, 87, 95, 108], "spectral": 25, "speed": [4, 21, 22, 27, 55, 96, 97, 98, 104], "spend": [85, 86, 95], "sphere": 73, "spheric": 9, "sphinx": [2, 4, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 98], "spin": 93, "split": [0, 2, 4, 9, 13, 22, 25, 28, 30, 31, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 66, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 98, 106, 107, 108], "splitter": [6, 32, 47, 54, 55, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 97, 105], "sporf": 92, "springer": [79, 80, 83, 85, 86, 95], "sqrt": [6, 22, 23, 39, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 104, 106], "squar": [9, 30, 46, 51, 53, 55, 62, 80, 82, 86, 88, 106], "squared_error": [46, 51, 53, 55, 80, 82, 86, 88], "squeez": [9, 30, 35, 36, 38, 41], "sridevi": [52, 53, 87, 88, 94], "stabl": 61, "standalon": 0, "standard": [4, 9, 21, 22, 23, 24, 26, 27, 31, 36, 37, 38, 39, 40, 41, 42, 43, 49, 60, 70, 72, 78, 87, 88, 95, 97, 98], "standard_norm": 6, "start": [30, 64, 65, 93], "stat": [15, 35, 36, 37, 38, 39, 40, 41, 42, 43, 79, 80, 83, 85, 86, 107, 108, 109], "state": [0, 40, 43], "statist": [4, 15, 33, 34, 40, 43, 47, 61, 62, 64, 65, 75, 78, 79, 80, 83, 85, 86, 92, 94, 95, 97, 98, 106], "statu": 26, "std": 25, "stem": [22, 75, 78], "step": [25, 44, 66], "steve": 62, "still": [0, 30, 47, 111], "stone": [79, 80, 83, 85, 86], "stop": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "storag": 95, "store": [0, 25, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 84, 85, 86, 87, 88, 94, 95], "store_leaf_valu": [45, 46, 54, 55, 79, 80, 81, 82, 84, 85, 86, 87, 88], "str": [25, 35, 36, 38, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 70, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "strategi": [4, 28, 47, 54, 55, 66, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98], "stratifi": [9, 36, 37, 38, 39, 40, 41, 42, 43, 47, 66, 74, 83, 105, 110], "stream": [92, 104], "streamdecisionforest": 104, "strength": 61, "string": [25, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "stripplot": [22, 24, 26], "strnadova": [57, 96], "strong": 92, "strongly_skew": 62, "structur": [0, 6, 19, 29, 30, 47, 66, 74, 79, 80, 81, 82, 83, 87, 88, 96, 102], "structure_indices_": [47, 74, 83], "style": [35, 36, 37, 38, 39, 40, 41, 42, 43], "sub": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 108], "sublist": [12, 13, 14, 15], "subobject": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "subplot": [2, 6, 9, 13, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43], "subplots_adjust": 13, "subsampl": [22, 23, 26, 44, 47, 74, 83, 95], "subscrib": 100, "subsequ": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "subset": [25, 31, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 81, 83, 84, 85, 87, 95], "subspac": [6, 70], "substanti": 22, "subtract": [75, 78], "subtre": [45, 46, 47, 54, 55, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "suffer": 94, "suffici": 35, "suggest": 55, "suit": [22, 23, 26], "suitabl": 22, "suki": [19, 102, 104, 111], "sum": [6, 24, 29, 39, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94], "sum_": 96, "supervis": [92, 96, 99], "support": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 102, 107, 108], "suppos": [45, 47, 48, 50, 52, 54, 74, 79, 81, 83, 84, 85, 87], "suptitl": [19, 25, 30], "surfac": [4, 18, 20, 21, 27, 30, 31, 97, 98], "sval": 61, "svm": 44, "sw_test": 2, "sw_train": 2, "synthet": 15, "t": [2, 6, 9, 14, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 61, 63, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96], "t0": [22, 23, 24, 26], "t_d": 24, "t_m": 95, "t_r": [36, 38, 41], "take": [0, 13, 19, 25, 56, 57, 66, 70, 75, 78, 89, 90, 104], "taken": [22, 23, 60, 62, 84, 85, 86, 94], "talk": [35, 36, 37, 38, 39, 40, 41, 42, 43], "target": [6, 13, 15, 19, 25, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95], "target_nam": 19, "task": [24, 25, 92], "taylor": 61, "techniqu": [66, 96], "tell": 44, "templat": [44, 45, 46, 47, 54, 55, 56, 57, 74, 83], "term": [70, 71, 95, 96, 109], "termin": [46, 51, 53, 55, 80, 82, 86, 88], "terzi": 89, "test": [2, 13, 14, 22, 23, 24, 31, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 62, 64, 65, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 104, 105, 106, 109], "test_idx_list": 76, "test_index": 13, "test_scor": [22, 23, 24, 26], "test_siz": [2, 15, 76], "tester": 29, "th": [30, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74], "than": [15, 22, 23, 24, 25, 29, 40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 66, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 106, 108, 109, 110], "thank": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "thei": [0, 9, 22, 30, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 109], "them": [9, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 94], "theoret": [0, 2, 92], "theori": [68, 94], "therebi": [94, 95], "therefor": [2, 47, 50, 51, 52, 53, 54, 55, 87, 88, 94, 95], "thesi": 94, "theta": [9, 95], "thi": [0, 2, 6, 9, 12, 13, 14, 15, 22, 23, 24, 25, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 70, 71, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 100, 104, 105, 106, 107, 108, 109, 110, 111], "third": [25, 26, 29], "this_i": 2, "this_sw": 2, "this_x": 2, "those": [0, 13, 14, 22, 45, 46, 47, 50, 51, 52, 53, 54, 55, 72, 79, 80, 81, 82, 83, 85, 86, 94, 95], "though": 29, "thousand": 6, "threadpoolctl": 93, "three": [25, 26, 29], "threshold": [19, 22, 35, 36, 38, 41, 44, 95], "through": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92], "throw": 110, "thu": [40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 74, 85, 86, 94, 95, 96], "ti": [79, 83, 85], "tibshirani": [47, 61, 79, 80, 83, 85, 86, 95], "tick": [29, 31], "tick_param": [35, 36, 37, 38, 39, 40, 41, 42, 43], "ticker": 13, "tight": [19, 25], "tight_layout": [2, 9, 13, 19, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43], "tim": 75, "time": [2, 4, 6, 9, 13, 22, 23, 24, 25, 26, 28, 29, 35, 40, 42, 43, 55, 56, 57, 71, 75, 78, 85, 86, 87, 88, 89, 91, 95, 98], "time_taken": [22, 23], "ting": 44, "tip": [99, 100], "titl": [9, 19, 25, 29, 30, 31], "tkdd": 44, "tmp": [22, 23, 24, 26], "togeth": [19, 25, 95, 96], "toi": 9, "tolist": 12, "tomita": [51, 52, 53, 87, 88, 92, 94], "tomita2020": 92, "toni": 44, "took": [24, 26], "tool": [4, 33, 98], "top": [9, 13, 25, 92, 94], "total": [2, 3, 6, 7, 9, 10, 13, 16, 17, 20, 22, 23, 24, 25, 26, 27, 32, 34, 35, 40, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97], "total_second": [22, 23], "toward": [52, 53, 87, 88, 92, 94], "tpami": [62, 64, 65], "tpr": [35, 36, 38, 41], "traceback": [], "track": 109, "tradeoff": [22, 95], "tradit": [48, 50, 51, 85, 86], "tradition": 0, "train": [2, 4, 12, 13, 15, 18, 20, 22, 23, 25, 30, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 97, 98, 105], "train_idx_list": 76, "train_index": 13, "train_test_split": [2, 9, 14, 15, 46, 81, 82], "tran": [62, 64, 65, 68], "transact": [9, 44, 92], "transform": [56, 57, 60, 61, 70, 89, 90], "treatment": 95, "tree": [2, 6, 8, 12, 13, 14, 15, 20, 22, 23, 26, 27, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 75, 76, 77, 92, 93, 94, 97, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111], "tree_": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "tree_estim": [41, 42, 43, 47, 74, 83, 109], "tree_estimator_param": [47, 74, 83], "treepl": [0, 2, 6, 9, 12, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 93, 94, 95, 97, 100, 106, 107, 108, 109, 110, 111], "treeple_tutorial_0_gmm": [34, 35, 97], "treeple_tutorial_1_1a_sa98": [34, 36, 97], "treeple_tutorial_1_1b_mi": [34, 37, 97], "treeple_tutorial_1_1c_pauc": [34, 38, 97], "treeple_tutorial_1_1d_hd": [34, 39, 97], "treeple_tutorial_1_2_pvalu": [34, 40, 97], "treeple_tutorial_2_1a_sa98_multiview": [34, 41, 97], "treeple_tutorial_2_1b_cmi": [34, 42, 97], "treeple_tutorial_2_2_pvalue_multiview": [34, 43, 97], "tri": 96, "trimod": 62, "triplet": 95, "true": [2, 4, 9, 19, 22, 23, 24, 26, 30, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98, 106, 110], "true_mi": [67, 68, 69], "trunk": [62, 64, 65, 108, 109], "trust": 9, "truth": [2, 9, 14, 95], "try": [9, 95], "tsapara": 89, "tt": [87, 88], "turn": [0, 109], "tutori": [4, 33, 36, 37, 38, 39, 40, 41, 42, 43, 98], "twice": [79, 80, 81, 82], "two": [2, 6, 9, 12, 19, 22, 23, 25, 26, 29, 56, 57, 60, 62, 64, 65, 75, 78, 81, 82, 94, 95, 99, 102, 106], "twomean": [56, 57, 89, 90], "txt": 93, "tyler": [52, 53, 87, 88, 92, 94], "type": [22, 23, 25, 26, 47, 62, 64, 65, 74, 75, 76, 77, 78, 83, 95, 102], "typic": [56, 57, 89, 90, 95], "u": [13, 46, 51, 53, 55, 61, 80, 82, 86, 88, 93, 94], "un": [52, 53, 87, 88], "unabl": [9, 106], "unbias": 47, "unchang": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "under": [29, 38, 40, 43, 92, 111], "undergon": 105, "underli": [29, 30, 31, 47, 54, 55, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 109], "understand": [79, 80, 81, 82, 83, 94], "unif": 71, "uniform": [9, 14, 24, 47, 60, 70, 71, 73, 74, 83], "uniform_averag": [46, 51, 53, 55, 80, 82, 86, 88], "uniformli": [6, 24, 29, 30], "uniqu": [2, 22, 23, 26, 35, 37, 42, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94], "unitari": 61, "unless": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "unlimit": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "unprun": [45, 46, 47, 50, 51, 52, 53, 54, 55, 79, 80, 81, 82, 83, 85, 86], "unreleas": [92, 100], "unsupervis": [44, 56, 57, 89, 90, 92, 99, 102, 104], "unsupervisedcriterion": [89, 90], "unsuperviseddecisiontre": [56, 57], "unsupervisedobliquerandomforest": 70, "unsupervisedsplitt": [89, 90], "until": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "up": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 107, 108], "updat": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "upgrad": 104, "upon": [79, 80, 81, 82], "upp": 13, "upper": [2, 13, 14], "url": [57, 61, 62, 64, 65, 94, 96], "us": [0, 2, 4, 5, 6, 9, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 70, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 104, 105, 108, 109], "usa": [57, 96], "usag": [1, 4, 22, 23, 79, 80, 81, 82, 83, 98, 105, 111], "useless": 25, "user": [2, 19, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 102, 105, 111], "userwarn": 19, "util": [13, 15, 26, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "v": [4, 6, 21, 22, 27, 46, 47, 51, 53, 55, 62, 63, 64, 65, 80, 82, 86, 88, 94, 95, 97, 98], "v21": 94, "vajda": 68, "val": 70, "vale": [40, 43], "valid": [6, 13, 15, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "valu": [0, 4, 9, 12, 13, 15, 22, 23, 29, 30, 31, 33, 34, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 70, 71, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 97, 98, 107, 109, 110, 111], "value_nam": 6, "valueerror": [35, 36, 38, 41, 110], "var": 9, "var_nam": 6, "vari": [6, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "variabl": [6, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 67, 71, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95], "varianc": [0, 13, 22, 46, 47, 51, 53, 55, 56, 57, 60, 74, 80, 82, 83, 86, 88, 89, 90, 94, 96], "variant": [4, 5, 6, 11, 98], "variat": [13, 24], "varieti": [95, 96], "variou": [2, 45, 46, 48, 50, 51, 52, 53, 54, 55, 109], "vastli": 6, "vector": [29, 31, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 62, 64, 65, 72, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96], "verbos": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 75, 76, 77, 78, 93], "veri": [22, 25, 45, 46, 47, 50, 51, 52, 53, 54, 55, 79, 80, 81, 82, 83, 85, 86], "veronika": [57, 96], "version": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 100], "via": [6, 19, 63, 85, 86, 89, 92, 93, 94, 102, 105, 106, 108], "view": [7, 28, 32, 48, 60, 61, 84, 92, 97, 105, 106, 107, 108], "view_load": 61, "viridi": 30, "virtual": 93, "visit": 61, "visual": [4, 28, 30, 31, 32, 97, 98], "vogelstein": [2, 52, 53, 57, 63, 87, 88, 94, 96], "vote": [0, 45, 47, 48, 50, 52, 54, 56, 57, 74, 83], "vstack": 6, "w": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 62, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "w_b": 61, "w_pad": [19, 25], "wa": [12, 13, 14, 15, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 74, 89, 90, 95, 106, 109, 110], "wadsworth": [79, 80, 83, 85, 86], "wager": [47, 83], "wai": [0, 9, 22, 44, 66, 81, 82, 96], "walk": 92, "wand": [62, 109], "want": 29, "warm_start": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74], "warn": [35, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 110], "wdbc": [22, 26], "we": [0, 2, 6, 9, 12, 13, 15, 19, 25, 29, 30, 31, 35, 40, 43, 44, 47, 66, 67, 71, 92, 93, 94, 95, 96, 104, 105, 109], "websit": [22, 23, 26], "wehenkel": [22, 23, 45, 46, 55, 81, 82], "wei": 75, "weight": [29, 31, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 62, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 102, 109], "well": [2, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "were": [74, 105, 109, 110], "what": [25, 29, 30, 31, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "when": [6, 9, 12, 22, 31, 36, 38, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 62, 71, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 100, 104, 105, 106, 107, 108, 109, 110], "where": [2, 6, 19, 26, 30, 35, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 67, 70, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 102, 105, 106, 107, 108, 110, 111], "wherea": [9, 55, 71, 95], "whether": [9, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "which": [0, 2, 9, 13, 22, 24, 29, 30, 40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 65, 66, 71, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 105, 106, 107, 108, 109, 110], "while": [0, 2, 6, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 109], "white": [22, 24, 26, 29, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43], "who": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "whole": [44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 74], "whose": 94, "width": [25, 87, 88], "wiki": [79, 80, 83, 85, 86, 95], "wikipedia": [79, 80, 83, 85, 86, 95], "willing": [85, 86, 95], "within": [30, 47, 49, 56, 57, 70, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93], "without": [2, 44, 47, 79, 80, 81, 82, 96, 108], "work": [0, 6, 15, 29, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "wors": [46, 51, 53, 55, 80, 82, 86, 88], "would": [40, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 106, 109, 111], "wrap": [52, 53, 87, 88], "wrapper": [29, 30, 31], "www": [22, 23, 26, 61, 79, 80, 83, 85, 86], "x": [2, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 110], "x0": 6, "x0_first": 6, "x1": 6, "x1_first": 6, "x_": 60, "x_0": 38, "x_1": [38, 60], "x_b": 61, "x_i": [95, 96], "x_index": 67, "x_j": 95, "x_leav": [45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "x_max": 25, "x_min": 25, "x_mixtur": 65, "x_n": 96, "x_new": [56, 57, 89, 90], "x_null": 43, "x_test": [2, 9, 12, 13, 14, 15, 46, 81, 82], "x_test_prob": 2, "x_train": [2, 9, 13, 14, 15, 46, 81, 82], "xaxi": 13, "xlabel": [9, 12, 14, 15, 19, 29, 31], "xlim": [9, 12, 30], "xmax": [35, 36, 41], "xmin": [35, 36, 41], "xor": 24, "xtick": 12, "xu": [92, 102, 104, 108, 111], "xu2022": 92, "xx": [14, 25], "xx_coarser": 25, "xxx": [79, 80, 81, 82], "xy": 40, "xyz": 70, "xz": 70, "y": [2, 6, 9, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "y0": 6, "y1": [6, 73], "y2": 73, "y3": 73, "y_": 60, "y_1": 60, "y_err": 12, "y_index": 67, "y_max": [13, 25], "y_median": 12, "y_min": [13, 25], "y_pred": [12, 13, 14, 45, 46, 51, 53, 54, 55, 80, 82, 86, 88], "y_pred_i": 13, "y_pred_interv": 13, "y_pred_low": [13, 14], "y_pred_m": 14, "y_pred_orf": 15, "y_pred_proba": [35, 36, 37, 38, 39, 41, 42], "y_pred_quantil": [12, 13, 15], "y_pred_quatil": 14, "y_pred_upp": [13, 14], "y_test": [2, 9, 13, 14, 15, 46, 81, 82], "y_train": [2, 9, 12, 13, 14, 15, 46, 79, 80, 81, 82], "y_true": [13, 35, 36, 37, 38, 41, 42, 45, 46, 51, 53, 54, 55, 80, 82, 86, 88], "y_uniqu": 2, "yaxi": 13, "yerr": 12, "yezeret": 2, "yield": 94, "yim": 94, "ylabel": [12, 14, 15, 19, 29, 31], "ylim": [9, 30], "ymax": [35, 36, 41], "ymin": [35, 36, 41], "york": [57, 96], "you": [26, 29, 31, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 98, 109], "your": [0, 87, 88, 92], "yunjin": 61, "yuxin": 105, "yy": 25, "yy_coars": 25, "yz": 70, "z": [25, 30, 43, 67, 70, 71, 73], "z_index": 67, "z_points_coars": 25, "z_x": [41, 42, 43], "z_x_y": [41, 42, 43], "zero": [22, 24, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 60, 64, 65, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "zhi": 44, "zhou": 44, "zip": [2, 4, 6, 9, 12, 13, 19, 25, 35, 36, 41, 98], "zipbal": 93, "zorder": 12}, "titles": ["API Documentation", "Calibrated decision trees via honesty", "Plot honest forest calibrations on overlapping gaussian simulations", "Computation times", "Examples", "Multi-view learning with Decision-trees", "Analyze a multi-view dataset with a multi-view random forest", "Computation times", "Outlier-detection", "ExtendedIsolationForest example", "Computation times", "Quantile Predictions with Random Forest", "Predicting with different quantile interpolation methods", "Quantile prediction intervals with Random Forest Regressor", "Quantile prediction with Random Forest Regressor class", "Quantile regression with oblique regression forest", "Computation times", "Computation times", "Comparing sklearn and treeple decision trees", "Plot the decision surface of decision trees trained on the iris dataset", "Computation times", "Sparse oblique projections with oblique decision-trees", "Compare extra oblique forest and oblique random forest predictions on cc18 datasets", "Speed of Extra Oblique Random Forest vs Oblique Random Forest on different dataset sizes", "Plot oblique forest and axis-aligned random forest predictions on sparse parity simulation", "Compare the decision surfaces of oblique extra-trees with standard oblique trees", "Plot oblique forest and axis-aligned random forest predictions on cc18 datasets", "Computation times", "Decision-tree splitters", "Demonstrate and visualize a multi-view projection matrix for an axis-aligned tree", "Plot the projection matrices of an oblique tree for sampling images, or time-series", "Plot the sparse projection matrices of an oblique tree", "Computation times", "Treeple for Hypothesis Testing", "Computation times", "Estimating true posteriors &amp; statistics", "Calculating S&#64;98", "Calculating MI", "Calculating pAUC", "Calculating Hellinger Distance", "Calculating p-value (MIGHT)", "Calculating S&#64;98 with multiview data", "Calculating CMI", "Calculating p-value with multiview data (CoMIGHT)", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple</span></code>.ExtendedIsolationForest", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple</span></code>.ExtraTreesClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple</span></code>.ExtraTreesRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple</span></code>.HonestForestClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple</span></code>.MultiViewRandomForestClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple</span></code>.NearestNeighborsMetaEstimator", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple</span></code>.ObliqueRandomForestClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple</span></code>.ObliqueRandomForestRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple</span></code>.PatchObliqueRandomForestClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple</span></code>.PatchObliqueRandomForestRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple</span></code>.RandomForestClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple</span></code>.RandomForestRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple</span></code>.UnsupervisedObliqueRandomForest", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple</span></code>.UnsupervisedRandomForest", "treeple.datasets.approximate_clf_mutual_information", "treeple.datasets.approximate_clf_mutual_information_with_monte_carlo", "treeple.datasets.make_gaussian_mixture", "treeple.datasets.make_joint_factor_model", "treeple.datasets.make_marron_wand_classification", "treeple.datasets.make_quadratic_classification", "treeple.datasets.make_trunk_classification", "treeple.datasets.make_trunk_mixture_classification", "treeple.experimental.conditional_resample", "treeple.experimental.mutual_info.cmi_gaussian", "treeple.experimental.mutual_info.entropy_gaussian", "treeple.experimental.mutual_info.mi_gaussian", "treeple.experimental.mutual_info_ksg", "treeple.experimental.simulate.simulate_helix", "treeple.experimental.simulate.simulate_multivariate_gaussian", "treeple.experimental.simulate.simulate_sphere", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple.stats</span></code>.PermutationHonestForestClassifier", "treeple.stats.build_coleman_forest", "treeple.stats.build_cv_forest", "treeple.stats.build_oob_forest", "treeple.stats.build_permutation_forest", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple.tree</span></code>.DecisionTreeClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple.tree</span></code>.DecisionTreeRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple.tree</span></code>.ExtraTreeClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple.tree</span></code>.ExtraTreeRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple.tree</span></code>.HonestTreeClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple.tree</span></code>.MultiViewDecisionTreeClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple.tree</span></code>.ObliqueDecisionTreeClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple.tree</span></code>.ObliqueDecisionTreeRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple.tree</span></code>.PatchObliqueDecisionTreeClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple.tree</span></code>.PatchObliqueDecisionTreeRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple.tree</span></code>.UnsupervisedDecisionTree", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">treeple.tree</span></code>.UnsupervisedObliqueDecisionTree", "treeple.tree.compute_forest_similarity_matrix", "<strong>treeple</strong>", "Installation", "<span class=\"section-number\">3. </span>Oblique Random Forests", "<span class=\"section-number\">1. </span>Supervised Decision Trees", "<span class=\"section-number\">2. </span>Unsupervised Decision Trees", "Computation times", "Examples using treeple", "User guide: contents", "Release History", "&lt;no title&gt;", "Version 0.1", "Version 0.10", "Version 0.2", "Version 0.3", "Version 0.4", "Version 0.5", "Version 0.6", "Version 0.7", "Version 0.8", "Version 0.9"], "titleterms": {"": [35, 36, 41], "0": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "1": 102, "10": 103, "1d": 30, "2": 104, "2d": 30, "3": 105, "3d": 30, "4": 106, "5": 107, "6": 108, "7": 109, "8": 110, "9": 111, "90": 35, "98": [35, 36, 41], "The": 12, "align": [24, 26, 29], "an": [29, 30, 31], "analyz": 6, "api": 0, "approximate_clf_mutual_inform": 58, "approximate_clf_mutual_information_with_monte_carlo": 59, "axi": [24, 26, 29], "bic": 96, "boundari": 9, "build_coleman_forest": 75, "build_cv_forest": 76, "build_oob_forest": 77, "build_permutation_forest": 78, "calcul": [35, 36, 37, 38, 39, 40, 41, 42, 43], "calibr": [1, 2, 4, 98], "candid": 29, "cc18": [22, 26], "changelog": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "class": 14, "classif": 95, "cmi": [42, 43], "cmi_gaussian": 67, "code": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "comight": 43, "compar": [4, 6, 18, 22, 25, 95, 98], "complex": 95, "comput": [3, 7, 10, 16, 17, 20, 27, 32, 34, 97], "compute_forest_similarity_matrix": 91, "conda": 93, "conditional_resampl": 66, "content": 92, "contributor": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "creat": [36, 37, 38, 39, 40, 41, 42, 43], "criterion": 96, "data": [6, 9, 12, 15, 41, 43], "dataset": [0, 6, 19, 22, 23, 26, 58, 59, 60, 61, 62, 63, 64, 65], "decis": [1, 4, 5, 9, 18, 19, 21, 25, 28, 95, 96, 98], "decisiontreeclassifi": 79, "decisiontreeregressor": 80, "demonstr": 29, "depend": 93, "detect": [0, 4, 8, 98], "differ": [12, 23, 95], "dimension": [29, 41], "discontigu": 30, "discret": 9, "discuss": [22, 23, 29, 31], "distanc": [0, 39], "document": [0, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "each": [9, 29], "entropy_gaussian": 68, "estim": [0, 35], "evalu": [94, 96], "exampl": [4, 9, 64, 65, 75, 77, 94, 98], "experiment": [0, 66, 67, 68, 69, 70, 71, 72, 73], "extendedisolationforest": [9, 44], "extra": [22, 23, 25], "extratreeclassifi": 81, "extratreeregressor": 82, "extratreesclassifi": 45, "extratreesregressor": 46, "fast": 96, "featur": [29, 94], "fit": [6, 14, 36, 37, 38, 39, 40, 41, 42, 43], "forest": [2, 4, 6, 9, 11, 13, 14, 15, 22, 23, 24, 26, 94, 98], "formul": 95, "from": 93, "function": [0, 13], "gaussian": [2, 35, 36, 37, 38, 39, 40, 41, 42, 43], "gener": [9, 12, 15, 30, 31, 35], "get": 92, "guid": 99, "helling": 39, "histori": 100, "honest": [2, 95], "honestforestclassifi": 47, "honesti": [1, 4, 98], "honesttreeclassifi": 83, "hypothesi": [0, 4, 33, 98], "imag": 30, "import": 94, "independ": [40, 43], "indic": 92, "initi": [29, 30, 31], "instal": 93, "interpol": 12, "interv": 13, "iri": 19, "learn": [0, 4, 5, 98], "length": 9, "limit": 95, "make_gaussian_mixtur": 60, "make_joint_factor_model": 61, "make_marron_wand_classif": 62, "make_quadratic_classif": 63, "make_trunk_classif": 64, "make_trunk_mixture_classif": 65, "mathemat": 95, "matric": [30, 31], "matrix": [29, 31], "mean": 96, "meson": 93, "method": 12, "metric": 0, "mi": [35, 37, 40], "mi_gaussian": 69, "might": 40, "mixtur": 35, "model": [9, 14, 36, 37, 38, 39, 40, 41, 42, 43], "modifi": 43, "multi": [4, 5, 6, 29, 95, 98], "multiview": [41, 43], "multiviewdecisiontreeclassifi": 84, "multiviewrandomforestclassifi": 48, "mutual_info": [67, 68, 69], "mutual_info_ksg": 70, "nearestneighborsmetaestim": 49, "obliqu": [4, 15, 21, 22, 23, 24, 25, 26, 30, 31, 94, 95, 98], "obliquedecisiontreeclassifi": 85, "obliquedecisiontreeregressor": 86, "obliquerandomforestclassifi": 50, "obliquerandomforestregressor": 51, "onli": 42, "outlier": [0, 4, 8, 98], "output": 95, "overlap": 2, "p": [40, 43], "pariti": 24, "patch": [30, 31], "patchobliquedecisiontreeclassifi": 87, "patchobliquedecisiontreeregressor": 88, "patchobliquerandomforestclassifi": 52, "patchobliquerandomforestregressor": 53, "path": 9, "pauc": [35, 38], "pdf": 35, "perform": 6, "permut": 43, "permutationhonestforestclassifi": 74, "pip": 93, "plot": [2, 9, 13, 14, 15, 19, 24, 26, 30, 31], "posterior": 35, "practic": 95, "predict": [4, 9, 11, 12, 13, 14, 15, 22, 24, 26, 98], "prior": 35, "problem": 95, "project": [4, 21, 29, 30, 31, 98], "quantil": [4, 11, 12, 13, 14, 15, 98], "r": 38, "random": [4, 6, 11, 13, 14, 22, 23, 24, 26, 94, 98], "randomforestclassifi": 54, "randomforestregressor": 55, "recommend": 93, "refer": [2, 9, 22, 23, 92, 94, 95, 96], "regress": [15, 95], "regressor": [13, 14], "releas": 100, "result": [13, 14, 15], "sampl": [14, 29, 30], "scale": 29, "scikit": 0, "score": 6, "seri": 30, "set": 29, "simul": [2, 6, 24, 35, 36, 37, 38, 39, 40, 41, 42, 43, 71, 72, 73], "simulate_helix": 71, "simulate_multivariate_gaussian": 72, "simulate_spher": 73, "size": 23, "sklearn": [4, 18, 98], "sourc": 93, "spars": [4, 21, 24, 31, 98], "speed": 23, "split": 29, "splitter": [4, 28, 29, 30, 31, 98], "standard": 25, "start": 92, "stat": [74, 75, 76, 77, 78], "statist": [0, 35, 36, 37, 38, 39, 41, 42], "supervis": [0, 95], "surfac": [19, 25], "tabl": 92, "test": [0, 4, 33, 40, 43, 98], "time": [3, 7, 10, 16, 17, 20, 27, 30, 32, 34, 97], "tip": 95, "train": [9, 14, 19], "tree": [0, 1, 4, 5, 9, 18, 19, 21, 25, 28, 29, 30, 31, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 98], "treepl": [4, 18, 33, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98], "true": 35, "two": [36, 37, 38, 39, 40, 41, 42, 43, 96], "unsupervis": [0, 96], "unsuperviseddecisiontre": 89, "unsupervisedobliquedecisiontre": 90, "unsupervisedobliquerandomforest": 56, "unsupervisedrandomforest": 57, "us": [64, 65, 75, 77, 95, 98], "user": 99, "v": 23, "valu": [40, 43], "variabl": 43, "version": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "via": [1, 4, 98], "view": [4, 5, 6, 29, 98], "visual": [6, 9, 29], "within": 9, "x": [35, 41, 42], "z": [41, 42]}})